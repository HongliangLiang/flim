bug_id,summary,description,report_time,commit,files
11280,Bug 11280 [View Mgmt] Switching perspectives loses view maximized state,1. Open the CVS repository view in the Java perspective. 2. Double click the title bar to maximize it 3. Switch to the resource perspective. 4. Come back to the Java perspective. The CVS repository view is no longer maximized. A view that is maximized should stay maximized.,2002-03-13 12:40:54,508dbcb,"['tests/src/org/aspectj/systemtest/ajc150/508dbcb Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/reflect/508dbcb ReflectionBasedReferenceTypeDelegateFactory.java']"
28919,Bug 28919 waever tries to weave into native methods ...,"""If you don't find the exception below in a bug, please add a new bug To make the bug a priority, please include a test program that can reproduce this exception. bad non-abstract method with no code: private native int nativeMessagePumpInitialize() on public class plc.comm.pvi.PviCom$LinkEventHandlerImpl bad non-abstract method with no code: private native int nativeMessagePumpInitialize() on public class plc.comm.pvi.PviCom$LinkEventHandlerImpl java.lang.RuntimeException: bad non-abstract method with no code: private native int nativeMessagePumpInitialize() on public class plc.comm.pvi.PviCom$LinkEventHandlerImpl at org.aspectj.weaver.bcel.LazyMethodGen.<init>(Unknown Source) at org.aspectj.weaver.bcel.LazyClassGen.<init>(Unknown Source) at org.aspectj.weaver.bcel.BcelObjectType.getLazyClassGen(Unknown Source) at org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source) at org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles (Unknown Source) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (Unknown Source) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source) at org.aspectj.tools.ajc.Main.run(Unknown Source) at org.aspectj.tools.ajc.Main.runMain(Unknown Source) at org.aspectj.tools.ajc.Main.main(Unknown Source)""",2002-12-30 16:40:03,2781720,['weaver/src/org/aspectj/weaver/bcel/2781720 LazyMethodGen.java']
28974,"""Bug 28974 Compiler error when introducing a """"final"""" field""","""The aspect below fails to compile with 1.1b2, producing the compilation error: -------------------- $ ajc com/ibm/amc/*.java com/ibm/amc/ejb/*.java d:/eclipse/runtime-workspace-ajsamples/Mock EJBs/com/ibm/amc/DemoBeanEJB.java:1: Cannot assign a value to the final field com.ibm.amc.DemoBean.ajc$interField$co m_ibm_amc$verbose !! no source information available !! 1 error --------------------------- package com.ibm.amc; import com.ibm.amc.ejb.SessionBean; /** * @author colyer * * To change this generated comment edit the template variable """"typecomment"""": * Window>Preferences>Java>Templates. * To enable and disable the creation of type comments go to * Window>Preferences>Java>Code Generation. */ public aspect DemoBeanEJB { declare parents: DemoBean implements SessionBean; // THIS NEXT LINE IS THE CULPRIT static final boolean DemoBean.verbose = true; private transient String DemoBean.ctx; public void DemoBean.ejbActivate( ) { if ( verbose ) { System.out.println( """"ejbActivate Called"""" ); } } } ------------------- Making the inter-type declaration non-final solves the problem...""",2003-01-03 10:28:23,99a873c,['weaver/src/org/aspectj/weaver/99a873c AjcMemberMaker.java']
29186,Bug 29186 ajc -emacssym chokes on pointcut that includes an intertype method,,2003-01-08 21:22:48,c1260e6,"['asm/src/org/aspectj/asm/c1260e6 StructureModel.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/c1260e6 AsmBuilder.java', 'weaver/src/org/aspectj/weaver/c1260e6 AsmAdaptor.java', 'weaver/src/org/aspectj/weaver/c1260e6 Lint.java', 'weaver/src/org/aspectj/weaver/c1260e6 ResolvedTypeX.java', 'weaver/src/org/aspectj/weaver/c1260e6 Shadow.java', 'weaver/src/org/aspectj/weaver/bcel/c1260e6 BcelWeaver.java']"
29662,Bug 29662 VerifyError on accessing objects not accessible to the weaver: Incompatible object argument for invokespecial,"""I use aspectj1.1b4 (the version list box did not let me choose, it offered only """"unspecified""""). Compiling the program below yields a warning that a affected type is not exposed to the weaver. Running it crashes the program with this message: """"java.lang.VerifyError: (class: VerifyError, method: finalize signature: ()V) Incompatible object argument for invokespecial"""" public class VerifyError { public static void main(String args[]) { VerifyError ve = new VerifyError(); } protected void finalize() {} } aspect FinalizeContract { pointcut finalizeCall(Object o): this(Object+) && this(o) && execution(void finalize()); void around(Object o) throws Throwable: finalizeCall(o) { super.finalize(); proceed(o); } }""",2003-01-16 15:12:47,2d297d7,['tests/bugs/2d297d7 AroundAccess.java']
29665,Bug 29665 Inconsistant stack height,"""Using AspectJ1.1b4 running the following program crashes it with this message: """"Inconsistent stack height 0 != 2"""". While reducing my original program to the minimum example below I had also stack height 0 != 1, but I guess that is related, so I didn't reproduce it (mail me if this you need this, too). mport java.lang.reflect.Method; public class StackError { public static void main(String args[]) {} void assertTrue(String msg, boolean b) {} public void testEqualsNull() { StackError one = new StackError(); StackError two = new StackError(); assertTrue(""""equal"""", one.equals(two)); // does not work boolean yes = one.equals(two); // works } public boolean equals(Object other) { return true; } } aspect EqualsContract { pointcut equalsCall(Object thisOne, Object otherOne): target(Object+) && target(thisOne) && call(public boolean equals(Object+)) && args(otherOne) && !within(EqualsContract); boolean around(Object thisOne, Object otherOne): equalsCall(thisOne, otherOne) { boolean result = proceed(thisOne, otherOne); Class cls = thisOne.getClass(); String name = cls.getName(); boolean hasHashCode = false; try { Method m = cls.getDeclaredMethod(""""hashCode"""", null); String lookFor = """"public int """" + name + """".hashCode()""""; hasHashCode = lookFor.equals(m.toString()); } catch (NoSuchMethodException nsme) {} return result; } } The program does not crash if you comment out the line indicated with the """"does not work"""" comment. Note the line below that (comment """"works"""") does work.""",2003-01-16 15:18:00,6c9118b,"['tests/bugs/6c9118b StackError.java', 'tests/bugs/messyAround/cap/6c9118b OptionList.java', 'weaver/src/org/aspectj/weaver/bcel/6c9118b BcelShadow.java', 'weaver/src/org/aspectj/weaver/bcel/6c9118b LazyMethodGen.java']"
29769,Bug 29769 Ajde does not support new AspectJ 1.1 compiler options,"""The org.aspectj.ajde.BuildOptionsAdapter interface does not yet support the new AspectJ 1.1 compiler options. These need to be added to the interface, any old or renamed options deprecated, and then the correct processing needs to happen within Ajde to pass these options to the compiler. This enhancement is needed by the various IDE projects for there AspectJ 1.1 support.""",2003-01-19 11:42:17,85a827a,"['ajbrowser/src/org/aspectj/tools/ajbrowser/85a827a BrowserProperties.java', 'ajde/src/org/aspectj/ajde/85a827a BuildOptionsAdapter.java', 'ajde/src/org/aspectj/ajde/85a827a ProjectPropertiesAdapter.java', 'ajde/src/org/aspectj/ajde/internal/85a827a AspectJBuildManager.java', 'ajde/src/org/aspectj/ajde/internal/85a827a CompilerAdapter.java', 'ajde/src/org/aspectj/ajde/ui/internal/85a827a AjcBuildOptions.java', 'ajde/testdata/examples/figures-coverage/figures/85a827a Figure.java', 'ajde/testsrc/org/aspectj/ajde/85a827a AjdeTests.java', 'ajde/testsrc/org/aspectj/ajde/85a827a BuildConfigurationTests.java', 'ajde/testsrc/org/aspectj/ajde/85a827a BuildOptionsTest.java', 'ajde/testsrc/org/aspectj/ajde/85a827a NullIdeManager.java', 'ajde/testsrc/org/aspectj/ajde/85a827a NullIdeProperties.java', 'ajde/testsrc/org/aspectj/ajde/85a827a StructureModelRegressionTest.java', 'ajde/testsrc/org/aspectj/ajde/85a827a StructureModelTest.java', 'ajde/testsrc/org/aspectj/ajde/ui/85a827a StructureViewManagerTest.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/85a827a BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/85a827a AjBuildConfig.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/ajc/85a827a BuildArgParserTestCase.java']"
29934,Bug 29934 runtime NullPointerException when applying around advice to other around advice,"""When the program below is run, it produces a NullPointerException... java.lang.NullPointerException at A2.ajc$around$A2$3b6proceed(CflowCycles.java) at A2.ajc$around$A2$3b6_aroundBody3(CflowCycles.java:35) at Target.run(CflowCycles.java:24) at CflowCycles.run_aroundBody4(CflowCycles.java:8) at CflowCycles.main_aroundBody6(CflowCycles.java:24) at CflowCycles.main(CflowCycles.java:24) ---(in new/CflowCycles.java and in ajcTestsFailing.xml) import org.aspectj.testing.Tester; /** @testcase cflow cycles in advice from different aspects */ public class CflowCycles { public static void main( String args[] ) { Tester.expectEvent(""""target A1""""); Tester.expectEvent(""""target A2""""); new Target().run(); Tester.checkAllEventsIgnoreDups(); } } class Target { public void run(){ } } aspect A1 { pointcut TargetRunFlow () // ok if no cflow: within(Target) && execution(* *(..)) && !within (A1+); : !within(A1+) && !preinitialization(new(..)) && !initialization(new (..))//cflow(within(Target) && execution(* *(..))) && !within(A1+) ; Object around () : TargetRunFlow() { Tester.event(""""target A1""""); return proceed(); } // ok if in the same class } aspect A2 { pointcut TargetRun () : within(Target) && execution(* *(..)) && !within(A2+); ; Object around () : TargetRun() { Tester.event(""""target A2""""); return proceed(); } }""",2003-01-21 20:13:59,0fb5f69,['weaver/src/org/aspectj/weaver/bcel/0fb5f69 BcelShadow.java']
29959,Bug 29959 super call in intertype method declaration body causes VerifyError,"""AspectJ Compiler 1.1beta4 This program: aspect Foo { void A.foo() { } void B.foo() { super.foo(); } } class A { } class B extends A { } class Main { public static void main(String[] args) { new B(); } } causes this error at runtime: Exception in thread """"main"""" java.lang.VerifyError: (class: B, method: ajc$superDispatch$B$foo signature: ()V) Illegal use of nonvirtual function call at Main.main(Foo.java:11) Note that foo is never even called; the error happens at load time when the new B() expression causes class B to be loaded. There's no error if either one of the foo methods is declared in its class directly. This is kind of a showstopper... --Doug""",2003-01-22 07:10:28,3e2801a,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/3e2801a InterTypeConstructorDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/3e2801a SuperFixerVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/3e2801a InterTypeMethodBinding.java', 'org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/3e2801a AllocationExpression.java', 'org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/3e2801a ExplicitConstructorCall.java', 'org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/3e2801a MessageSend.java', 'org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/3e2801a MethodBinding.java', 'tests/bugs/3e2801a SuperToIntro.java']"
30026,Bug 30026 NullPointerException when compiling,With the following program I get a NullPointerException during compiling and a warning that the source code of Object is not available for weaving: public class NullPtr { public static void main(String args[]) { NullPtr np = new NullPtr(); np = null; } public void finalize() throws Throwable { } } aspect FinalizeContract { pointcut finalizeCall(Object o): this(Object+) && this(o) && execution(void finalize()); void around(Object o) throws Throwable: finalizeCall(o) { o.finalize(); // error ((NullPtr) o).finalize(); // ok proceed(o); } } It works if I comment out the line indicated by the // error comment or if I declare the aspect as privileged.,2003-01-22 17:06:50,8e6cef0,['tests/bugs/8e6cef0 Finalizer.java']
30168,Bug 30168 Error with certain combination of advice,,2003-01-24 07:25:03,d15eb32,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/d15eb32 ThisJoinPointVisitor.java', 'tests/bugs/crashes/test/d15eb32 Test3.java']"
30439,"""Bug 30439 spurious """"circular dependency"""" error""","""AspectJ Compiler 1.1beta4 This program: aspect Foo { pointcut p1(): execution(void f()) && cflow(execution(void f1())); pointcut p2(): execution(void f()) && cflow(execution(void f2())); before(): p1() { } after(): p1() { } before(): p2() { } after(): p2() { } } class A { void f1() { f(); } void f2() { f(); } void f() { } } results in these errors: circular dependency at method-execution(void A.f()) circular dependency at method-execution(void A.f()) circular dependency at method-execution(void A.f()) circular dependency at method-execution(void A.f()) 4 errors If I comment out any one of the four pieces of advice, all the errors go away. Also, assuming that there is a valid reason for printing this error sometimes, how come there's no line number? --Doug""",2003-01-28 16:20:10,4feb835,"['weaver/src/org/aspectj/weaver/4feb835 Advice.java', 'weaver/src/org/aspectj/weaver/4feb835 Lint.java', 'weaver/src/org/aspectj/weaver/4feb835 NewConstructorTypeMunger.java', 'weaver/src/org/aspectj/weaver/4feb835 ResolvedTypeX.java', 'weaver/src/org/aspectj/weaver/4feb835 Shadow.java', 'weaver/src/org/aspectj/weaver/4feb835 WeaverMessages.java', 'weaver/src/org/aspectj/weaver/4feb835 WeaverStateInfo.java', 'weaver/src/org/aspectj/weaver/4feb835 World.java', 'weaver/src/org/aspectj/weaver/bcel/4feb835 BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/4feb835 BcelWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/4feb835 ClassPathManager.java', 'weaver/src/org/aspectj/weaver/bcel/4feb835 LazyClassGen.java', 'weaver/src/org/aspectj/weaver/bcel/4feb835 LazyMethodGen.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 ArgsPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 CflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 DeclareParents.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 DeclarePrecedence.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 DeclareSoft.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 IfPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 PerFromSuper.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 ReferencePointcut.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 ThisOrTargetPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 TypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/4feb835 WildTypePattern.java', 'weaver/testsrc/org/aspectj/weaver/4feb835 BcweaverTests.java', 'weaver/testsrc/org/aspectj/weaver/4feb835 WeaverMessagesTestCase.java']"
30663,"""Bug 30663 lame error message: """"negation doesn't allow binding""""""","""AspectJ Compiler 1.1beta4 This program: public aspect Foo { pointcut p(int i): call(void f(i)); } produces these error messages: negation doesn't allow binding formal unbound in pointcut 2 errors It should say something like """"binding is only allowed in state-based pointcuts"""", and it should print the file and line number. --Doug""",2003-01-30 15:48:08,7d14432,"['tests/bugs/7d14432 BadBindingError.java', 'weaver/src/org/aspectj/weaver/bcel/7d14432 BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/patterns/7d14432 TypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7d14432 WildTypePattern.java']"
31423,Bug 31423 Pointcut adviceexecution() does not work,"""Pointcut adviceexecution() does not seem to pick advice execution join points in beta4. Here is a program that shows the problem: public class Test { public static void main(String[] args) { } } aspect Aspect1 { before() : execution(* Test.*(..)) { System.out.println(""""Reached """" + thisJoinPoint); } } aspect Aspect2 { before() : adviceexecution() && !within(Aspect2) { System.out.println(""""Reached """" + thisJoinPoint); } } F:\aop\bugs\1.1\b4\adviceexecution>ajc -version AspectJ Compiler 1.1beta4 F:\aop\bugs\1.1\b4\adviceexecution>ajc Test.java F:\aop\bugs\1.1\b4\adviceexecution>java Test Reached execution(void Test.main(String[]))""",2003-02-09 12:29:28,19c3e16,"['tests/bugs/19c3e16 AdviceExec.java', 'weaver/src/org/aspectj/weaver/patterns/19c3e16 KindedPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/19c3e16 SignaturePattern.java']"
31460,Bug 31460 Weaving class loader,"""Hi! As discussed on the mailing list a few days ago I implemented a weaving class loader to enable bytecode based weaving at class loading time. The class loader is based on the URLClassLoader and can be used like any other URLClassLoader. In addition to that you can add aspects to the weaving loader. These aspects got woven into each class that is loaded. The test cases for the class loader aren't implemented yet, I am still thinking about how to implement them. I will contribute them later, okay? -Martin""",2003-02-10 10:35:35,33d8ee9,"['org.aspectj.ajdt.core/testdata/src1/33d8ee9 LTWHelloWorld.java', 'org.aspectj.ajdt.core/testdata/src1/ltw/33d8ee9 LTWPackageTest.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/33d8ee9 BcweaverJarMaker.java', 'util/src/org/aspectj/util/33d8ee9 FileUtil.java', 'weaver/src/org/aspectj/weaver/33d8ee9 ExtensibleURLClassLoader.java', 'weaver/src/org/aspectj/weaver/33d8ee9 WeavingURLClassLoader.java', 'weaver/src/org/aspectj/weaver/tools/33d8ee9 GeneratedClassHandler.java', 'weaver/src/org/aspectj/weaver/tools/33d8ee9 WeavingAdaptor.java', 'weaver/src/org/aspectj/weaver/tools/33d8ee9 WeavingClassLoader.java', 'weaver/testsrc/33d8ee9 BcweaverModuleTests.java', 'weaver/testsrc/org/aspectj/weaver/33d8ee9 BcweaverTests.java', 'weaver/testsrc/org/aspectj/weaver/33d8ee9 WeavingURLClassLoaderTest.java']"
32239,Bug 32239 Dumps assembly code if Object[] used in args (BcelRenderer.java:152),,2003-02-19 10:07:28,ae0ef30,"['weaver/src/org/aspectj/weaver/bcel/ae0ef30 BcelRenderer.java', 'weaver/src/org/aspectj/weaver/bcel/ae0ef30 Utility.java']"
32421,Bug 32421 can't resolve nested public interfaces,"""This may be caused by the bug as 32399 file TransactionTest.java: import sub.ExecutionMonitor; public class TransactionTest { static Transaction theTransaction; private void assertCommitted() { theTransaction.getCount(""""method-execution"""", """"commit""""); } static aspect MonitorTest { declare parents: Transaction implements ExecutionMonitor.MonitoredItem; } } class Transaction { } file sub/ExecutionMonitor.aj: package sub; public aspect ExecutionMonitor { public interface MonitoredItem { int getCount(String eventType, String eventName); } public int MonitoredItem.getCount(String eventType, String eventName) { return 0; } } sample compilation: C:\devel>ajc -1.4 TransactionTest.java sub\ExecutionMonitor.aj can't bind type name 'ExecutionMonitor$MonitoredItem' C:/devel/TransactionTest.java:7: The method getCount(java.lang.String, java.lang .String) is undefined for the type Transaction theTransaction.getCount(""""method-execution"""", """"commit""""); ^^^^^^^^ 2 errors""",2003-02-20 17:33:37,0a175d2,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/0a175d2 EclipseScope.java', 'tests/bugs/0a175d2 InnerPointcut.java', 'tests/bugs/interfaceNames/0a175d2 TransactionTest.java', 'tests/bugs/interfaceNames/sub/0a175d2 ExecutionMonitor.java', 'tests/new/0a175d2 EachObjectInDeepPackage.java']"
32463,Bug 32463 ajc reports error when encountering static declaration of nested classes,"""Version: AspectJ Compiler 1.1beta4 The ajc compiler issues a spurious error message and exits with a negative error code when weaving code containing static declaration of a nested class. The compiler seem to write the classfiles correctly but the negative exit status causes problems when e.g. using the AjcCompilerAdapter in ant. To reproduce: 1) Extract the following two files into an empty directory: // File: A.aj: aspect A { pointcut withinTest(): within(Test); pointcut callToHandleOrder() : (withinTest() && call(* handleOrder(..))); Object around(): callToHandleOrder() { return """"DUMMY inserted by ASPECT"""" ; } } // End of File A.aj // File : Test.java public class Test { // Commenting out the static declaration makes everything work OK static { class StaticNestedClass { } } public static void main(String[] args) { System.out.println(new Test().handleOrder(""""test"""")); } private String handleOrder(String t) { return t; } } // End of Test.java 2) Compile the files ajc -sourceroots . -verbose Output: ----- compiling c:/aspectj1.1/doc/examples/bug/./A.aj compiling c:/aspectj1.1/doc/examples/bug/./Test.java weaving might need to weave [UnwovenClassFile(null, Test$1$StaticNestedClass), UnwovenClassFile(null, A), UnwovenClassFile(null, Test)](world=true) wrote class file: c:\aspectj1.1\doc\examples\bug\A.class can't find type Test$1 wrote class file: c:\aspectj1.1\doc\examples\bug\Test$1$StaticNestedClass.class wrote class file: c:\aspectj1.1\doc\examples\bug\Test.class 1 error ------""",2003-02-21 05:59:47,d1e5c0a,"['tests/bugs/d1e5c0a WeaveLocal.java', 'weaver/src/org/aspectj/weaver/d1e5c0a NameMangler.java', 'weaver/src/org/aspectj/weaver/d1e5c0a ResolvedTypeX.java', 'weaver/src/org/aspectj/weaver/d1e5c0a TypeX.java', 'weaver/src/org/aspectj/weaver/patterns/d1e5c0a WithinPointcut.java', 'weaver/testsrc/org/aspectj/weaver/d1e5c0a TypeXTestCase.java']"
33474,Bug 33474 bad source locations for declare error/warning,,2003-02-27 14:03:15,989aaf7,"['ajde/testdata/examples/declare-warning/apackage/989aaf7 InitCatcher.java', 'ajde/testdata/examples/declare-warning/apackage/989aaf7 SomeClass.java', 'ajde/testsrc/org/aspectj/ajde/989aaf7 AjdeTestCase.java', 'ajde/testsrc/org/aspectj/ajde/989aaf7 AjdeTests.java', 'ajde/testsrc/org/aspectj/ajde/989aaf7 CompilerMessagesTest.java', 'ajde/testsrc/org/aspectj/ajde/989aaf7 NullIdeManager.java', 'ajde/testsrc/org/aspectj/ajde/989aaf7 NullIdeTaskListManager.java']"
33635,Bug 33635 Negation of if pointcut does not work,,2003-03-02 20:01:54,cb77524,"['tests/bugs/cb77524 NotIf.java', 'weaver/src/org/aspectj/weaver/patterns/cb77524 IfPointcut.java']"
33948,Bug 33948 inter-type no-arg constructor declaration conflict with compiler-generated constructor,"""Get error """"inter-type declaration from A conflicts with existing member"""" when declaring a no-arg constructor in an aspect on another type which has no constructors. Likely the compiler is generating a default constructor which collides in the weaver. See test case: tests/bugs/ConstructorDeclaration.java Can the weaver reliably check that a default constructor was generated by the compiler (ours or javac or ...)? Otherwise, this could be a known limitation.""",2003-03-06 02:48:01,6a8fa08,['tests/bugs/6a8fa08 ConstructorDeclaration.java']
34820,Bug 34820 ajc -aspectpath fails with NPE for cflow pointcuts,,2003-03-12 10:36:41,db37189,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/db37189 EclipseAdvice.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/db37189 EclipseFactory.java']"
34858,Bug 34858 Weaver crash,,2003-03-12 14:50:32,7746fcb,"['tests/bugs/7746fcb CflowBinding.java', 'tests/bugs/7746fcb CflowBindingOrig.java', 'weaver/src/org/aspectj/weaver/patterns/7746fcb CflowPointcut.java']"
34925,Bug 34925 compiler crash on yesterday's rc1 build,,2003-03-13 11:58:52,56cc4f2,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/56cc4f2 EclipseShadow.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/56cc4f2 AjProblemReporter.java', 'tests/bugs/56cc4f2 ConvertToUnchecked.java']"
34951,Bug 34951 NPE compiling without aspectjrt.jar,"""Compiling spacewar without specifying aspectjrt.jar on the classpath causes a NPE. Expected an error message """"aspectjrt.jar required"""". Steps to reproduce 1) install latest 2) cd doc/examples 3) java -jar ../../lib/aspectjtools.jar -verbose @spacewar/debug.lst RESULT:NPE in attached log""",2003-03-13 14:38:58,f236927,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f236927 AjBuildManager.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/f236927 BasicCommandTestCase.java']"
35725,Bug 35725 Inter type declaration to base class not seen by derived class,"""The following code shows what I believe is an incorrect error - the base class AImpl is made concrete by the aspect Af, but the compilation of BImpl does not recognize this fact. This problem is for version 1.1rc1 and is not seen in 1.0.6. // --------------------- // A.java package a_intf; public interface A { A f(); } // --------------------- // AImpl.java package a_impl; import a_intf.A; public class AImpl implements A { } // --------------------- // Af.java package a_impl; import a_intf.A; aspect Af { public A AImpl.f() { System.out.println( """"f called"""" ); return null; } } // --------------------- // B.java package b_intf; import a_intf.A; public interface B extends A { B g(); } // --------------------- // BImpl.java package b_impl; import a_impl.AImpl; import b_intf.B; public class BImpl extends AImpl implements B { public B g() { System.out.println( """"g called"""" ); return null; } } // Compiler Error: // BImpl.java:7 Class must implement the inherited abstract method a_intf.A.f()""",2003-03-26 15:16:24,11b3b07,"['tests/bugs/interInherit/a_impl/11b3b07 AImpl.java', 'tests/bugs/interInherit/a_impl/11b3b07 Af.java', 'tests/bugs/interInherit/a_intf/11b3b07 A.java', 'tests/bugs/interInherit/b_impl/11b3b07 BImpl.java', 'tests/bugs/interInherit/b_intf/11b3b07 B.java']"
36046,Bug 36046 inter-type declaration bug with abstract classes,"""This error occurs when you do an inter-type declaration on an interface, use declare parents to make an abstract base class implement it, and then try to use the declared (method), it fails. If you make the base class concrete, then this doesn't fail. The following code demonstrates the error. If you run java Driver you get: java.lang.AbstractMethodError: Derived.getExecutions(Ljava/lang/String;)I at Driver.main(Driver.java:23) Exception in thread """"main"""" public class Driver { public static void main(String args[]) { Derived generator = new Derived(); System.out.println(generator.getExecutions(""""processEvents"""")); } static aspect MonitorBase { declare parents: Base implements ExecutionMonitor.MonitoredItem; } } class Derived extends Base { public String getName() { return null; } } abstract class Base { abstract public String getName(); } aspect ExecutionMonitor { /** marker interface to indicate the execution monitor should track calls and executions on this class. */ public interface MonitoredItem { int getExecutions(String methodName); } /** a Map of events to mutable integers */ public int MonitoredItem.getExecutions(String methodName) { return 0; } }""",2003-04-03 18:21:57,808bae8,"['tests/bugs/interAbstract/808bae8 Driver.java', 'weaver/src/org/aspectj/weaver/bcel/808bae8 BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/808bae8 LazyClassGen.java', 'weaver/src/org/aspectj/weaver/bcel/808bae8 LazyMethodGen.java']"
36234,Bug 36234 out of memory error when compiling,"""Getting an out of memory error when compiling with Ajc 1.1 RC1. I know this is not very descriptive, but maybe you can point me into a direction of getting more output. here some additional information though: Code base is medium size (about 1500 classfiles) I removed all my aspects and still receive the error. Running it from the command line: ajc -classpath whateveritis -sourceroots whateveritis -d whateveritis""",2003-04-08 14:04:10,b3b1eec,['org.aspectj.ajdt.core/src/org/aspectj/tools/ajc/b3b1eec Main.java']
36430,Bug 36430 Support -Xreweavable option,,2003-04-13 03:35:26,16a0abd,"['ajde/testdata/ReweavableTest/16a0abd CalculatePI.java', 'ajde/testdata/ReweavableTest/tjp/16a0abd Demo.java', 'ajde/testdata/ReweavableTest/tjp/16a0abd GetInfo.java', 'ajde/testsrc/org/aspectj/ajde/16a0abd AjdeTests.java', 'ajde/testsrc/org/aspectj/ajde/16a0abd ReweavableTestCase.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/16a0abd BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/16a0abd AjBuildConfig.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/16a0abd AjBuildManager.java', 'taskdefs/src/org/aspectj/tools/ant/taskdefs/16a0abd AjcTask.java', 'testing/src/org/aspectj/testing/harness/bridge/16a0abd CompilerRun.java', 'weaver/src/org/aspectj/weaver/16a0abd Advice.java', 'weaver/src/org/aspectj/weaver/16a0abd CrosscuttingMembers.java', 'weaver/src/org/aspectj/weaver/16a0abd CrosscuttingMembersSet.java', 'weaver/src/org/aspectj/weaver/16a0abd Shadow.java', 'weaver/src/org/aspectj/weaver/16a0abd WeaverStateInfo.java', 'weaver/src/org/aspectj/weaver/bcel/16a0abd BcelCflowStackFieldAdder.java', 'weaver/src/org/aspectj/weaver/bcel/16a0abd BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/16a0abd BcelObjectType.java', 'weaver/src/org/aspectj/weaver/bcel/16a0abd BcelWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/16a0abd LazyClassGen.java', 'weaver/src/org/aspectj/weaver/patterns/16a0abd CflowPointcut.java']"
36564,Bug 36564 Internal compiler error,"""Eclipse: 2.1.0, 200302211557 AspectJ: 1.1.1 I get the following internal error when using """"thisJoinPoint.getStaticPart()"""" in around advice at a call joinpoit (source below). Using just """"thisJoinPoint"""" is fine. java.lang.NullPointerException at org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode (MessageSend.java:40) at org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode (MessageSend.java:44) at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.analyseCode (AbstractMethodDeclaration.java:106) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode (TypeDeclaration.java:445) at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode (CompilationUnitDeclaration.java:76) at org.eclipse.jdt.internal.compiler.Compiler.process (Compiler.java:539) at org.aspectj.ajdt.internal.compiler.AjCompiler.process (AjCompiler.java:65) at org.eclipse.jdt.internal.compiler.Compiler.compile (Compiler.java:340) at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile (AbstractImageBuilder.java:232) at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile (AbstractImageBuilder.java:171) at org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run (AjBuildManager.java:655) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (AjBuildManager.java:139) at org.aspectj.ajde.internal.CompilerAdapter.compile (CompilerAdapter.java:92) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:213) Exceptions.java AspectJ Bugs/src/compiler Source: package compiler; import java.io.*; /** * @author websterm * * To change this generated comment go to * Window>Preferences>Java>Code Generation>Code and Comments */ public class Test { public static void main(String[] args) throws Exception{ FileInputStream in = new FileInputStream(""""test""""); } } /* * Created on 14-Apr-03 * * To change this generated comment go to * Window>Preferences>Java>Code Generation>Code and Comments */ package compiler; import java.io.*; import org.aspectj.lang.*; /** * @author websterm * * To change this generated comment go to * Window>Preferences>Java>Code Generation>Code and Comments */ public aspect Exceptions { pointcut exceptionMethods () : call(* java.io.*.*(..) throws IOException); Object around () throws IOException : exceptionMethods() && !within (Exceptions) { Object obj = proceed(); System.out.println(thisJoinPoint.getStaticPart()); return obj; } }""",2003-04-16 08:42:21,0a8dbde,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/0a8dbde ThisJoinPointVisitor.java', 'tests/bugs/tjpStaticPart/0a8dbde Exceptions.java', 'tests/bugs/tjpStaticPart/0a8dbde Test.java']"
36803,Bug 36803 BCException thrown by AspectJ 1.1rc1,[iajc] expected state: resolved got: concrete [iajc] expected state: resolved got: concrete [iajc] org.aspectj.weaver.BCException: expected state: resolved got: concrete [iajc] at org.aspectj.weaver.patterns.Pointcut.assertState (Pointcut.java:236) [iajc] at org.aspectj.weaver.patterns.Pointcut.concretize (Pointcut.java:126) [iajc] at org.aspectj.weaver.patterns.CflowPointcut.concretize1 (CflowPointcut.java:143) [iajc] at org.aspectj.weaver.patterns.NotPointcut.concretize1 (NotPointcut.java:94) [iajc] at org.aspectj.weaver.patterns.AndPointcut.concretize1 (AndPointcut.java:88) [iajc] at org.aspectj.weaver.patterns.ReferencePointcut.concretize1 (ReferencePointcut.java:270) [iajc] at org.aspectj.weaver.patterns.AndPointcut.concretize1 (AndPointcut.java:88) [iajc] at org.aspectj.weaver.patterns.ReferencePointcut.concretize1 (ReferencePointcut.java:270) [iajc] at org.aspectj.weaver.patterns.Pointcut.concretize (Pointcut.java:127) [iajc] at org.aspectj.weaver.patterns.Pointcut.concretize (Pointcut.java:120) [iajc] at org.aspectj.weaver.Advice.concretize(Advice.java:207) [iajc] at org.aspectj.weaver.CrosscuttingMembers.addShadowMunger (CrosscuttingMembers.java:78) [iajc] at org.aspectj.weaver.CrosscuttingMembers.addShadowMungers (CrosscuttingMembers.java:72) [iajc] at org.aspectj.weaver.ResolvedTypeX.collectCrosscuttingMembers (ResolvedTypeX.java:328) [iajc] at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect (CrosscuttingMembersSet.java:54) [iajc] at org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave (BcelWeaver.java:164) [iajc] at org.aspectj.weaver.bcel.BcelWeaver.weave (BcelWeaver.java:214) [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFile s(AjBuildManager.java:394) [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (AjBuildManager.java:149) [iajc] at org.aspectj.ajdt.ajc.AjdtCommand.runCommand (AjdtCommand.java:55) [iajc] at org.aspectj.tools.ajc.Main.run(Main.java:216) [iajc] at org.aspectj.tools.ajc.Main.runMain(Main.java:155) [iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.execute (AjcTask.java:646) [iajc] at org.apache.tools.ant.UnknownElement.execute (UnknownElement.java:193) [iajc] at org.apache.tools.ant.Task.perform(Task.java:341) [iajc] at org.apache.tools.ant.Target.execute(Target.java:309) [iajc] at org.apache.tools.ant.Target.performTasks(Target.java:336) [iajc] at org.apache.tools.ant.Project.executeTarget (Project.java:1339) [iajc] at org.apache.tools.ant.Project.executeTargets (Project.java:1255) [iajc] at org.apache.tools.ant.Main.runBuild(Main.java:609) [iajc] at org.apache.tools.ant.Main.start(Main.java:196) [iajc] at org.apache.tools.ant.Main.main(Main.java:235),2003-04-23 12:56:03,1e502f5,"['tests/bugs/1e502f5 CflowConcrete.java', 'weaver/src/org/aspectj/weaver/patterns/1e502f5 KindedPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/1e502f5 Pointcut.java', 'weaver/src/org/aspectj/weaver/patterns/1e502f5 WithinPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/1e502f5 WithincodePointcut.java']"
36936,Bug 36936 Error when introducing members of type Class,"""Using AspectJ 1.1 RC1 public aspect Asp { public Class Trg.member = String.class; } public class Trg { public static void main(String args[]) { new Trg(); System.out.println(""""All ok""""); } } Compiling with """"ajc Asp.java Trg.java"""" and running Trg, prints """"All ok"""", as it should. Compiling with """"ajc Trg.java Asp.java"""" and running Trg gives: Exception in thread """"main"""" java.lang.NoSuchFieldError: class$0 at Asp.ajc$interFieldInit$Asp$Trg$member(Asp.java:2) at Trg.<init>(Trg.java:1) at Trg.main(Trg.java:3) Note, introduced field must be of type Class, or array of Classes, works fine else.""",2003-04-25 16:36:56,8d793a3,"['tests/bugs/interSpecials/8d793a3 Asp.java', 'tests/bugs/interSpecials/8d793a3 Trg.java']"
37021,Bug 37021 source path wrong in declare warning on binary files,"""In declare warning messages when targeting .class files from -injars, the source path is listed in the form """"app.Main.class"""" rather than """"app/Main.[java|aj]"""". See tests/new/binaryWarnings/.. for code to run to see the problem. Limitations of the tests: - These tests return false positives when detecting this error because filename checking is not enabled in harness verification of messages. - I have also see the filenames not appear at all, but these tests do not reproduce that problem. (I saw it in AJDT, so perhaps if the filename makes no sense to AJDT, AJDT simply omits it.)""",2003-04-28 15:03:42,9b30f9f,"['tests/new/binaryWarnings/src/app/9b30f9f Main.java', 'tests/new/binaryWarnings/src/aspects/9b30f9f MainWarnings.java']"
37739,Bug 37739 Unexpected Xlint:unresolvableMember warning with withincode,"""The following code produces an Xlint:unresolvableMember warning: class A { A(Class type) {} A() { this(String.class); } } class B { public void test() { } public void test2() { test(); } } aspect C { void around() : (call (void B.test()) && withincode (void B.test2())) { proceed(); } } The warning text is: Warning.java:22 can not resolve this member: void A.<catch>(java.lang.ClassNotFoundException) [Xlint:unresolvableMember] Line 22 is the line in the aspect that says """"withincode"""". If I comment out the aspect, the warning goes away. Also, if I comment out A's default constructor, it goes away. The """"String.class"""" seems to have something to do with the warning. I can reproduce this with 1.1rc1 and 1.1rc2.""",2003-05-15 21:20:16,2072ac1,"['tests/bugs/2072ac1 CatchSig.java', 'weaver/src/org/aspectj/weaver/bcel/2072ac1 BcelShadow.java']"
38131,Bug 38131 ajc needs -d . option while correctly compiling classes from subpackage,,2003-05-27 01:46:58,c509c6f,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/c509c6f AjBuildManager.java', 'org.aspectj.ajdt.core/testdata/src1/c509c6f WrongPackage.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/c509c6f BasicCommandTestCase.java']"
38717,"""Bug 38717 """".lst"""" file parsing errors should include sourceline information""","""To check for this bug add an erroneous line to an """".lst"""" file and compile it with AJDE. The error message returned is project-specific. It should be specific to the """".lst"""" file in which the error originated (i.e. the message needs a SourceLocation).""",2003-06-10 12:03:37,a26cac9,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/a26cac9 AjdtCommand.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/a26cac9 BuildArgParser.java']"
38824,Bug 38824 Anomalous handling of inter-type declarations to abstract base classes in aspectj 1.1,"""Version 1.1 of aspectj does not handle correctly inter-type declarations to abstract base classes. This appears when the following pattern is present in the code: Suppose there is an interface InterfaceA, another interface InterfaceB and a third interface InterfaceC extending InterfaceA and InterfaceB and containing some method declarations of its own. Suppose also there is an aspect AConcretisingAspect that contains inter-type declarations providing default implementations for all InterfaceC's methods (both own and inherited). Now suppose we have a class hierarchy emanating from an abstract class BaseClass, and an aspect BaseClassAspect declaring that BaseClass implements InterfaceC: aspect BaseClassAspect { declare parents: BaseClass implements InterfaceC; } Unfortunately, during compilation iajc complains for each offspring of BaseClass that it does not implement any of the abstract methods of InterfaceA and InterfaceB (but not of InterfaceC's own!). This does not happen when BaseClass is not abstract; and it does not occur in version 1.0.6 of aspectj.""",2003-06-12 05:35:45,0071cb4,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/0071cb4 AjProblemReporter.java', 'tests/bugs/0071cb4 AbstractBaseAndInterTypeInterface.java', 'weaver/src/org/aspectj/weaver/0071cb4 ResolvedTypeX.java']"
39436,Bug 39436 [Tasks] No summary shown in status line,"""build I20030625 The old tasks view showed a summary of the number of tasks, errors, warnings and infos in the status line. This is missing in the reworked view.""",2003-06-27 14:32:14,d90acdc,['weaver/src/org/aspectj/weaver/bcel/d90acdc LazyMethodGen.java']
39458,Bug 39458 Compiler crash in ajc 1.1,,2003-06-29 23:42:42,ba41fae,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/ba41fae AccessForInlineVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/ba41fae AdviceDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/ba41fae PrivilegedHandler.java', 'tests/bugs/ba41fae MissingImport.java', 'tests/bugs/ba41fae NewVoid.java']"
39626,Bug 39626 Compiler error when compiling a buggy class,"""I use AspectJ 1.1 from within eclipse. After some time of developing, I get following stack trace (Wrapped in the eclipse gui), when I try to compile a java file with a huge amount of syntax errors, missing variables, and other problems. As soon as I have fixed these issues, I can comnpile normally as ever. Unfortunatly I can not provide any more detailed information because: this errors pops up randomly, disappears when the bug is fixed, I have neither the time nor the permission to create a more accurate sample java.lang.NullPointerException at java.lang.String.<init>(String.java:214) at org.aspectj.ajdt.internal.core.builder.AsmBuilder.visit (AsmBuilder.java:231) at org.aspectj.ajdt.internal.core.builder.AsmBuilder.visit (AsmBuilder.java:259) at org.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration.traverse (AnonymousLocalTypeDeclaration.java:138) at org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.traverse (QualifiedAllocationExpression.java:342) at org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse (MessageSend.java:299) at org.eclipse.jdt.internal.compiler.ast.Block.traverse(Block.java:147) at org.eclipse.jdt.internal.compiler.ast.ForStatement.traverse (ForStatement.java:347) at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse (MethodDeclaration.java:157) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse (TypeDeclaration.java:946) at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse (CompilationUnitDeclaration.java:303) at org.aspectj.ajdt.internal.core.builder.AsmBuilder.internalBuild (AsmBuilder.java:169) at org.aspectj.ajdt.internal.core.builder.AsmBuilder.build (AsmBuilder.java:66) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.finishedCompilationUnit (EclipseFactory.java:303) at org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:67) at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:338) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation (AjBuildManager.java:372) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:133) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (AjBuildManager.java:78) at org.aspectj.ajde.internal.CompilerAdapter.compile (CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:164) LoadTest.java CrefoClient/src/com/dcbank/scoring/socketserver kind regards Arno Schmidmeier""",2003-07-04 05:26:04,7886970,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/7886970 AsmBuilder.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/core/builder/7886970 AjdtBuilderTests.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/core/builder/7886970 AsmBuilderTest.java']"
39842,Bug 39842 allow use of an environment variable to set compiler arguments,"""I'm trying to create a special jsp compilation servlet in Tomcat 4.x that uses the aspectj compiler. I can plug in the compiler adapter, but I don't have control of the ant code they use to invoke the compiler, so I'd like to use an environment variable to do this (apparently the only mechanism they do support). I'm doing this so I can pass an aspectpath in to weave aspects into the compiled jsp servlet.""",2003-07-09 19:31:03,2502ee5,"['taskdefs/src/org/aspectj/tools/ant/taskdefs/2502ee5 AjcTask.java', 'taskdefs/src/org/aspectj/tools/ant/taskdefs/2502ee5 ICommandEditor.java', 'taskdefs/testsrc/org/aspectj/tools/ant/taskdefs/2502ee5 AjcTaskTest.java']"
39959,Bug 39959 AJC Compiler generates invalid class files under certain circunstances.,I made a package (I will attach it to this bug with the name bug.zip) which shows a sample Java program that correctly runs when compiled with javac and have classloading problems every time it is compiled with ajc. Please see the file README.TO.DEMONSTRATE.BUG inside the bug.zip archive for detailed (although simple) instructions on reproducing the bug. There are two shell scripts attached to make things easier. Please keep me informed of the status of this issue.,2003-07-11 16:01:33,ee03a3e,['tests/bugs/bootstrapClasspath/ee03a3e UsesDOMParser.java']
39974,Bug 39974 Some strange error when compiling the observer example with JBuilder7 integrated AJDE,"""When I compiled the observer/subject protocol example with JBuilder7 integrated AJDE,there was a strange internal error C:/JBuilder7/extras/aspectj-110/doc/examples/observer/Observer.java:0: Internal compiler error java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.makeResolvedMember (Unknown Source) at org.aspectj.ajdt.internal.core.builder.AsmBuilder.visit(Unknown Source) at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse (Unknown Source) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse (Unknown Source) at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse (Unknown Source) at org.aspectj.ajdt.internal.core.builder.AsmBuilder.internalBuild (Unknown Source) at org.aspectj.ajdt.internal.core.builder.AsmBuilder.build(Unknown Source) at org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.finishedCompilationUnit (Unknown Source) at org.aspectj.ajdt.internal.compiler.AjCompiler.process(Unknown Source) at org.eclipse.jdt.internal.compiler.Compiler.compile(Unknown Source) at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile (Unknown Source) at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile (Unknown Source) at org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(Unknown Source) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (Unknown Source) at org.aspectj.ajde.internal.CompilerAdapter.compile(Unknown Source) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (Unknown Source) I firstly fix it by changing the interface Subject and Observer like this: interface Observer { void update();} interface Subject { Object getData(); } then it could compile successfully ,however,I immediately got another confusing.The compiler only made Display.java Observer.java Subject.java SubjectObserverProtocol.java and SubjectObserverProtocolImpl.java but ignoring the others.I don't know why,it seems to be a bug. Meanwhile, I use ajc command-line to compile this example ,it can get through without any exceptions.""",2003-07-12 06:00:12,f5d31ba,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f5d31ba AsmBuilder.java']
39993,Bug 39993 ajc stack trace on declaring hashcode() method in aspect,From an email sent to the user's list 6/26/2003: ------------------------------------------ ajc 1.1 NPE when an aspect declares hashcode() as follows: interface Identifiable { void setId(Id id); Id getId(); } aspect IdentifiableAspect { private Id Identifiable.id = null; public Id Identifiable.getId() { return this.id; } public void Identifiable.setId(Id id) { this.id = id; } public int Identifiable.hashCode() { return (this.getId() == null) ? super.hashCode() : this.getId().hashCode(); } } A workaround for callers the compiler controls is to replace the declaration with around advice: int around(Identifiable i): target(i) && call(public int hashCode()) { return (i.getId() == null) ? proceed(i) : i.getId().hashCode(); },2003-07-13 15:02:03,026b272,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/026b272 InterSuperFixerVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/026b272 InterSuperReference.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/026b272 InterTypeDeclaration.java', 'tests/bugs/026b272 MultipleSuperCf.java', 'tests/bugs/026b272 OverridingInterfaceObjectMethod.java', 'weaver/src/org/aspectj/weaver/bcel/026b272 BcelTypeMunger.java']"
40192,Bug 40192 build cancel during weaving,The build can not be cancelled during the bytecode weaving stage.,2003-07-16 06:57:36,183fc23,"['ajde/src/org/aspectj/ajde/internal/183fc23 BuildNotifierAdapter.java', 'ajde/testdata/BuildCancelling/183fc23 Cl1.java', 'ajde/testdata/BuildCancelling/183fc23 Cl2.java', 'ajde/testdata/BuildCancelling/183fc23 Cl3.java', 'ajde/testdata/BuildCancelling/183fc23 HW.java', 'ajde/testsrc/org/aspectj/ajde/183fc23 AjdeTests.java', 'ajde/testsrc/org/aspectj/ajde/183fc23 BuildCancellingTest.java', 'bridge/src/org/aspectj/bridge/183fc23 IProgressListener.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/183fc23 AjCompilerAdapter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/183fc23 WeaverAdapter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/183fc23 AjBuildManager.java']"
40257,"""Bug 40257 parsing of """"../"""" paths in LST files is broken""","""Relative paths (e.g. """"../"""") are no longer parser properly in AJDE 1.1.0.""",2003-07-16 15:06:12,acdf688,"['ajbrowser/testsrc/org/aspectj/tools/ajbrowser/acdf688 BrowserManagerTest.java', 'ajbrowser/testsrc/org/aspectj/tools/ajbrowser/acdf688 InteractiveBrowserTest.java', 'ajde/src/org/aspectj/ajde/ui/swing/acdf688 CompilerMessagesCellRenderer.java', 'org.aspectj.ajdt.core/testdata/bug-40257/d1/acdf688 A.java', 'org.aspectj.ajdt.core/testdata/bug-40257/d1/d2/acdf688 B.java', 'org.aspectj.ajdt.core/testdata/bug-40257/d3/acdf688 C.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/ajc/acdf688 AjdtAjcTests.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/ajc/acdf688 BuildArgParserTestCase.java']"
40380,Bug 40380 AspectJ does not honour libraries defined via Project Properties,"""AJDT 1.1.3, Eclipse 2.1 To build a JDK 1.4. program under Eclipse using JDK 1.3 the appropriate build library should be selected in the Project Properties """"Java Build Path"""". However AspectJ continues to use the JDK associated with Eclipse so errors result from using 1.4 APIs. The same will occur running Eclipse under 1.4 and compiling programs for 1.5 Testcase: 1. Run Eclipse under JDK 1.3 2. Create a Java project which uses a 1.4 JDK 3. Write a Java classes that uses 1.4 APIs e.g. public class TestStringBuffer { public static void main(String[] args) { new StringBuffer(""""Test"""").indexOf(""""T""""); } } 4. Convert to AspectJ project""",2003-07-17 11:08:28,d5ea336,"['ajde/src/org/aspectj/ajde/internal/d5ea336 CompilerAdapter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/d5ea336 AjdtCommand.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/d5ea336 BuildArgParser.java']"
40534,Bug 40534 Declare warning/error output - more detail required.,"""At present the declare warning and declare error functionality of the compiler provides no detailed information about what it is in the user code that has led to the generation of the compile-time warning or error. Consider the following test case... public class A { public static void main(String[] args) { A a = new A(); a.doSomething(); System.out.println(""""All done""""); } void doSomething() { System.out.println(""""Doing something""""); } } // end of class A public aspect MyAspect { pointcut noDoing() : call(* *.doSomething(..)); declare warning : noDoing() : """"Don't do it!""""; } When I compile these two files I get the following warning ... c:\src\A.java:16 Don't do it! ..which is great if all I want to know is where the offending code is. But not nearly enough if I want to know what it is on the line that is contravening the policy (or policies) that I have specified in my aspect. In the above example it would be even more useful if the warning message was something like ... c:\src\A.java:16 Don't do it! : calling method : void A.doSomething() For large projects where there is an architectural imperative to reduce or completely remove coupling between certain components declare warning/error would be of far greater use if it could return more detailed info to say *why* not just *where* the desired enforcement rules have been broken.""",2003-07-20 12:16:58,684c9c1,"['bridge/src/org/aspectj/bridge/684c9c1 IMessage.java', 'bridge/src/org/aspectj/bridge/684c9c1 Message.java', 'testing/src/org/aspectj/testing/xml/684c9c1 SoftMessage.java', 'weaver/src/org/aspectj/weaver/684c9c1 Checker.java']"
40771,Bug 40771 ajde apis are unnecessariy coupled to swing,"""The AJDE APIs are coupled to javax.swing by org.aspectj.ajde.EditorManager. The EditorManager needs to be refactored, have swing specific parts moved to org.aspectj.ajde.ui.swing and org.aspectj.ajbrowser.""",2003-07-25 10:47:43,bbd832b,"['ajbrowser/src/org/aspectj/tools/ajbrowser/bbd832b BasicEditor.java', 'ajbrowser/src/org/aspectj/tools/ajbrowser/bbd832b BrowserManager.java', 'ajbrowser/src/org/aspectj/tools/ajbrowser/bbd832b BuildConfigPopupMenu.java', 'ajbrowser/src/org/aspectj/tools/ajbrowser/bbd832b CompilerMessagesPanel.java', 'ajbrowser/src/org/aspectj/tools/ajbrowser/bbd832b EditorManager.java', 'ajbrowser/src/org/aspectj/tools/ajbrowser/bbd832b TopFrame.java', 'ajde/src/org/aspectj/ajde/bbd832b Ajde.java', 'ajde/src/org/aspectj/ajde/ui/bbd832b EditorManager.java', 'ajde/src/org/aspectj/ajde/ui/bbd832b StructureModelUtil.java', 'ajde/src/org/aspectj/ajde/ui/bbd832b StructureViewManager.java', 'ajde/src/org/aspectj/ajde/ui/swing/bbd832b AjdeUIManager.java', 'ajde/src/org/aspectj/ajde/ui/swing/bbd832b BasicEditor.java', 'ajde/src/org/aspectj/ajde/ui/swing/bbd832b BrowserViewManager.java', 'ajde/src/org/aspectj/ajde/ui/swing/bbd832b BrowserViewTreeListener.java', 'ajde/src/org/aspectj/ajde/ui/swing/bbd832b BuildConfigPopupMenu.java', 'ajde/src/org/aspectj/ajde/ui/swing/bbd832b PointcutWizard.java', 'ajde/src/org/aspectj/ajde/ui/swing/bbd832b StructureViewPanel.java', 'ajde/testsrc/bbd832b AjdeModuleTests.java', 'ajde/testsrc/org/aspectj/ajde/bbd832b CompilerMessagesTest.java', 'ajde/testsrc/org/aspectj/ajde/bbd832b NullIdeEditorAdapter.java', 'ajde/testsrc/org/aspectj/ajde/bbd832b NullIdeManager.java']"
40824,"""Bug 40824 asm treats """"declare parents"""" as methods""","""""""declare parents"""" member declarations report their kind as """"method"""" instead of what they are.""",2003-07-28 05:55:44,58e3cb2,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/58e3cb2 AsmBuilder.java']
41123,Bug 41123 Weaving failure when using injars,"""Sample run that fails using injars: C:\devel\test\libraryWeave>ajc ajee\testing\ExecutionMonitor.aj C:\devel\test\libraryWeave>jar cf ajee.jar ajee\testing\*.class C:\devel\test\libraryWeave>ajc -injars ajee.jar model\BusObj.java model\MonitorB usObj.java C:\devel\test\libraryWeave\model\BusObj.java:3 Class must implement the inherite d abstract method ExecutionMonitor.MonitoredItem.ajc$interMethodDispatch2 $ajee_t esting_ExecutionMonitor$record(String, String) public class BusObj { ^^^^^^ 1 error It works in a single pass compilation: C:\devel\test\libraryWeave>ajc ajee\testing\ExecutionMonitor.aj model\BusObj.jav a model\MonitorBusObj.java C:\devel\test\libraryWeave> Sample source code: package ajee.testing; public aspect ExecutionMonitor { public interface MonitoredItem {} private void MonitoredItem.record(String eventType, String eventName) {} } --- package model; public class BusObj { } --- package model; import ajee.testing.ExecutionMonitor; public aspect MonitorBusObj { declare parents: BusObj implements ExecutionMonitor.MonitoredItem; }""",2003-08-05 00:39:51,3e59745,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/3e59745 AjLookupEnvironment.java', 'tests/bugs/moreInterfaceLibrary/model/3e59745 BusObj.java', 'tests/bugs/moreInterfaceLibrary/model/3e59745 MonitorBusObj.java', 'weaver/src/org/aspectj/weaver/bcel/3e59745 BcelTypeMunger.java', 'weaver/src/org/aspectj/weaver/bcel/3e59745 LazyMethodGen.java']"
41170,Bug 41170 -classpath entries in .lst files overwrite command-line -classpath entries,"""If the command-line specifies both a -classpath entry and a .lst file with a -classpath entry, the .lst file entry seems to replace rather than supplement the command-line entry. I expect options to be cumulative. See tests/bugs/options/classpath""",2003-08-05 20:19:15,40fb451,"['tests/bugs/options/classpath/40fb451 Client.java', 'tests/bugs/options/classpath/lib/40fb451 Library.java']"
41254,Bug 41254 revise asm and create interfaces,,2003-08-07 09:00:15,f1deb9c,"['ajbrowser/src/org/aspectj/tools/ajbrowser/f1deb9c BrowserManager.java', 'ajbrowser/src/org/aspectj/tools/ajbrowser/f1deb9c TopFrame.java', 'ajde/src/org/aspectj/ajde/internal/f1deb9c LstBuildConfigManager.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c AbstractIconRegistry.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c BuildConfigModel.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c BuildConfigNode.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c StructureModelUtil.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c StructureSearchManager.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c StructureView.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c StructureViewManager.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c StructureViewNode.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c StructureViewNodeFactory.java', 'ajde/src/org/aspectj/ajde/ui/f1deb9c StructureViewProperties.java', 'ajde/src/org/aspectj/ajde/ui/internal/f1deb9c NavigationHistoryModel.java', 'ajde/src/org/aspectj/ajde/ui/internal/f1deb9c TreeStructureViewBuilder.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c AjdeUIManager.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c BrowserStructureViewToolPanel.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c BrowserView.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c BrowserViewManager.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c BrowserViewTreeListener.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c BuildConfigPopupMenu.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c IconRegistry.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c PointcutWizard.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c SimpleStructureViewToolPanel.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c StructureTreeManager.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c StructureViewPanel.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c SwingTreeViewNode.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c SwingTreeViewNodeFactory.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c SwingTreeViewNodeRenderer.java', 'ajde/src/org/aspectj/ajde/ui/swing/f1deb9c TreeViewBuildConfigEditor.java', 'ajde/testdata/examples/coverage/f1deb9c ModelCoverage.java', 'ajde/testdata/examples/coverage/pkg/f1deb9c InPackage.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c AjdeTests.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c AsmDeclarationsTest.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c AsmRelationshipsTest.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c NullIdeErrorHandler.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c NullIdeManager.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c NullIdeProgressMonitor.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c NullIdeTaskListManager.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c NullIdeUIAdapter.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c StructureModelRegressionTest.java', 'ajde/testsrc/org/aspectj/ajde/f1deb9c StructureModelTest.java', 'ajde/testsrc/org/aspectj/ajde/ui/f1deb9c StructureModelUtilTest.java', 'ajde/testsrc/org/aspectj/ajde/ui/f1deb9c StructureSearchManagerTest.java', 'ajde/testsrc/org/aspectj/ajde/ui/f1deb9c StructureViewManagerTest.java', 'asm/src/org/aspectj/asm/f1deb9c AdviceAssociation.java', 'asm/src/org/aspectj/asm/f1deb9c Association.java', 'asm/src/org/aspectj/asm/f1deb9c HierarchyWalker.java', 'asm/src/org/aspectj/asm/f1deb9c IProgramElement.java', 'asm/src/org/aspectj/asm/f1deb9c IRelationship.java', 'asm/src/org/aspectj/asm/f1deb9c IStructureModelListener.java', 'asm/src/org/aspectj/asm/f1deb9c InheritanceAssociation.java', 'asm/src/org/aspectj/asm/f1deb9c IntroductionAssociation.java', 'asm/src/org/aspectj/asm/f1deb9c LinkNode.java', 'asm/src/org/aspectj/asm/f1deb9c ModelWalker.java', 'asm/src/org/aspectj/asm/f1deb9c ProgramElementNode.java', 'asm/src/org/aspectj/asm/f1deb9c ReferenceAssociation.java', 'asm/src/org/aspectj/asm/f1deb9c Relation.java', 'asm/src/org/aspectj/asm/f1deb9c RelationNode.java', 'asm/src/org/aspectj/asm/f1deb9c StructureModel.java', 'asm/src/org/aspectj/asm/f1deb9c StructureModelListener.java', 'asm/src/org/aspectj/asm/f1deb9c StructureModelManager.java', 'asm/src/org/aspectj/asm/f1deb9c StructureNode.java', 'asm/src/org/aspectj/asm/f1deb9c StructureNodeFactory.java', 'asm/src/org/aspectj/asm/internal/f1deb9c ProgramElement.java', 'asm/src/org/aspectj/asm/internal/f1deb9c Relationship.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/f1deb9c EclipseFactory.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f1deb9c AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f1deb9c AsmBuilder.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f1deb9c AsmHierarchyBuilder.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f1deb9c AsmNodeFormatter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f1deb9c EmacsStructureModelManager.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/core/builder/f1deb9c AsmBuilderTest.java', 'testing/src/org/aspectj/testing/ajde/f1deb9c CompileCommand.java', 'weaver/src/org/aspectj/weaver/f1deb9c AsmAdaptor.java']"
41359,Bug 41359 percflow aspects compiled from jars share one instance for all entry points,"""When a percflow aspect is woven into source code from a jar using the aspectPath compiler option, it produces only one instance of the aspect for each entrypoint defined in the source code.""",2003-08-09 11:19:18,5a07dce,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/5a07dce AspectDeclaration.java', 'tests/bugs/perCflowAndJar/5a07dce PerCFlowCompileFromJar.java', 'tests/bugs/perCflowAndJar/5a07dce PerCFlowCompileFromJarTest.java']"
41888,Bug 41888 call PCD fails when given subtype of defining type,,2003-08-23 00:20:38,9df9062,['tests/bugs/9df9062 CallReference.java']
41952,Bug 41952 XLint warning for call PCD's using subtype of defining type,,2003-08-26 05:38:20,97ab1e9,"['bridge/src/org/aspectj/bridge/97ab1e9 IMessage.java', 'bridge/src/org/aspectj/bridge/97ab1e9 Message.java', 'bridge/src/org/aspectj/bridge/97ab1e9 MessageUtil.java', 'bridge/src/org/aspectj/bridge/97ab1e9 SourceLocation.java', 'org.aspectj.ajdt.core/src/org/aspectj/tools/ajc/97ab1e9 Main.java', 'testing/src/org/aspectj/testing/xml/97ab1e9 SoftMessage.java', 'tests/bugs/97ab1e9 DeclaringTypeWarning.java', 'tests/new/97ab1e9 CallTypesI.java', 'tests/new/97ab1e9 IndeterminateArg.java', 'tests/new/97ab1e9 IndeterminateArgType.java', 'weaver/src/org/aspectj/weaver/97ab1e9 Checker.java', 'weaver/src/org/aspectj/weaver/97ab1e9 Lint.java', 'weaver/src/org/aspectj/weaver/patterns/97ab1e9 AndPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/97ab1e9 ExactTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/97ab1e9 KindedPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/97ab1e9 NotPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/97ab1e9 OrPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/97ab1e9 Pointcut.java', 'weaver/src/org/aspectj/weaver/patterns/97ab1e9 ReferencePointcut.java', 'weaver/src/org/aspectj/weaver/patterns/97ab1e9 SignaturePattern.java']"
42515,Bug 42515 NPE When compiling intertype declaration,,2003-09-04 07:12:20,6d2abc1,['tests/bugs/caseSensitivity/uniqueId/6d2abc1 Numbered.java']
42539,Bug 42539 throw derivative pointcuts not advised.,"""Given the following point cut and advice: public aspect ExceptionAspect { pointcut exceptionThrower() : execution(public * ExceptionBugTest.*(..) throws Exception+); declare warning : exceptionThrower() : """"throws Exception+""""; } And the to be aspected code: public class ExceptionBugTest { class MyException extends Exception { } public void method1() throws Exception { } public void method2() throws MyException { } } listing file default.lst: C:\temp\AJC Bug\ExceptionAspect.aj C:\temp\AJC Bug\ExceptionBugTest.java AJC does not advise ExceptionBugTest.method2(). The output from the compilation is the following: C:\temp\AJC Bug>ajc -argfile default.lst -classpath %ASPECTJ_HOME%\lib\aspectjrt.jar C:\eclipse\workspace\AJC Bug\ExceptionBugTest.java:11 throws Exception+ From the aspect-j mailing list, contributed by Jim Hugunin: &lt;detail&gt;The bug was caused because the code for ThrowsPattern mistakenly used the internal protected method TypePattern.matchesExactly instead of the external public method TypePattern.matchesStatically. Because the classes were in the same package, Java's accessibility rules allowed this. It would be nice if there was an easy way to specifiy that a method could only be accessed from subtypes.&lt;/detail&gt;""",2003-09-04 11:15:58,8660cc1,"['tests/bugs/throwsSignature/8660cc1 ExceptionAspect.java', 'tests/bugs/throwsSignature/8660cc1 ExceptionBugTest.java', 'weaver/src/org/aspectj/weaver/patterns/8660cc1 ThrowsPattern.java']"
42573,"""Bug 42573 .lst file entries not resolved relative to list file: {boot}classpath, extdirs,""","""My -classpath entry in a config/.lst file was resolved relative to the working directory rather than to the config/.lst file. BuildArgParser.java looks like this would also be true for bootclasspath and extdirs, but not for injars, aspectpath, or sourceroots.""",2003-09-04 18:40:22,648c0f4,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/648c0f4 BuildArgParser.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/ajc/648c0f4 BuildArgParserTestCase.java', 'util/src/org/aspectj/util/648c0f4 ConfigParser.java']"
42740,Bug 42740 declare error fails on pointcuts composed from multiple classes,"""This error occurs in both 1.1.0 and in the head of CVS as of 9/8/03. The compiler crash output from the CVS head version is at the end. It may be related to 42739, but they may be distinct problems. Sample source: /* * Created on Sep 8, 2003 * * Copyright (c) 2003 New Aspects of Security. All Rights Reserved. */ aspect Library { public pointcut executionsThrowingChecked() : execution(* *(..) throws (Exception+ && !RuntimeException)); } public aspect SampleExceptionHandling { public pointcut scope() : within(org.atrack.model..*); public pointcut executionsThrowingChecked() : Library.executionsThrowingChecked() && scope(); declare error : executionsThrowingChecked(): """"no checked exceptions""""; } sample compile: C:\eclipse\workspace\atrack>ajc src\SampleExceptionHandling.java java.lang.Exception: Stack trace at java.lang.Thread.dumpStack(Thread.java:1071) at org.aspectj.weaver.patterns.ReferencePointcut.concretize1 (ReferencePo intcut.java:215) at org.aspectj.weaver.patterns.AndPointcut.concretize1 (AndPointcut.java: 88) at org.aspectj.weaver.patterns.ReferencePointcut.concretize1 (ReferencePo intcut.java:272) at org.aspectj.weaver.patterns.AndPointcut.concretize1 (AndPointcut.java: 88) at org.aspectj.weaver.patterns.ReferencePointcut.concretize1 (ReferencePo intcut.java:272) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:127) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:120) at org.aspectj.weaver.Checker.concretize(Checker.java:37) at org.aspectj.weaver.CrosscuttingMembers.addShadowMunger (CrosscuttingMe mbers.java:78) at org.aspectj.weaver.CrosscuttingMembers.addDeclare (CrosscuttingMembers .java:102) at org.aspectj.weaver.CrosscuttingMembers.addDeclares (CrosscuttingMember s.java:92) at org.aspectj.weaver.ResolvedTypeX.collectCrosscuttingMembers (ResolvedT ypeX.java:332) at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect (Crosscut tingMembersSet.java:50) at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.buildInterTy peAndPerClause(AspectDeclaration.java:754) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.buildIn terTypeAndPerClause(AjLookupEnvironment.java:124) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.complet eTypeBindings(AjLookupEnvironment.java:91) at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile (Compiler.ja va:310) at org.eclipse.jdt.internal.compiler.Compiler.compile (Compiler.java:324) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat ion(AjBuildManager.java:373) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuild Manager.java:125) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (AjBu ildManager.java:70) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53) at org.aspectj.tools.ajc.Main.run(Main.java:217) at org.aspectj.tools.ajc.Main.runMain(Main.java:155) at org.aspectj.tools.ajc.Main.main(Main.java:72) C:\eclipse\workspace\atrack\src\SampleExceptionHandling.java:15 circular pointcu t declaration involving: executionsThrowingChecked() 1 error""",2003-09-08 22:47:35,d78d9ed,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/d78d9ed AspectDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/d78d9ed PointcutDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/d78d9ed AjLookupEnvironment.java', 'tests/bugs/declareBinding/d78d9ed SampleExceptionHandling1.java', 'tests/bugs/declareSoftWithin/test/d78d9ed NoSoftener.java', 'weaver/src/org/aspectj/weaver/d78d9ed ResolvedPointcutDefinition.java']"
42993,"""Bug 42993 Language regression, or possible language improvement?""","""The file AspectBug.java: public aspect AspectBug extends AbstractCaching perthis(execution(ContainerLoader+.new(..))) { declare parents: ContainerDescriptor implements AbstractCaching.Key; protected pointcut loadExecutions( Key key ): ContainerLoader.containerLoads( *, key ); } abstract aspect AbstractCaching { interface Key {} protected abstract pointcut loadExecutions(Key key); } class Key { } class ContainerDescriptor { } class ActiveContainer { } class ContainerLoader { public ActiveContainer createContainer(ContainerDescriptor c) { return null; } public pointcut containerLoads(ContainerLoader loader, ContainerDescriptor containerDesc ): this(loader) && args(containerDesc) && execution(ActiveContainer ContainerLoader.createContainer (ContainerDescriptor)); } First, here are the versions of AspectJ I'm using (this is a bash shell under cygwin on Windows XP): ~> CLASSPATH='C:\aspectj1.0\lib\aspectjrt.jar' /cygdrive/c/aspectj1.0/bin/ajc - version ajc version 1.0.6 (built Jul 24, 2002 6:21 PM PST) running on java 1.4.1_02 ~> CLASSPATH='C:\aspectj1.1\lib\aspectjrt.jar' /cygdrive/c/aspectj1.1/bin/ajc - version AspectJ Compiler 1.1.0 ~> CLASSPATH='C:\aspectj1.1.1rc1 \lib\aspectjrt.jar' /cygdrive/c/aspectj1.1.1rc1/bin/ajc -version AspectJ Compiler 1.1.1rc1 ~> CLASSPATH='C:\aspectj1.1.1 \lib\aspectjrt.jar' /cygdrive/c/aspectj1.1.1/bin/ajc -version AspectJ Compiler 1.1.1 For all four of these compilers, I give them the AspectBug.java file (which is attached): ~> CLASSPATH='C:\aspectj1.0\lib\aspectjrt.jar' /cygdrive/c/aspectj1.0/bin/ajc AspectBug.java ~> CLASSPATH='C:\aspectj1.1\lib\aspectjrt.jar' /cygdrive/c/aspectj1.1/bin/ajc AspectBug.java ~> CLASSPATH='C:\aspectj1.1.1rc1 \lib\aspectjrt.jar' /cygdrive/c/aspectj1.1.1rc1/bin/ajc AspectBug.java ~> CLASSPATH='C:\aspectj1.1.1 \lib\aspectjrt.jar' /cygdrive/c/aspectj1.1.1/bin/ajc AspectBug.java C:\Documents and Settings\Macneil Shonle\AspectBug.java:7 incompatible type, expected ContainerDescriptor found BindingTypePattern(AbstractCaching$Key, 0) 1 error As you can see, only the final run (with the Sept 11 build of ajc) do we see the """"incompatible type"""" error. If this is not a regression but a desirable result, how should the code be ported?""",2003-09-12 04:26:44,b512738,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b512738 AjLookupEnvironment.java', 'tests/bugs/b512738 ParentsAndPointcuts.java', 'weaver/src/org/aspectj/weaver/b512738 CrosscuttingMembersSet.java', 'weaver/src/org/aspectj/weaver/b512738 ResolvedTypeX.java']"
43033,Bug 43033 Compiler crash in ajc head (post 1.1.1 rc1) on erroneous program,,2003-09-12 13:34:02,5357086,"['tests/bugs/concretizeNpe/base/5357086 ExceptionHandling.java', 'tests/bugs/concretizeNpe/model/5357086 ModelExceptionHandling.java', 'weaver/src/org/aspectj/weaver/patterns/5357086 ReferencePointcut.java']"
43194,Bug 43194 java.lang.VerifyError in generated code,"""See the attached file VerifyBug.jar for the source files. You won't need anything else to compiler and reproduce this bug: ~/bug> ls AbstractCaching.java TreeNode.java VerifyBug.jar ContainerCaching.java TreeNodeFolding.java WorkspaceGroup.java ContainerLoader.java TreePanel.java WorkspaceNode.java Makefile TreeWorkspace.java ~/bug> gmake /cygdrive/c/aspectj1.1.1/bin/ajc -classpath """"C:\aspectj1.1.1 \lib\aspectjrt.jar"""" -version AspectJ Compiler 1.1.1 /cygdrive/c/aspectj1.1.1/bin/ajc -classpath """"C:\aspectj1.1.1\lib\aspectjrt.jar"""" *.java java -classpath """"C:\aspectj1.1.1\lib\aspectjrt.jar;."""" TreeNode java.lang.VerifyError: (class: TreeNode, method: doShowAction signature: ()V) Unable to pop operand off an empty stack Exception in thread """"main"""" make: *** [all] Error 1""",2003-09-16 23:21:32,fc0d2af,"['tests/bugs/fc0d2af AdviceInteraction.java', 'weaver/src/org/aspectj/weaver/patterns/fc0d2af ReferencePointcut.java']"
43709,Bug 43709 structure view crash when extending library aspects,"""I have an library with an aspect that includes advice, which I compile into an outjar. In my client project I extend it, and make a concrete pointcut that results in the library aspect affecting parts of my system. There is a bug and an enhancement request here: 1) A bug: when you look at the structure view for affected classes, there is a problem if you try to navigate from calls to advice (in AJDT, it results in an NPE). Here is the stack trace in AJDT: java.lang.NullPointerException at org.aspectj.asm.internal.ProgramElement.toLinkLabelString (ProgramElement.java:403) at org.eclipse.ajdt.internal.core.AJDTStructureViewNode.getLabel (AJDTStructureViewNode.java:171) at org.eclipse.ajdt.internal.core.AJDTStructureViewNodeAdapter.getLabel (AJDTStructureViewNodeAdapter.java:89) at org.eclipse.ui.model.WorkbenchLabelProvider.getText (WorkbenchLabelProvider.java:142) at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:95) at org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run (AbstractTreeViewer.java:87) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:1006) at org.eclipse.core.runtime.Platform.run(Platform.java:413) at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem (AbstractTreeViewer.java:406) at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run (StructuredViewer.java:119) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:1006) at org.eclipse.core.runtime.Platform.run(Platform.java:413) at org.eclipse.jface.viewers.StructuredViewer.updateItem (StructuredViewer.java:1271) at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem (AbstractTreeViewer.java:320) at org.eclipse.jface.viewers.AbstractTreeViewer$1.run (AbstractTreeViewer.java:303) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69) at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren (AbstractTreeViewer.java:289) at org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand (AbstractTreeViewer.java:697) at org.eclipse.jface.viewers.AbstractTreeViewer$4.treeExpanded (AbstractTreeViewer.java:709) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:175) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:865) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:849) at org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:1909) at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3815) at org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:642) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2816) at org.eclipse.swt.widgets.Display.windowProc(Display.java:2361) at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method) at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1236) at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:156) at org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN(Tree.java:1517) at org.eclipse.swt.widgets.Control.windowProc(Control.java:2799) at org.eclipse.swt.widgets.Display.windowProc(Display.java:2361) at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method) at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1303) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1543) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402) at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385) at org.eclipse.core.internal.boot.InternalBootLoader.run (InternalBootLoader.java:858) at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.eclipse.core.launcher.Main.basicRun(Main.java:291) at org.eclipse.core.launcher.Main.run(Main.java:747) at org.eclipse.core.launcher.Main.main(Main.java:583) 2) The enhancement request: the concrete aspect that applies the advice should also show what is affected in the project. Of course, it would also be nice to see how a given concrete library aspect in the aspect path affects your project too.""",2003-09-25 18:30:52,426d89b,['asm/src/org/aspectj/asm/internal/426d89b ProgramElement.java']
43783,Bug 43783 AJDT not very stable when confronted with java/aspect errors.,"""AJDT is not very stable when an eclipse project contains errors like missing classes, wrong package statements etc. etc. This may occurs when refactoring a project (sometimes by changing the source outside eclipse). Note I am using Eclipse 2.1.1, AJDT 1.1.4 + incremental compilation. Generally a lot of exceptions will occur (mostly nullpointer). Here are some of them: I: java.lang.NullPointerException at org.aspectj.asm.internal.ProgramElement.toLinkLabelString (ProgramElement.java:403) at org.eclipse.ajdt.internal.core.AJDTStructureViewNode.getLabel (AJDTStructureViewNode.java:171) at org.eclipse.ajdt.internal.core.AJDTStructureViewNodeAdapter.getLabel (AJDTStructureViewNodeAdapter.java:89) at org.eclipse.ui.model.WorkbenchLabelProvider.getText (WorkbenchLabelProvider.java:142) II: java.lang.NullPointerException at org.eclipse.ajdt.internal.ui.editor.AspectJEditor$1.run (AspectJEditor.java:242) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35) III: java.lang.NullPointerException at org.aspectj.ajde.internal.CompilerAdapter.compile (CompilerAdapter.java:79) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:165) !""",2003-09-26 19:36:57,3e4b59a,['ajde/src/org/aspectj/ajde/internal/3e4b59a CompilerAdapter.java']
44117,Bug 44117 NPE on compile,java.lang.NullPointerException at org.aspectj.weaver.AsmRelationshipProvider.checkerMunger (AsmRelationshipProvider.java:51) at org.aspectj.weaver.Checker.match(Checker.java:58) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:985) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:791) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:291) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:77) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:417) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:390) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:316) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFile s(AjBuildManager.java:256) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:156) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (AjBuildManager.java:70) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:103) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:165),2003-10-03 01:17:43,3117255,['weaver/src/org/aspectj/weaver/3117255 AsmRelationshipProvider.java']
44191,"""Bug 44191 Need better error message for """"can't find type""""""","""I have experienced situations where IAJC outputs a message like this at the end of compilation. [iajc] can't find type org.xxx.SomeTest In my case this was one time highly confusing since I did not expect the class in question to be referred anywhere in the project (I have to date still not located the reference). For such cases, it would be extremely nice if the error message would display WHY it need the class (i.e. the name of the refering class(es) or aspect(es) possibly with a reasonable cutoff as there is seldom need to list all referals). So I would like a message like this: [iajc] can't find type org.xxx.SomeTest referred by org.yyy.SomeClass,org.yy.SomeOtherClass ...""",2003-10-04 20:23:15,061395c,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/061395c AspectDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/061395c EclipseSourceType.java', 'weaver/src/org/aspectj/weaver/061395c ResolvedTypeX.java', 'weaver/src/org/aspectj/weaver/bcel/061395c BcelAdvice.java', 'weaver/src/org/aspectj/weaver/bcel/061395c BcelShadow.java', 'weaver/src/org/aspectj/weaver/patterns/061395c DeclareParents.java', 'weaver/src/org/aspectj/weaver/patterns/061395c DeclareSoft.java']"
44272,"""Bug 44272 retitle warning to """"circular {advice} dependency at ...""""""","""When writing aspects with cycles in the advice precedence, get warning """"circular dependency at {join point}"""" -- should be """"circular advice dependency..."""" or """"circular advice precedences at {join point} -- reorder the advice in the aspect"""". FWIW, here's an example of circularity in advice precedence: ---- aspect A { pointcut crun() : execution (void run()) ; before() : crun() {} after() returning : crun() {} void around() : crun() { proceed(); } } ---- See programming guide for more discussion of circularity in advice precedence.""",2003-10-07 00:05:59,0109534,"['tests/bugs/0109534 CircularAdvicePrecedence.java', 'weaver/src/org/aspectj/weaver/0109534 Shadow.java', 'weaver/src/org/aspectj/weaver/patterns/0109534 DeclarePrecedence.java']"
44586,Bug 44586 After throwing advice on ctors doesn't execute for inter-type decls,"""The following code doesn't work in Ajc 1.1.1, in Ajc built from CVS HEAD (as of yesterday), nor in Ajc 1.0.6: Output: C:\devel\test\excHandling>java AfterThrowingCtor Exception in thread """"main"""" java.lang.IllegalStateException: crash at Foo.initVal(AfterThrowingCtor.java:21) at AfterThrowingCtor.ajc$interFieldInit$AfterThrowingCtor$Foo$val (AfterT hrowingCtor.java:9) at Foo.<init>(AfterThrowingCtor.java:13) at AfterThrowingCtor.main(AfterThrowingCtor.java:6) Correct Output: threw java.lang.IllegalStateException: crash at execution(Foo()) Exception in thread """"main"""" java.lang.IllegalStateException: crash at Foo.initVal(AfterThrowingCtor.java:21) at AfterThrowingCtor.ajc$interFieldInit$AfterThrowingCtor$Foo$val (AfterT hrowingCtor.java:9) at Foo.<init>(AfterThrowingCtor.java:13) at AfterThrowingCtor.main(AfterThrowingCtor.java:6) Input source: public aspect AfterThrowingCtor { after() throwing (Throwable t) : execution(Foo.new(..)) { System.err.println(""""threw """"+t+"""" at """"+thisJoinPointStaticPart); } public static void main(String args[]) { new Foo(); } private Object Foo.val = Foo.initVal(); } class Foo { Foo() { } // if you uncomment this line and comment out the inter-type decl. // the advice runs correctly //private Object val = initVal(); static Object initVal() { throw new IllegalStateException(""""crash""""); } } --- AspectJ 1.1.1 runs the after throwing advice correctly if the field is declared normally (AspectJ 1.0.6 fails to do even this).""",2003-10-09 13:53:43,87db1e7,['tests/bugs/87db1e7 AfterThrowingCtor.java']
44587,Bug 44587 Erroneous exception conversion,,2003-10-09 13:58:19,5834de9,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/5834de9 AspectClinit.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/5834de9 AspectDeclaration.java', 'runtime/src/org/aspectj/lang/5834de9 NoAspectBoundException.java', 'runtime/testsrc/5834de9 RuntimeModuleTests.java', 'tests/bugs/5834de9 ErroneousExceptionConversion.java', 'tests/bugs/5834de9 ErroneousExceptionConversion1.java', 'tests/new/5834de9 ConstructorExecInitFails.java', 'weaver/src/org/aspectj/weaver/5834de9 AjcMemberMaker.java', 'weaver/src/org/aspectj/weaver/5834de9 NameMangler.java', 'weaver/src/org/aspectj/weaver/bcel/5834de9 BcelClassWeaver.java']"
45489,Bug 45489 Structure model is wrong when re-opened,"""Some elements have the wrong kinds when a saved structure model is loaded. E.g. if I close then re-open the eclipse workbench classes are shown as interface in the outline view. Also if I traverse the tree with the code below I get the wrong kinds assigned to classed, interfaces, aspects and import declarations. List list = StructureModelUtil.getPackagesInModel(); for(Iterator i = list.iterator(); i.hasNext();){ Object[] o = (Object[])i.next(); IProgramElement node = (IProgramElement)o[0]; List files = StructureModelUtil.getFilesInPackage(node); for(Iterator i2 = files.iterator(); i2.hasNext();){ IProgramElement file = (IProgramElement)i2.next (); System.out.println(""""file """" + file.getKind ().toString() + """", """" + file.getName()); boolean added2 = false; List file_children = file.getChildren(); // file children can be classes, aspects or other things for(Iterator i3 = file_children.iterator(); i3.hasNext();){ IProgramElement file_child = (IProgramElement)i3.next(); System.out.println(""""kind: """" + file_child.getKind().toString() +"""", """" + file_child.getName());""",2003-10-24 06:34:59,669cd7c,"['ajde/testsrc/org/aspectj/ajde/669cd7c AjdeTests.java', 'ajde/testsrc/org/aspectj/ajde/669cd7c SavedModelConsistencyTest.java', 'asm/src/org/aspectj/asm/669cd7c IProgramElement.java']"
46280,Bug 46280 compiler issues error on inner aspects when privilieged,"""The compiler complains that """"inner aspects must be static"""" whenever I try to qualify an inner (and static) aspect as privileged, no matter what the enclosing type is (aspect, interface or class). I was using j2sdk1.4.0_02, AspectJ 1.1, eclipse 2.1 (with AJDT 1.1.3). Test case: ------------------ BASE CLASS: public class Capsule { private int hidden; public int visible; public Capsule(int priv, int pub) { hidden = priv; visible = pub; } public void doSomething() { System.out.println("""""""""""" + hidden + """", """" + visible + """"""""""""); } public static void main(String[] args) { Capsule capsule = new Capsule(1, 1); capsule.doSomething(); } } ------------------ ASPECT: public aspect Outer { static //privileged <== JUST TRY TO UNCOMMENT THIS! aspect Inner { pointcut call2doSomething(Capsule capsule): call(void Capsule.doSomething()) && target(capsule); before(Capsule capsule): call2doSomething(capsule) { capsule.visible++; //capsule.hidden++; } } } ------------------ INTERFACE: public interface Marker { static //privileged <== JUST TRY TO UNCOMMENT THIS! aspect Inner { pointcut call2doSomething(Capsule capsule): call(void Capsule.doSomething()) && target(capsule); before(Capsule capsule): call2doSomething(capsule) { capsule.visible++; //capsule.hidden++; } } }""",2003-11-07 11:32:21,7bbd1f4,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/parser/7bbd1f4 AjParser.java', 'tests/bugs/7bbd1f4 PrivilegedParsing.java']"
46298,Bug 46298 Aspectj generate code does not de-compile cleanly.,,2003-11-07 14:40:53,4921f0c,['weaver/src/org/aspectj/weaver/bcel/4921f0c BcelShadow.java']
47318,Bug 47318 org.aspectj.asm.IRelationship.Kind.ALL does not contain all kinds,"""org.aspectj.asm.IRelationship.Kind.ALL is an array that should contain all kinds that an IRelationship may have. There are three possible kinds defined in IRelationship.java: ADVICE, DECLARE and DECLARE_INTER_TYPE. The Kind[] ALL does only contain ADVICE and DECLARE. This can lead to an ArrayIndexOutOfBoundsException.""",2003-11-23 16:18:11,bdc79f1,['asm/src/org/aspectj/asm/bdc79f1 IRelationship.java']
47754,Bug 47754 illegal method modifier,"""the attached example throws this at class load time. please note that this bug results in a different exception when happens in a different setup, and when the class is loaded by JBoss. (more cryptic, talking about generic class format error) Exception in thread """"main"""" java.lang.ClassFormatError: com/netvisor/nvsr/client/InvalidByteCodeBug$Test$ITest (Illegal method modifiers: 0x409) at java.lang.ClassLoader.defineClass0(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:537) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java: 123) at java.net.URLClassLoader.defineClass(URLClassLoader.java:251) at java.net.URLClassLoader.access$100(URLClassLoader.java:55) at java.net.URLClassLoader$1.run(URLClassLoader.java:194) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:187) at java.lang.ClassLoader.loadClass(ClassLoader.java:289) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:274) at java.lang.ClassLoader.loadClass(ClassLoader.java:235) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302) at java.lang.ClassLoader.defineClass0(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:537) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java: 123) at java.net.URLClassLoader.defineClass(URLClassLoader.java:251) at java.net.URLClassLoader.access$100(URLClassLoader.java:55) at java.net.URLClassLoader$1.run(URLClassLoader.java:194) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:187) at java.lang.ClassLoader.loadClass(ClassLoader.java:289) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:274) at java.lang.ClassLoader.loadClass(ClassLoader.java:235) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302) at com.netvisor.nvsr.client.InvalidByteCodeBug.run(InvalidByteCodeBug. java:15) at com.netvisor.nvsr.client.InvalidByteCodeBug.main(InvalidByteCodeBug. java:8)""",2003-11-29 03:48:15,7322131,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/7322131 InterTypeMethodDeclaration.java', 'tests/bugs/7322131 StaticInterfaceMethods.java']"
47910,Bug 47910 ajc -outjar jarfile does not contain MANIFEST.MF,"""I call ajc -sourceroots <mydir> -outjar <my.jar> and an output file is created with a .jar extension, but it is not a valid jar file because there is no MANIFEST.MF file. I see that the text for ajc says: -outjar <file> put output classes in zip file <file> which might imply that it is supposed to be a zip file, but a parameter called - outjar which creates a zip file doesn't really make sense. If -outjar is used, the resulting file should be a valid jar file, i.e. with a META-INF/MANIFEST.MF file inside.""",2003-12-02 13:35:01,34dbb0c,"['ajde/testdata/JarManifestTest/src/34dbb0c Main.java', 'ajde/testsrc/org/aspectj/ajde/34dbb0c AjdeTests.java', 'ajde/testsrc/org/aspectj/ajde/34dbb0c InpathTestcase.java', 'ajde/testsrc/org/aspectj/ajde/34dbb0c JarManifestTest.java', 'ajde/testsrc/org/aspectj/ajde/34dbb0c ResourceCopyTestCase.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/34dbb0c AjBuildManager.java', 'weaver/src/org/aspectj/weaver/bcel/34dbb0c BcelWeaver.java']"
47952,Bug 47952 SoftException.printStackTrace(..) should print wrapped throwable too,SoftExceptions should print not only their trace but also that of the wrapped throwable. We should be able to set a flag on class initialization whether we are running under 1.4 and then implement it under 1.4 using initCause() and otherwise by direct delegation. I can do this fix if we're agreed.,2003-12-03 00:43:54,ad2fb7a,"['runtime/src/org/aspectj/lang/ad2fb7a SoftException.java', 'runtime/testsrc/ad2fb7a RuntimeModuleTests.java']"
48072,Bug 48072 Complete relationship information in the structure model,Complete the set of relationships surfaced by the structure model (e.g. including support for declare parents etc.) - Mik you had a document listing the things yet to be done here?,2003-12-04 10:54:27,f24286d,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f24286d AjBuildManager.java', 'weaver/src/org/aspectj/weaver/f24286d Checker.java', 'weaver/src/org/aspectj/weaver/f24286d ICrossReferenceHandler.java', 'weaver/src/org/aspectj/weaver/f24286d Shadow.java', 'weaver/src/org/aspectj/weaver/f24286d World.java', 'weaver/src/org/aspectj/weaver/bcel/f24286d BcelWorld.java']"
48091,Bug 48091 Lazy instantiation of thisJoinPoint,"""In cases where the body of advice refers to a non-statically evaluable portion of thisJoinPoint (so that it can't be optimized by the compiler to thisJoinPointStaticPart), the JoinPoint object is currently always created before entering the advice body - even if the JoinPoint object would never actually be accessed (because of a test within the advice for example). Since a) thisJoinPoint is often used in tracing applications b) tracing applications tend to be very pervasive, c) they must have low overhead when tracing is disabled, and d) creation of thisJoinPoint objects is expensive (v. expensive compared to just testing a flag) it would be nice if there was a way to create JoinPoint objects lazily on first actual reference within the advice body.""",2003-12-04 12:18:33,0c83343,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/0c83343 BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/0c83343 AjBuildConfig.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/0c83343 AjBuildManager.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/0c83343 AjdtBatchTests.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/0c83343 CommandTestCase.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/0c83343 PerformanceTestCase.java', 'runtime/src/org/aspectj/runtime/reflect/0c83343 Factory.java', 'weaver/src/org/aspectj/weaver/0c83343 Lint.java', 'weaver/src/org/aspectj/weaver/0c83343 World.java', 'weaver/src/org/aspectj/weaver/bcel/0c83343 BcelAdvice.java', 'weaver/src/org/aspectj/weaver/bcel/0c83343 BcelShadow.java']"
48990,Bug 48990 Special case if(false) to not require a dynamic test,"""FastMatch, the efficient pattern matching for pointcuts on the constant pool, is currrently only implemented for the within pointcut. I am planning to provide further oimplementations for other pointcuts by release 1.2.""",2003-12-17 06:29:52,10c6de6,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/10c6de6 IfPseudoToken.java', 'weaver/src/org/aspectj/weaver/patterns/10c6de6 IfPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/10c6de6 Pointcut.java']"
49250,Bug 49250 alias getCause for getWrappedThrowable in SoftException,"""SoftException should implement getCause(): public Throwable getCause() { return inner; } (As pointed out by Ramnivas, misc mail messages, code comments...) Using getCause() means the chain should print as expected in 1.4+, esp. when SoftException is itself wrapped as a RemoteException. Since getCause() replicates getWrappedThrowable(), we could deprecate that, but we must continue to support it to maintain upwards binary compatibility in the runtime classes.""",2003-12-21 15:01:36,eac16ae,['runtime/src/org/aspectj/lang/eac16ae SoftException.java']
49457,Bug 49457 No error on overloaded pointcuts unless binding variables,"""The compiler might not be detecting overloaded pointcut names when parameters are not bound, and/or might not be implementing the pointcut correctly. Below is the context from my reply to Ron Bodkin on aspectj-dev """"Proper behavior of overloaded pointcut definitions"""". (I have not checked this code recently or submitted a test case, nor have I evaluated whether my code below actually replicates Ron's bug.) ---- context from the email The programming guide says, It is an error for two pointcuts to be named with the same name in the same class or aspect declaration. When I compile with overloaded pointcut names, I do get an error. pointcut pc(Runnable r) : target(r) && call(void run()); pointcut pc(SubRunnable r) : target(r) && call(void run()); $ aspectj-1.1.1 -classpath $ajrt11 OverloadedPointcut.java ...\OverloadedPointcut.java:14 duplicate pointcut name: pc ...\OverloadedPointcut.java:15 duplicate pointcut name: pc ... When I use these pointcuts with bound parameters, I get an error. before(Runnable r) : pc(r) { log(""""pc(Runnable r)""""); } before(SubRunnable r) : pc(r) { log(""""pc(SubRunnable r)""""); } When I use these pointcuts with type parameters, I get no errors. before() : pc(Runnable) { log(""""pc(Runnable)""""); } before() : pc(SubRunnable) { log(""""pc(SubRunnable)""""); } before() : pc(*) { log(""""pc(*)""""); } [...] ---- my code public class OverloadedPointcut { public static void main(String[] args) { new C().run(); } } class C { public void run() {} } aspect A { declare parents: C implements Runnable; declare parents: C implements SubRunnable; interface SubRunnable extends Runnable {} pointcut pc(Runnable r) : target(r) && call(void run()); pointcut pc(SubRunnable r) : target(r) && call(void run()); before(Runnable r) : pc(r) { log(""""pc(Runnable r)""""); } before(SubRunnable r) : pc(r) { log(""""pc(SubRunnable r)""""); } before() : pc(Runnable) { log(""""pc(Runnable)""""); } before() : pc(SubRunnable) { log(""""pc(SubRunnable)""""); } before() : pc(*) { log(""""pc(*)""""); } void log(String s) { System.out.println(s); } } ---- Ron's code [...] the following program compiles with no warnings, produces no output when run under AspectJ 1.1.1. It appears to behave as if the more specific definition is the only definition of the pointcut [...] Here is a simple program that illustrates the question and odd behavior: package lib; public class RunnablePointcuts { public pointcut runnableCalls(Runnable runnable, Object caller) : call(* run(..)) && target(runnable) && this(caller); //public pointcut specialRunnableCalls(SpecialRunnable runnable, Object caller) : public pointcut runnableCalls(SpecialRunnable runnable, Object caller) : call(* run(..)) && target(runnable) && this(caller); } --- package lib; public interface SpecialRunnable extends Runnable { } --- package client; import lib.RunnablePointcuts; import lib.SpecialRunnable; public aspect Use { before(Object caller) : RunnablePointcuts.runnableCalls(*, caller) && target(MyRunnable) { System.out.println(""""my runnable called from """"+caller); } public static void main(String args[]) { Use.aspectOf().doIt(); } public void doIt() { new MyRunnable().run(); } } // the advice will run if you make this implement SpecialRunnable //class MyRunnable implements SpecialRunnable { class MyRunnable implements Runnable { public void run() {} }""",2004-01-02 00:21:30,c517e85,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/c517e85 AspectDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/c517e85 AjLookupEnvironment.java', 'tests/bugs/c517e85 OverloadedPointcutsInAspect.java', 'tests/bugs/c517e85 OverloadedPointcutsInClass.java']"
49638,Bug 49638 exception logging: after() throwing advice can't convert Throwable obj to string and ajc aborts,,2004-01-07 12:31:34,7b081f2,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/parser/7b081f2 AjParser.java', 'tests/bugs/7b081f2 AfterThrowingAdviceSyntaxError.java']"
49657,Bug 49657 Weaver results in rt error if affected base class not exposed,"""I was weaving a 3rd party library and wrote an aspect that should affect both a base class and a derived class, but inadvertently wove only the derived class. This resulted in the following error. I would like the weaver to catch this kind of error at weave (link) time, rather than creating code that results in a rt error... I get this error in 1.1.1 final and in a fairly recent version from CVS HEAD: java.lang.AbstractMethodError at ajee.logging.LogManager.ajc$interMethodDispatch1 $ajee_logging_LogManager$ajee_logging_Loggable$getLogger(LogManager.java) at ajee.tracing.ExecutionTracer.ajc$before$ajee_tracing_ExecutionTracer$926 (ExecutionTracer.java:62) at library.Derived.<init>(Derived.java:46) This line is a call to super(); I've attached a small example that reproduces another error that I think is related: C:\devel\test\ctors\twoPass>build C:\devel\test\ctors\twoPass>call ajc -outjar fullBase.jar sample\Base.java sampl e\Derived.java Exception in thread """"main"""" java.lang.ExceptionInInitializerError at sample.Derived.<init>(Derived.java:6) at sample.Derived.main(Derived.java:13) Caused by: org.aspectj.lang.NoAspectBoundException at sample.Trace.aspectOf(Trace.aj) at sample.Trace.<init>(Trace.aj:5) at sample.Trace.ajc$postClinit(Trace.aj) at sample.Trace.<clinit>(Trace.aj:5) ... 2 more""",2004-01-07 17:27:35,dbe1024,"['org.aspectj.ajdt.core/testdata/partialHierarchy/sample/dbe1024 Base.java', 'org.aspectj.ajdt.core/testdata/partialHierarchy/sample/dbe1024 Derived.java', 'org.aspectj.ajdt.core/testdata/partialHierarchy/sample/dbe1024 Iface.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/dbe1024 AjdtBatchTests.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/dbe1024 PartiallyExposedHierarchyTestCase.java', 'weaver/src/org/aspectj/weaver/dbe1024 ResolvedTypeX.java', 'weaver/src/org/aspectj/weaver/dbe1024 WeaverMessages.java', 'weaver/src/org/aspectj/weaver/bcel/dbe1024 BcelTypeMunger.java']"
49743,Bug 49743 performance improvements for runtime library,I am heavily using the runtime signature information from thisJoinPoint.getSignature() and the toString() method of it. This causes heavy String operations each time the toString method is called. Would it be possible to cache the resulting string for example in MethodSignatureImpl and similar classes for other signatures?,2004-01-08 17:37:54,438e61c,"['runtime/src/org/aspectj/runtime/reflect/438e61c AdviceSignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/438e61c CatchClauseSignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/438e61c ConstructorSignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/438e61c Factory.java', 'runtime/src/org/aspectj/runtime/reflect/438e61c FieldSignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/438e61c InitializerSignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/438e61c MethodSignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/438e61c SignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/438e61c SourceLocationImpl.java', 'runtime/src/org/aspectj/runtime/reflect/438e61c StringMaker.java', 'runtime/testsrc/438e61c RuntimeModuleTests.java', 'runtime/testsrc/org/aspectj/runtime/reflect/438e61c RuntimePerformanceTest.java', 'runtime/testsrc/org/aspectj/runtime/reflect/438e61c SignatureTest.java']"
49814,Bug 49814 ConfigParser.java:132,,2004-01-10 17:46:43,a4a1234,"['org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/ajc/a4a1234 BuildArgParserTestCase.java', 'util/src/org/aspectj/util/a4a1234 ConfigParser.java']"
50200,Bug 50200 aspectjrt.jar manifest file name needs changing to upper case,,2004-01-19 06:01:56,6f099df,['build/src/org/aspectj/internal/tools/ant/taskdefs/6f099df AntBuilder.java']
50570,Bug 50570 CatchClauseSignature has broken operation,"""It looks like the getParameterName() operation on org.aspectj.lang.reflect. CatchClauseSignature is not working. Instead of returning the name of the exception as declared in the matched handler, returns the string value """"<missing>"""". Here is a test case that shows the problem :- ------START OF TEST CASE CODE----------- public class MyApp { public void doSomething() { // Get around """"unreachable code error... if (true) { throw new BusinessException(""""Surprise!!""""); } System.out.println(""""Busy doing something.""""); } public static void main(String[] args) { try { MyApp m = new MyApp(); m.doSomething(); } catch (BusinessException be) { System.out.println(""""Exception caught : """" + be.getMessage()); } } } class BusinessException extends RuntimeException { BusinessException(String message) { super(message); } } aspect AppMonitor { pointcut problemHandling() : handler(Throwable+); before() : problemHandling() { CatchClauseSignature cSig = (CatchClauseSignature) thisJoinPointStaticPart.getSignature(); System.out.println( """"MONITOR::\tCaught a """" + cSig.getParameterType().getName() + """" called """" + cSig.getParameterName()); } } ------END OF TEST CASE CODE----------- The output from running the above was ... MONITOR:: Caught a BusinessException called <missing> Exception caught : Surprise !!!! Operating system : Windows XP AspectJ : 1.1.1 final and also on latest from CVS HEAD""",2004-01-25 11:47:31,19bac86,"['tests/bugs/19bac86 HandlerSig.java', 'weaver/src/org/aspectj/weaver/19bac86 Member.java', 'weaver/src/org/aspectj/weaver/19bac86 ResolvedMember.java', 'weaver/src/org/aspectj/weaver/bcel/19bac86 BcelShadow.java']"
50776,Bug 50776 fail in compiling aspect with overriding method introduction with different throws clause,"""A first class (class A) declares only one method with some exceptions in the throws clause ( void m() throws Exception ). A second class (class B) extends it without redefinig the method. An aspect declares a method introduction in the class B, with the same name, signature and return type of the one in class A, but without throws clause; this is a legal override. In the second class (class B) each invocation to the overriden method doesn't need a try-catch block, because it refers to his hown method that raises no exception. This code compiles using ajc version 1.0.6 (built Jul 24, 2002 6:21 PM PST) running on java 1.4.0 But not using AspectJ Compiler 1.1.1 AspectJ Compiler 1.1.0 class A{ public A(){} public void m() throws Exception{} } class B extends A{ public B(){} public void some_code(){ m();} } aspect C{ public void B.m(){} }""",2004-01-28 12:21:31,c798923,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/c798923 InterTypeMemberFinder.java', 'tests/bugs/c798923 IntertypeDifferentThrows.java']"
51320,Bug 51320 ClasscastException on concretization of if(false),I get the following exception when weaving the attached aspect on the dev build. java.lang.ClassCastException at org.aspectj.weaver.patterns.IfPointcut.concretize1(IfPointcut.java:156) at org.aspectj.weaver.patterns.IfPointcut.concretize(IfPointcut.java:143) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:119) at org.aspectj.weaver.Checker.concretize(Checker.java:35) at org.aspectj.weaver.CrosscuttingMembers. addShadowMunger(CrosscuttingMembers.java:78) at org.aspectj.weaver.CrosscuttingMembers.addDeclare(CrosscuttingMembers. java:102) at org.aspectj.weaver.CrosscuttingMembers.addDeclares(CrosscuttingMembers. java:92) at org.aspectj.weaver.CrosscuttingMembersSet. addAdviceLikeDeclares(CrosscuttingMembersSet.java:65) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment. addAdviceLikeDeclares(AjLookupEnvironment.java:147) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment. completeTypeBindings(AjLookupEnvironment.java:122) at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java: 300) at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:314) at org.aspectj.ajdt.internal.core.builder.AjBuildManager. performCompilation(AjBuildManager.java:384) at org.aspectj.ajdt.internal.core.builder.AjBuildManager. doBuild(AjBuildManager.java:125) at org.aspectj.ajdt.internal.core.builder.AjBuildManager. batchBuild(AjBuildManager.java:70) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:104) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53) at org.aspectj.tools.ajc.Main.run(Main.java:234) at org.aspectj.tools.ajc.Main.runMain(Main.java:170) at org.aspectj.tools.ajc.Main.main(Main.java:81),2004-02-07 12:26:00,fbc0aa3,"['tests/bugs/fbc0aa3 DecwClassCastException.java', 'weaver/src/org/aspectj/weaver/patterns/fbc0aa3 ArgsPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/fbc0aa3 CflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/fbc0aa3 IfPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/fbc0aa3 ThisOrTargetPointcut.java']"
51322,Bug 51322 Introduce Unknown Type to class causes Null pointer exception,,2004-02-07 17:11:16,5c67166,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/5c67166 InterTypeMethodDeclaration.java', 'tests/bugs/5c67166 Pr51322.java']"
51929,Bug 51929 Advice calling protected super method causing java.lang.VerifyError 'Bad access to protected data',"""A java.lang.VerifyError is thrown at runtime complaining about 'Bad access to protected data' when advice, on a sub-aspect, that calls a protected method, on the super-aspect, is woven into a class. However another call to the same method woven into the same class but due to advice declared in the super-aspect works fine. The aspects were woven into precompiled (by sun's 1.4 javac) classes. The verify error occurs under both sun's 1.4 and blackdowns 1.3 VMs, and presumably all VMs. Workaround: Making the protected method public fixes the verify error. A test case is available in CVS: tests/bugs/protectedvf/... tests/ajcTestFailing.xml""",2004-02-12 21:13:29,6ddae42,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/6ddae42 AccessForInlineVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/6ddae42 EclipseFactory.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/6ddae42 InlineAccessFieldBinding.java', 'tests/bugs/protectedvf/main/6ddae42 Driver.java']"
52394,Bug 52394 inter-type declarations cause JRockit Crash,,2004-02-18 13:35:38,5d73494,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/5d73494 AspectClinit.java', 'weaver/src/org/aspectj/weaver/bcel/5d73494 BcelClassWeaver.java']"
52928,Bug 52928 Private members introduced via an interface are visible to the class,"""If private members are introduced via an interface to classes, the introduced members are visible inside the classes themselves, although the visibility is supposed to be relative to the aspect. Here's a sample: public class Sample { public static void main(String[] args) { Sample s = new Sample(); s.aMethod(); } public void aMethod() { // x is introduced by the following aspect as private // so it should not be accessible here System.out.println(""""I have """" + x); } } aspect SampleAspect { private interface Tag {}; private int Tag.x = 0; declare parents: Sample implements Tag; }""",2004-02-24 08:25:36,5795b4a,['tests/bugs/5795b4a VisiblePrivateInterfaceITDs.java']
53012,Bug 53012 declare precedence on a class should be a compile-time error,"""The compiler silently accepts ---- public class DeclarePrecedence { public static void main(String[] args) { System.out.println(""""hello""""); } } aspect DP { declare precedence: DeclarePrecedence, DP; before() : staticinitialization(DeclarePrecedence) { System.out.println(""""ok""""); } } ---- Since this is likely to be a mistake, an error would be nice. However, that would mean saying (!TargetClass && TargetClass+) to pick out the aspect subtypes of TargetClass.""",2004-02-24 19:43:32,0a01759,"['tests/bugs/declarePrecedenceWithClasses/0a01759 DeclarePrecedenceTestClass.java', 'weaver/src/org/aspectj/weaver/patterns/0a01759 DeclarePrecedence.java']"
53981,Bug 53981 proceed used as method name in around advice,Using a method named proceed(..) in around advice confuses the compiler (in at least the 2-3 ways shown below). True of the current tree (untested in 1.1.1). Workaround for now is to rename the method. ---- first problem: NPE in compiler java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.ast.MakeDeclsPublicVisitor.endVisit(MakeDeclsPublicVisitor.java:44) public class Proceeding { public static void main(String[] args) { } static aspect A { interface IProceed { void proceed(Runnable next); } IProceed decorator; void around() : execution(void main(String[])) { decorator.proceed(new Runnable() { public void run() { proceed(); } }); } } } ---- second problem: incorrect error wrt number of arguments public class Proceeding { public static void main(String[] args) { } static aspect A { void around() : execution(void main(String[])) { Proceeding.proceed(null); // BUG: treated as proceed(Object); } } static void proceed(Object o) {} } ---- third hypothetical: we should document how ambiguity is resolved public class Proceeding { public static void main(String[] args) { } static aspect A { void around() : execution(void main(String[])) { proceed(); // special form or Proceeding.proceed()? } } void proceed() {} },2004-03-06 22:43:04,05dabd1,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/05dabd1 Proceed.java', 'tests/src/org/aspectj/systemtest/ajc121/05dabd1 Ajc121Tests.java']"
53999,"""Bug 53999 """"can't bind type"""" message has $ for . in type name for declare soft""","""cosmetic mistake in error message... expected: can't bind type name 'unknown.Error' actual: can't bind type name 'unknown$Error' (not sure why it would ever be munged with $) public class Test { public static void main(String[] args) { test(); } static void test() { throw new Error(""""hello""""); } static aspect A { declare soft : unknown.Error : call(void test()); // CE } }""",2004-03-07 22:07:22,936459c,"['tests/bugs/936459c Cosmetic.java', 'weaver/src/org/aspectj/weaver/patterns/936459c WildTypePattern.java']"
54238,Bug 54238 Restore build cancelling to Swing-based IDEs,Core compiler implementation changes have resulted in an incompatability with AJDE's build cancelling mechanism. Once the core canceling behavior stabilizes this needs to be restored.,2004-03-09 22:52:18,a17b51b,['ajbrowser/src/org/aspectj/tools/ajbrowser/a17b51b BasicEditor.java']
54421,Bug 54421 Compile time declarations (warning and error) do not accept string concatenation (with +),"""The following code does not compile because the message uses string concatenation (the + operator). public class WarningSample { public void method() {} public void anotherMethod() { this.method(); } } aspect WarningAspect { pointcut illegalCall(): call(* WarningSample.method()) && within(WarningSample); // the same thing happens with declare error declare warning: illegalCall() : """"Hey, don't """" + """"do that, that is not nice. You should do something else""""; }""",2004-03-11 03:00:18,d43a391,"['tests/bugs/d43a391 decwStrings.java', 'tests/bugs/d43a391 decwStringsErroneous.java', 'tests/src/org/aspectj/systemtest/ajc121/d43a391 Ajc121Tests.java', 'weaver/src/org/aspectj/weaver/patterns/d43a391 PatternParser.java']"
54625,Bug 54625 Incremental support does not work with outjar,"""Either fix the class file deleting etc. to work with jars, or always do a batch build when working with outjars.""",2004-03-12 09:43:12,1a4c02c,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/1a4c02c AjState.java']
54965,Bug 54965 Incremental compilation does twice as much work as necessary,"""When I added support for -outjar in the test harness, I was surprised to find duplicate entry exceptions coming from the output file writing to the outjar. I traced it through, and found that every source file passed to an incremental compile is in fact compiled twice! The first time round we note the references, and of course each file has a reference to itself. Then we call """"AjState.getFilesToCompile"""" looking to see if there are any further files to compile in another iteration. This method does not remember the set of files it just compiled, so since we have referenced each type we just compiled, and we have no reord of that fact, we compile them again. Second time around, the bytecodes are identical to the previous go, so recordClassFile doesn't note their dependents - and thus this time we terminate.""",2004-03-16 10:08:56,41c6f6d,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/41c6f6d AjState.java']
55134,Bug 55134 Incremental compilation does not delete weaver-generated class files,"""During incremental compilation, AjState records classes generated from source files following the initial compile phase, but before weaving. (So that these can be passed to the weaver on a subsequent iteration if we need to reweave the world). During weaving of a given class file, the weaver may generate additional class files (for e.g. around closures) that get written to the output. If the orginal source file is deleted, these additional weaver generated classes are not deleted from the output since AjState does not know about them.""",2004-03-17 14:09:38,7d6b500,"['tests/incremental/initialTests/classWAroundClosureRemoved/7d6b500 AdviceOnIntroduced.delete.20.java', 'tests/incremental/initialTests/classWAroundClosureRemoved/7d6b500 AdviceOnIntroduced.java', 'tests/incremental/initialTests/classWAroundClosureRemoved/7d6b500 Main.java', 'weaver/src/org/aspectj/weaver/bcel/7d6b500 UnwovenClassFile.java']"
55341,Bug 55341 error Type mismatch: cannot convert from java.lang.String to java.lang.String,When compiling a binary concrete aspect library (for later LTW) consisting of more than one aspect that performs an ITD on a target class not exposed to the weaver I get the following error: error Type mismatch: cannot convert from java.lang.String to java.lang.String The error does not oocur if a complete build & weave is performed. Testcase attached.,2004-03-19 04:32:28,0521e79,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/0521e79 InterTypeMemberFinder.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/0521e79 BcweaverJarMaker.java', 'tests/bugs/StringToString/0521e79 HW.java', 'tests/bugs/StringToString/0521e79 X.java', 'weaver/testsrc/org/aspectj/weaver/0521e79 WeavingURLClassLoaderTest.java']"
56779,Bug 56779 [ajdoc] add ajdoc support for inter-type declarations and other declare forms,"""Currently ajdoc only exposes the """"Advises"""" and """"Advised by"""" relationships from the structure model. It needs to support inter-type field and member declarations using a UI similar to how Javadoc presents inherited members. It also needs to support the other declare forms: error, warning, soft, parents, and precedence.""",2004-03-30 12:31:51,ab6c7a5,"['ajdoc/src/org/aspectj/tools/ajdoc/ab6c7a5 HtmlDecorator.java', 'ajdoc/src/org/aspectj/tools/ajdoc/ab6c7a5 StructureUtil.java', 'ajdoc/src/org/aspectj/tools/ajdoc/ab6c7a5 StubFileGenerator.java', 'ajdoc/testdata/declareForms/ab6c7a5 DeclareCoverage.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/ab6c7a5 AjdocTests.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/ab6c7a5 CoverageTestCase.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/ab6c7a5 DeclareFormsTest.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/ab6c7a5 ExecutionTestCase.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/ab6c7a5 PatternsTestCase.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/ab6c7a5 PointcutVisibilityTest.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/ab6c7a5 SpacewarTestCase.java', 'asm/src/org/aspectj/asm/ab6c7a5 IRelationship.java']"
57430,Bug 57430 exception printing,"""Exceptions thrown from the compiler used to be printed once, with the submit-bug header. Now they are printed twice, without and with the header. True of CVS version.""",2004-04-05 04:58:49,e7ac54f,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/e7ac54f AjCompilerAdapter.java']
57436,Bug 57436 Java 1.5 fails to run classes produced by ajc,"""Java 1.5 beta reports a ClassFormatError when running programs (e.g., spacewar) compiled by ajc 1.1.1 and the latest CVS head. Sun's Java 1.5 beta binary-compatibility docs say that some obfuscators violated the .class format specification, so those .class files will fail when run under 1.5. (The docs also say they are still incomplete.) Although 1.5 is still beta, we would want to submit a bug to Sun if our implementation techniques are valid, so we don't have to change those techniques. For 1.2, we should at document if we don't fix, since many people are using 1.5.""",2004-04-05 05:42:29,b0d32ca,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b0d32ca AspectDeclaration.java']
57666,Bug 57666 duplicate manifests cause resource-copying to gack,"""(Ah, the joy of build infrastructure...) Mostly self-explanatory trace, from a build Monday Apr 5, 2004 at 08:46:01 GMT: duplicate entry: META-INF/MANIFEST.MF duplicate entry: META-INF/MANIFEST.MF java.util.zip.ZipException: duplicate entry: META-INF/MANIFEST.MF at java.util.zip.ZipOutputStream.putNextEntry(ZipOutputStream.java:163) at java.util.jar.JarOutputStream.putNextEntry(JarOutputStream.java:90) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.writeResource(AjBuildManager.java:344) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.copyResourcesFromJarFile(AjBuildManager.java:288) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.copyResourcesToDestination(AjBuildManager.java:253) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:195) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:94) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:102) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53) at org.aspectj.tools.ajc.Main.run(Main.java:280) at org.aspectj.tools.ajc.Main.runMain(Main.java:217) at org.aspectj.tools.ajc.Main.main(Main.java:79)""",2004-04-06 17:22:16,2b8fa31,"['ajde/testsrc/org/aspectj/ajde/2b8fa31 AjdeTests.java', 'ajde/testsrc/org/aspectj/ajde/2b8fa31 DuplicateManifestTest.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/2b8fa31 AjBuildManager.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/2b8fa31 BcweaverJarMaker.java', 'weaver/src/org/aspectj/weaver/bcel/2b8fa31 BcelWeaver.java']"
58520,Bug 58520 ajdoc doesn't navigate to target details in some cases,"""When a file is advised, javadoc uses the following naming convention for setting its """"A NAME"""": convertCheckedException(java.lang.Throwable) However, ajdoc uses the unqualified name for the argument, resuting in the follwing in-file anchor link: <class-name>.html#convertCheckedException(Throwable) Which fails to navigate to the anchor within the file, although it does always go to the right file.""",2004-04-14 13:29:14,bbdd496,"['ajdoc/testdata/pr119453/src/pack/bbdd496 C.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/bbdd496 AjdocTests.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/bbdd496 FullyQualifiedArgumentTest.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/bbdd496 AsmElementFormatter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/bbdd496 AsmHierarchyBuilder.java']"
58524,Bug 58524 ajdoc should not use the Declaration and SymbolManager classes,"""In order to speed up porting porting to the old HTML generation code ajdoc continues to use the following classes: org.aspectj.tools.ajdoc.Declaration org.aspectj.tools.ajdoc.SymbolManager These funtion only as a wrapper to the ASM, and are not needed. The next refactoring effort should get rid of them (and all those static methods as well!).""",2004-04-14 13:42:37,f4c8bf9,"['ajdoc/src/org/aspectj/tools/ajdoc/f4c8bf9 Declaration.java', 'ajdoc/src/org/aspectj/tools/ajdoc/f4c8bf9 HtmlDecorator.java', 'ajdoc/src/org/aspectj/tools/ajdoc/f4c8bf9 Main.java', 'ajdoc/src/org/aspectj/tools/ajdoc/f4c8bf9 StubFileGenerator.java', 'ajdoc/src/org/aspectj/tools/ajdoc/f4c8bf9 SymbolManager.java']"
58681,Bug 58681 -X should output available -X options,ajc should emit the available -X options on -help or -X request (the latter like java) to get more traffic and feedback on the experimental options.,2004-04-15 12:19:15,6ea8300,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/6ea8300 AjdtCommand.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/6ea8300 BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/tools/ajc/6ea8300 Main.java', 'org.aspectj.ajdt.core/testsrc/6ea8300 EajcModuleTests.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/tools/ajc/6ea8300 MainTest.java']"
59076,Bug 59076 Reduce footprint of JoinPoint.StaticPart objects,"""Tests show that each object consumes 180+ bytes. For a large project (1000+ classes) where an aspect is used to implement a pervasive cross-cutting concern e.g. exception logging this can lead to >1MB of additional heap space. Two possible approaches could be: 1. Break literal String used by Factory.makeXXXSig() methods into component parts e.g. package, class, method. ... names. These could then be shared automatically by the JVM as interned Strings. 2. Lazy instantiation of handler static JPs in the catch block. Any enhancements could be enabled by a compiler option similar to -XlazyTjp.""",2004-04-19 10:52:41,a5e645f,"['runtime/src/org/aspectj/runtime/reflect/a5e645f Factory.java', 'runtime/src/org/aspectj/runtime/reflect/a5e645f SignatureImpl.java', 'weaver/src/org/aspectj/weaver/bcel/a5e645f LazyClassGen.java']"
59196,"""Bug 59196 """"adviceexecution() && args()"""" pcd does not pick up around advice execution because args() does not match the AroundClosure parameter.""","""In the following sample, the advice defined in """"other_aspect"""" does not pick up the execution of around advice defined in """"some_aspect"""". It matches only against the before advice defined in """"some_aspect"""". The implicit AroundClosure parameter of an around advice seems to come in the way of args() matching. ------------------------------------------------------ aspect some_aspect { pointcut call_m(int a, int b) : call(int test.m(..)) && args(a, b); before(int x, int y) : call_m(x, y) { ... } int around(int x, int y) : call_m(x, y) { ... } } aspect other_aspect { before(int x, int y) : adviceexecution() && within(some_aspect) && args(x, y){ ... } } -------------------------------------------------------- AspectJ doc has to state this explicitly.""",2004-04-20 03:42:16,a66e0a2,"['tests/src/org/aspectj/systemtest/ajc150/a66e0a2 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/a66e0a2 ArgsPointcut.java']"
59208,Bug 59208 Weaver fails in BCEL for large classes,,2004-04-20 05:23:13,44a92e1,"['tests/bugs/pr59208/44a92e1 Foo.java', 'tests/bugs/pr59208/44a92e1 FooProducer.java', 'tests/src/org/aspectj/systemtest/ajc121/44a92e1 Ajc121Tests.java', 'weaver/src/org/aspectj/weaver/44a92e1 WeaverMessages.java', 'weaver/src/org/aspectj/weaver/bcel/44a92e1 LazyClassGen.java']"
59596,Bug 59596 Null pointer exception while weaving java.awt.Label,"""I tried to add an Aspect to java.awt.Label. I compile the aspect via: ajc -inpath /usr/local/j2sdk_nb/j2sdk1.4.2/jre/lib/rt.jar Timestamp.java Here is the aspect Timestamp.java: aspect Timestamp { private int java.awt.Label._ts_read = 0; private int java.awt.Label._ts_write = 0; pointcut writeOp(): call (void java.awt.Label.setText (String)); pointcut readOp(): call (String java.awt.Label.getText()); after (java.awt.Label b) returning: readOp() && target (b) { b._ts_read++; } after (java.awt.Label b) returning: writeOp() && target (b) { b._ts_write++; System.out.println (b._ts_write); } public static void main (String[] args) { java.awt.Label b1 = new java.awt.Label(); b1.setText (""""abc""""); } } Here is the error message I get from ajc: null java.lang.NullPointerException at org.aspectj.ajdt.internal.core.builder.EclipseAdapterUtils.makeLocationContext(EclipseAdapterUtils.java:50) at org.aspectj.ajdt.internal.core.builder.EclipseAdapterUtils.makeSourceLocation(EclipseAdapterUtils.java:120) at org.aspectj.ajdt.internal.core.builder.EclipseAdapterUtils.makeMessage(EclipseAdapterUtils.java:129) at org.aspectj.ajdt.internal.core.builder.AjBuildManager$4.acceptResult(AjBuildManager.java:663) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.acceptResult(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.WeaverAdapter.finishedWith(WeaverAdapter.java:203) at org.aspectj.ajdt.internal.compiler.WeaverAdapter.weaveCompleted(WeaverAdapter.java:167) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:570) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:239) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:114) at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:376) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:600) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:160) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:94) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:102) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53) at org.aspectj.tools.ajc.Main.run(Main.java:280) at org.aspectj.tools.ajc.Main.runMain(Main.java:217) at org.aspectj.tools.ajc.Main.main(Main.java:79) 1 fail|abort""",2004-04-22 05:11:34,a97f3b6,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/a97f3b6 EclipseAdapterUtils.java']
59599,Bug 59599 Race condition in test suite for incremental,"""On faster machines (my linux desktop, andy's home pc) several of the tests in ajcTests.xml are failing (suite attached). This appears to be due to a race condition between checking directory contents and waiting for the compilation to complete. I have an environment in which I can test candidate fixes if you can give me a pointer for what to tweak...""",2004-04-22 06:03:23,bd16033,['testing/src/org/aspectj/testing/harness/bridge/bd16033 DirChanges.java']
59909,Bug 59909 CFlowStack removesThreads to late,"""Problem: The current implementation of CFlowStack (Version 1.1-till 1.2 rc1) stores all threads in a hashtable. These Threads are removes after several calls to the methods getThreadStack(). (In our cases >70 calls.) In our project, this cycle is much to long. We have soveral long running threads, which grap quite a lot of lot of memory. This memory can only be freed after the threads have been removed from the CFlowStack. In our production code we sum up to more than 300 Threads stored in different CFlowStack Varaibles. Often this results in out of memory Errors. Added patch provides an improved freeing scheme. It checks if the size of the table has grown, if it has, it checks if it can remove some threads.""",2004-04-26 05:40:05,5f6b18b,"['runtime/src/org/aspectj/runtime/internal/5f6b18b CFlowStack.java', 'runtime/src/org/aspectj/runtime/internal/cflowstack/5f6b18b ThreadStack.java', 'runtime/src/org/aspectj/runtime/internal/cflowstack/5f6b18b ThreadStackFactory.java', 'runtime/src/org/aspectj/runtime/internal/cflowstack/5f6b18b ThreadStackFactoryImpl.java', 'runtime/src/org/aspectj/runtime/internal/cflowstack/5f6b18b ThreadStackFactoryImpl11.java', 'runtime/src/org/aspectj/runtime/internal/cflowstack/5f6b18b ThreadStackImpl11.java']"
60015,"""Bug 60015 NPE, Incorrect XLint:unmatchedSuperTypeInCall warning""","""(This is an incomplete bug report -- sorry no time not to further isolate.) Running AJDT 1.1.6, I get dozens of these warnings: ---------- Warning does not match because declaring type is java.lang.Object, if match desired use target(st.ata.mc.exim.DatastoreReader) [Xlint:unmatchedSuperTypeInCall] Blah.aj project/src/package/dir line 22 ---------- for something like this code: ---------- import pack.Interface; ... pointcut dsrCall() : call(* Interface.*(..)); // WARNING HERE ... ---------- Each warning points to the pointcut (not the join point shadow). NPE running from the command-line with the latest tree (will attach).""",2004-04-26 16:49:10,ef7885f,"['tests/bugs/ef7885f IncorrectXlintOnInterface.java', 'weaver/src/org/aspectj/weaver/patterns/ef7885f KindedPointcut.java']"
61374,Bug 61374 Version the BCEL libraries to allow graceful failure when the wrong version is found.,,2004-05-07 08:45:15,228fc8d,"['weaver/src/org/aspectj/weaver/bcel/228fc8d BcelAdvice.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelAttributes.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelCflowAccessVar.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelCflowStackFieldAdder.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelField.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelFieldRef.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelMethod.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelObjectType.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelRenderer.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelShadow.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelTypeMunger.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelVar.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d BcelWorld.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d ExceptionRange.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d LazyClassGen.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d LazyMethodGen.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d Range.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d ShadowRange.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d Tag.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d UnwovenClassFile.java', 'weaver/src/org/aspectj/weaver/bcel/228fc8d Utility.java', 'weaver/testsrc/org/aspectj/weaver/bcel/228fc8d ArgsWeaveTestCase.java', 'weaver/testsrc/org/aspectj/weaver/bcel/228fc8d MoveInstructionsWeaveTestCase.java', 'weaver/testsrc/org/aspectj/weaver/bcel/228fc8d WeaveTestCase.java']"
61411,Bug 61411 AJDoc launch script on Windows can lose arguments,"""Using AspectJ 1.2rc1 on Windows XP This report highlights a problem that I've seen using ajdoc.bat on Windows but the issue applies equally to the ajc.bat and ajbrowser.bat files as well. The %ASPECTJ_HOME%\bin\ajdoc.bat file that users run to launch the ajdoc tool imposes a limit of only 9 command line arguments that may be passed to the class org.aspectj.tools.ajdoc.Main. In scenarios where there the -sourcepath, -classpath, -d etc options are used it is easy for these to """"eat up"""" the list of arguments that are passed into the JVM. A long list of packages entered at the end of the ajdoc.bat command can be truncated or possibly even ignored (in which case an error message will be output telling the user that no classes or packages have been specified). In order to prevent a limit being put on the number of arguments passed to the launched JVM, the invocation line needs to end with %* rather than the %1 %2 %3 %4 %5 %6 %7 %8 %9 list it currently uses. The proposed fix also *seems* (could somebody else confirm this ?) to sort out another problem regarding the ajdoc.bat file which is this : long semi- colon delimited paths supplied as the arguments for the -sourcepath and -classpath options seem to get split apart and passed into the JVM as separate arguments unless the entire path list is supplied inside quotes. This should not be necessary. It seems that the batch file processor interprets the semi-colons in a path list as delimiters between arguments. Consequently each element in the path list is treated as a separate argument instead of being part of one big string representing the sourcepath or classpath.""",2004-05-07 12:00:01,39c3a3b,['build/src/$installer$/org/aspectj/39c3a3b Main.java']
61536,"""Bug 61536 Front-end bug, shouldn't allow patterns of the form foo.., should be foo..*""","""See following code: public class Test2 { public static void main(String args[]) { System.out.println(""""Hi""""); } } aspect Aspect2 { // shouldn't one have to say, java..* instead of java.. in the following?? // Note that the first advice (incorrect one) passes the front-end, but does // not match, whereas the second one does match. I believe the front-end // should reject the first one. before () : call( * java..(..)) && within(Test2) { System.out.println( """"Incorrect One: Before a call of method in a java package """"); } before () : call( * java..*(..)) && within(Test2) { System.out.println( """"Correct One: Before a call of method in a java package """"); } }""",2004-05-09 12:50:40,45bce91,"['tests/bugs/45bce91 EllipsesStar.java', 'weaver/src/org/aspectj/weaver/patterns/45bce91 PatternParser.java']"
61768,Bug 61768 scope for intertype methods,"""/* According to the documentation, the scope rules for intertype method declarations are interpreted from the originating aspect. The only exceptions (I thought) are the use of """"this"""" and """"super"""" which refer to the target type. According to that interpretation, the program below is type correct, but ajc generates two error messages, shown in comments at the relevant lines. Note that it's ok to access private static fields of the aspect, but not to use private classes of the aspect. If this is a feature and not a bug, what are the precise scope rules for intertype method declarations? */ aspect Aspect { private static int y = 5; private class A { int x = 3; } private static void B.happy() { System.out.println(y); // happy accessing private field y } private static void B.foo(A z) { System.out.println(z.x); // ERROR: The type Aspect.A is not visible } public void B.bar() { B.foo(new A()); // ERROR: The type A is not visible } } class B { } public class IT { public static void main(String[] args) { new B().bar(); } }""",2004-05-11 13:35:42,8c5d743,"['tests/bugs/oxford/8c5d743 PR61768.java', 'tests/bugs/oxford/8c5d743 PR62475.java', 'tests/src/org/aspectj/systemtest/ajc121/8c5d743 Ajc121Tests.java']"
62227,Bug 62227 Load Time Weaving aborts on any kind of warning (declare/xlint),"""The message handler in the weaving adapter for load time weaving says: public boolean handleMessage(IMessage message) throws AbortException { if (!isIgnoring(message.getKind())) { if (verbose) System.err.println(message.getMessage()); throw new AbortException(message); } return true; } This means for warnings it goes bang. So, even a declare warning that is meant to tell the user something informational during a LTW will cause the code to blow up. The fix is straightforward and simply to log warning messages and only fail for error messages. I am waiting for a testcase from Matthew before checking in the fix.""",2004-05-14 05:34:16,9ebfc84,"['org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/9ebfc84 BcweaverJarMaker.java', 'weaver/src/org/aspectj/weaver/9ebfc84 WeavingURLClassLoader.java', 'weaver/src/org/aspectj/weaver/tools/9ebfc84 WeavingAdaptor.java', 'weaver/testsrc/org/aspectj/weaver/9ebfc84 WeavingURLClassLoaderTest.java']"
62642,Bug 62642 proper handling of ExceptionInIntializer inside <clinit> in presence of after throwing advice,"""When a <clinit> of a class contains after throwing advice that may catch ExceptionInInitializer errors due to an embedded advice aspectOf() that fails, the ExceptionInIntializer error does not get properly reported. For the example below: public class Main { static int x = 13; int y; public Main() { y= 14; } public static void main(String args[]) { Main m = new Main(); m.y = 3; System.out.println(""""hi""""); } } aspect Aspect { before () : within(*) { System.out.println(""""BEFORE """" + thisJoinPointStaticPart.getKind() + """" at """" + thisJoinPointStaticPart.getSourceLocation()); } after () : within(*) { System.out.println(""""AFTER """" + thisJoinPointStaticPart.getKind() + """" at """" + thisJoinPointStaticPart.getSourceLocation()); } } .... when compiled with ajc, and then run, the following exception is given, Exception in thread """"main"""" java.lang.NoClassDefFoundError at Main.<clinit>(Main.java:1) when really one wants the following: Exception in thread """"main"""" java.lang.ExceptionInInitializerError at Main. ... Caused by: org.aspectj.lang.NoAspectBoundException: Aspect at Aspect.aspectOf .. ------------- Here is a fix ... I give the decompiled <clinit> for Main.java and indicate with comments, look for ***LJH ****, what can be woven to fix it. Basically, the catch block for after throwing, when in <clinit>, should first check if the caught exception if a ExceptionInInitializerError, and if so just throw it. ----------- static { org.aspectj.runtime.reflect.Factory r1; java.lang.Throwable r2, r31; int $i0; r1 = new Factory(""""Main.java"""", Class.forName(""""Main"""")); ajc$tjp_0 = r1.makeSJP(""""field-set"""", r1.makeFieldSig(""""8-x-Main-int-""""), 2); ajc$tjp_1 = r1.makeSJP(""""staticinitialization"""", r1.makeInitializerSig(""""8--Main-""""), 2); ajc$tjp_10 = r1.makeSJP(""""preinitialization"""", r1.makeConstructorSig(""""1--Main----""""), 5); ajc$tjp_2 = r1.makeSJP(""""field-set"""", r1.makeFieldSig(""""0-y-Main-int-""""), 6); ajc$tjp_3 = r1.makeSJP(""""constructor-execution"""", r1.makeConstructorSig(""""1--Main----""""), 6); ajc$tjp_4 = r1.makeSJP(""""constructor-call"""", r1.makeConstructorSig(""""1--Main----""""), 10); ajc$tjp_5 = r1.makeSJP(""""field-set"""", r1.makeFieldSig(""""0-y-Main-int-""""), 11); ajc$tjp_6 = r1.makeSJP(""""field-get"""", r1.makeFieldSig(""""19-out-java.lang.System-java.io.PrintStream-""""), 12); ajc$tjp_7 = r1.makeSJP(""""method-call"""", r1.makeMethodSig(""""1-println-java.io.PrintStream-java.lang.String:-arg0:--void-""""), 12); ajc$tjp_8 = r1.makeSJP(""""method-execution"""", r1.makeMethodSig(""""9-main-Main-[Ljava.lang.String;:-args:--void-""""), 10); ajc$tjp_9 = r1.makeSJP(""""initialization"""", r1.makeConstructorSig(""""1--Main----""""), 6); try { Aspect.aspectOf().ajc$before$Aspect$1$36f01b1c(ajc$tjp_1); $i0 = 13; try { Aspect.aspectOf().ajc$before$Aspect$1$36f01b1c(ajc$tjp_0); x = $i0; } catch (Throwable $r30) { /*** LJH insert here *****/ if ($r30 instanceof ExceptionInIntializerError) //*** throw($r30); //*** /***********/ r31 = $r30; Aspect.aspectOf().ajc$after$Aspect$2$36f01b1c(ajc$tjp_0); throw r31; } Aspect.aspectOf().ajc$after$Aspect$2$36f01b1c(ajc$tjp_0); } catch (Throwable $r36) { /*** LJH insert here *****/ if ($r36 instanceof ExceptionInIntializerError) //*** throw($r36); //*** /***********/ r2 = $r36; Aspect.aspectOf().ajc$after$Aspect$2$36f01b1c(ajc$tjp_1); throw r2; } Aspect.aspectOf().ajc$after$Aspect$2$36f01b1c(ajc$tjp_1); }""",2004-05-18 10:23:19,84e4e53,"['tests/bugs/84e4e53 pr62642.java', 'tests/src/org/aspectj/systemtest/ajc121/84e4e53 Ajc121Tests.java', 'weaver/src/org/aspectj/weaver/bcel/84e4e53 BcelShadow.java']"
64331,Bug 64331 java.lang.NullPointerException in WeaverMessageHandler class,,2004-05-27 09:58:21,573741c,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/573741c WeaverMessageHandler.java', 'tests/bugs/abstractITDs/573741c A.java', 'tests/bugs/abstractITDs/573741c C.java', 'weaver/src/org/aspectj/weaver/573741c ResolvedTypeX.java']"
64568,Bug 64568 Wildcarding in ITDs needs clearer compiler error message.,"""If a user attempts to define an ITD using a type pattern (illegal since AspectJ 1.1) they get back a compiler error message of the following form :- MyAspect.java:4 error Syntax error on token """"*"""", around expected public String foo.bar.*.name; A clearer error message informing the user of their use of illegal syntax would help.""",2004-05-28 11:21:04,5e9aca9,['tests/src/org/aspectj/systemtest/ajc150/5e9aca9 Ajc150Tests.java']
65319,Bug 65319 ajc crashes when compiling the following program (binding this() and target()),class Test { public static void main(String args[]) { new Test().method(); } public void method() { new Test2().method2(); } } class Test2 { public void method2() {} } aspect Plain { before(Test x): call(void *.* (..)) && (this(x) || target(x)) { } },2004-06-02 10:29:50,b75cd93,"['tests/bugs/oxford/b75cd93 PR65319.java', 'tests/src/org/aspectj/systemtest/ajc121/b75cd93 Ajc121Tests.java', 'weaver/src/org/aspectj/weaver/bcel/b75cd93 BcelAdvice.java', 'weaver/src/org/aspectj/weaver/patterns/b75cd93 ArgsPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/b75cd93 ExposedState.java', 'weaver/src/org/aspectj/weaver/patterns/b75cd93 ThisOrTargetPointcut.java']"
67578,Bug 67578 Privileged Aspect Access Problem Across Packages,"""From Irum Godil's aspectj-users posting: package a; public class ITD { private void returnNothing(Object a) { } } package b; import a.*; privileged aspect B { public void ITD.newFun() { returnNothing(""""a""""); } } returns: C:\devel\test\priv\b\B.aj:8 error The method returnNothing(Object) from the type ITD is not visible returnNothing(""""a""""); ^^^^^^ 1 error Which it should not (and AspectJ 1.0.6 does not give an error) Work around: use this.returnNothing(""""a"""");""",2004-06-17 01:45:19,6b1ef0f,['tests/src/org/aspectj/systemtest/ajc121/6b1ef0f Ajc121Tests.java']
67592,Bug 67592 value in the args[] array of thisjoinpoint can be changed by one advice decl and updated values seen in another advice decl,"""In ajc a use of thisJoinPoint corresponds to an object of type JoinPoint, where a JoinPoint object has four components, which can be retrieved using accessor methods. this getThis() target getTarget() args getArgs() staticJoinPoint getStaticPart() In the case of args, the object returned is an Object array. This means that an advice decl can overwrite the args, and then another advice which shares the same JoinPoint will see the changed args. Here is a small example. In this aspect the before advice changes arg[0] to always be """"Laurie"""" and then the after advice will always say that """"Laurie won a million pounds"""". Is this the behaviour that is intended? I would have thought that the interface to args[] should be such that the values can only be read. Otherwise very strange interactions between advice decls could occur. --------------------------------------------------------------------- public class Main { public static Main v = new Main(); void lottery ( String arg ) { System.out.println(""""The arg in lottery is """" + arg); } public static void main (String args[]) { v.lottery(""""Oege""""); v.lottery(""""Ganesh""""); } } --------------------------------------------------------------------- public aspect Aspect { // This pair of advice decls demonstrates that an advice can change to // the args of a join point. before () : call(* lottery(java.lang.String)) && !within(Aspect) { System.out.println(""""BEFORE """" + thisJoinPoint + """" at """" + thisJoinPointStaticPart.getSourceLocation()); Object args[] = thisJoinPoint.getArgs(); System.out.println(""""arg[0] is """" + args[0]); args[0] = """"Laurie""""; System.out.println(""""... now it is """" + thisJoinPoint.getArgs()[0]); } after () : call(* lottery(java.lang.String)) && !within(Aspect) { System.out.println(""""AFTER """" + thisJoinPoint + """" at """" + thisJoinPointStaticPart.getSourceLocation()); if (thisJoinPoint.getArgs()[0].equals(""""Laurie"""")) System.out.println(""""Laurie wins 1 million pounds!""""); } }""",2004-06-17 04:06:53,f6436e3,"['runtime/src/org/aspectj/runtime/reflect/f6436e3 JoinPointImpl.java', 'runtime/testsrc/f6436e3 RuntimeModuleTests.java', 'runtime/testsrc/org/aspectj/runtime/reflect/f6436e3 JoinPointImplTest.java']"
67774,Bug 67774 Nullpointer-exception in pointcuts using withincode() clause,"""Hi, I am getting null-pointer-exceptions whenever I try to specify a pointcut with a """"withincode(Signature)"""" clause. E.g.: public aspect DetectSystemOutErrorUsage { pointcut allSystemOutAndSystemErrAccesses(): (get(* System.out) || get(* System.err)) ; declare warning: allSystemOutAndSystemErrAccesses() && !adviceexecution() && !within(com.tivoli.act..Test*) && !within(com.tivoli.act.log..*) && !execution(* com.tivoli.act..*.main(..)) && !execution(* com.tivoli.act..*.usage()) // && !withincode(* com.tivoli.act..*.main(..)) // && !withincode(* com.tivoli.act..*.usage()) : """"Warning: use of System.out or System.err - consider logging instead!""""; } In the above example excluding main() and usage() methods from the pointcut using an execution(...)-clause (shows) works but using a withincode()-clause (as commented) always yields an NPE: trouble in: null java.lang.NullPointerException at org.aspectj.weaver.patterns.SignaturePattern.matches (SignaturePattern.java:87) at org.aspectj.weaver.patterns.WithincodePointcut.match (WithincodePointcut.java:42) at org.aspectj.weaver.patterns.NotPointcut.match(NotPointcut.java:45) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:62) at org.aspectj.weaver.Checker.match(Checker.java:48) at org.aspectj.weaver.bcel.BcelClassWeaver.match (BcelClassWeaver.java:1121) at org.aspectj.weaver.bcel.BcelClassWeaver.matchInit (BcelClassWeaver.java:895) at org.aspectj.weaver.bcel.BcelClassWeaver.match (BcelClassWeaver.java:793) at org.aspectj.weaver.bcel.BcelClassWeaver.weave (BcelClassWeaver.java:343) at org.aspectj.weaver.bcel.BcelClassWeaver.weave (BcelClassWeaver.java:80) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:724) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump (BcelWeaver.java:689) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify (BcelWeaver.java:615) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:563) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave (AjCompilerAdapter.java:239) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling (AjCompilerAdapter.java:114) at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:376) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation (AjBuildManager.java:601) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:160) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (AjBuildManager.java:94) at org.aspectj.ajde.internal.CompilerAdapter.compile (CompilerAdapter.java:108) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:165) !SESSION Jun 18, 2004 10:49:48.666 --------------------------------------------- eclipse.buildId=I200406110010 java.version=1.4.2_03 java.vendor=Sun Microsystems Inc. BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_CH !ENTRY org.eclipse.ajdt.ui 4 0 Jun 18, 2004 10:49:48.666 !MESSAGE NullPointerException thrown: null !STACK 0 java.lang.NullPointerException at org.aspectj.weaver.patterns.SignaturePattern.matches (SignaturePattern.java:87) at org.aspectj.weaver.patterns.WithincodePointcut.match (WithincodePointcut.java:42) at org.aspectj.weaver.patterns.NotPointcut.match(NotPointcut.java:45) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:42) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:62) at org.aspectj.weaver.Checker.match(Checker.java:48) at org.aspectj.weaver.bcel.BcelClassWeaver.match (BcelClassWeaver.java:1121) at org.aspectj.weaver.bcel.BcelClassWeaver.matchInit (BcelClassWeaver.java:895) at org.aspectj.weaver.bcel.BcelClassWeaver.match (BcelClassWeaver.java:793) at org.aspectj.weaver.bcel.BcelClassWeaver.weave (BcelClassWeaver.java:343) at org.aspectj.weaver.bcel.BcelClassWeaver.weave (BcelClassWeaver.java:80) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:724) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump (BcelWeaver.java:689) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify (BcelWeaver.java:615) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:563) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave (AjCompilerAdapter.java:239) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling (AjCompilerAdapter.java:114) at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:376) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation (AjBuildManager.java:601) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:160) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (AjBuildManager.java:94) at org.aspectj.ajde.internal.CompilerAdapter.compile (CompilerAdapter.java:108) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:165) Michael""",2004-06-18 04:54:37,7f19ab4,"['tests/bugs/7f19ab4 WithincodeNPE01.java', 'weaver/src/org/aspectj/weaver/bcel/7f19ab4 BcelShadow.java']"
68494,Bug 68494 ajdoc does not support .aj files,In addition to accepting .java source files ajdoc needs to accept .aj files.,2004-06-24 12:04:22,3707411,"['ajdoc/src/org/aspectj/tools/ajdoc/3707411 Main.java', 'ajdoc/src/org/aspectj/tools/ajdoc/3707411 StructureUtil.java', 'ajdoc/src/org/aspectj/tools/ajdoc/3707411 StubFileGenerator.java', 'ajdoc/testdata/coverage/foo/3707411 UseThisAspectForLinkCheck.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/3707411 CoverageTestCase.java']"
68991,Bug 68991 intertype initialisers should match field set pointcuts,"""/* initialisers of intertype fields should match field set pointcuts. In the example below, the output should be set field set(int C.n) set field set(int C.m) get field get(int C.n) set field set(int C.n) but the first field set (of C.n) is not picked up. */ aspect Aspect { private int C.n = 13; before() : get(* C.*) { System.out.println(""""get field """"+thisJoinPointStaticPart); } before() : set(* C.*) { System.out.println(""""set field """"+thisJoinPointStaticPart); } public void C.foo() { n++; } } class C { int m = 20; } public class ITFieldsAdvice { public static void main(String[] args) { C c = new C(); c.foo(); } }""",2004-06-30 07:51:21,64183c3,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/64183c3 InterTypeFieldDeclaration.java', 'tests/bugs/PR68991/64183c3 Oxford.java', 'tests/bugs/PR68991/64183c3 Simple.java', 'tests/src/org/aspectj/systemtest/ajc121/64183c3 Ajc121Tests.java']"
69011,Bug 69011 ajdoc fails when using default package,,2004-06-30 10:22:51,2cc4826,"['ajdoc/src/org/aspectj/tools/ajdoc/2cc4826 StubFileGenerator.java', 'ajdoc/testdata/coverage/2cc4826 InDefaultPackage.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/2cc4826 CoverageTestCase.java']"
69459,Bug 69459 Hiding of Instance Methods by static methods,"""Using Introduction it is possible to hide instance methods by static methods. Example: class Super { public void m(){}; } class Sub {} aspect A { public static void Sub.m(){} } Acccording to the Java Language Specification this is not allowed. Is this behaviour desired ?? It is also possible to override static methods by instance methods, wich causes a compile time error in java.""",2004-07-07 09:10:42,b184363,"['tests/bugs/intertypeOverrides/b184363 Aspect1.java', 'tests/bugs/intertypeOverrides/b184363 Aspect2.java', 'tests/bugs/intertypeOverrides/b184363 IntertypeOverrides.java', 'tests/bugs/intertypeOverrides/b184363 IntertypeOverrides2.java', 'tests/bugs/intertypeOverrides/b184363 Subclass.java', 'tests/bugs/intertypeOverrides/b184363 Superclass.java', 'weaver/src/org/aspectj/weaver/b184363 ResolvedTypeX.java']"
70008,Bug 70008 problem with ajdoc -public,,2004-07-14 07:16:55,8dc0845,"['ajdoc/src/org/aspectj/tools/ajdoc/8dc0845 HtmlDecorator.java', 'ajdoc/testdata/coverage/foo/8dc0845 PkgVisibleClass.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/8dc0845 CoverageTestCase.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/8dc0845 SpacewarTestCase.java']"
70241,Bug 70241 outline view shows anonymous inner classes in different way than jdt outline,See screenshots.,2004-07-16 11:41:14,a2469c7,"['ajde/testdata/extensions/a2469c7 InnerClasses.java', 'ajde/testsrc/org/aspectj/ajde/a2469c7 ExtensionTests.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/a2469c7 AsmHierarchyBuilder.java']"
70619,"""Bug 70619 compiler aborts with """"conflicting dominates orders"""" with circular declare precedences""","""The following program causes ajc 1.2 to abort: public class Conflict { public static void main(String[] args) { } } aspect Conflict1 { declare precedence: Conflict1, Conflict2; before(): execution(* *(..)) { } } aspect Conflict2 { declare precedence: Conflict2, Conflict1; after(): execution(* *(..)) { } }""",2004-07-22 10:11:01,75852d7,"['tests/bugs/bug70619/75852d7 Conflict.java', 'tests/bugs/bug70619/75852d7 Precedence.java', 'weaver/src/org/aspectj/weaver/75852d7 World.java']"
70773,Bug 70773 AspectJ Error: ConncurrentModificationException thrown: null,"""In AspectJ 1.1.11 for Eclipse, build ID 1.2.0 (and also in the previous 1.1.10) on Eclipse version 3.0.0, build ID 200406351208: If I enable incremental compilation and make a change to a file (typing a space and deleting it, or editing a comment), I get a """"ConncurrentModificationException thrown: null"""" error.""",2004-07-23 21:07:15,9aed31d,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/9aed31d AjLookupEnvironment.java']
71076,Bug 71076 Missing Javadoc comments that aren't missing,"""Reported in the AJDT newsgroup: Go to Preferences > Java > Compiler > Javadoc and set """"Missing javadoc comments"""" to """"Warning"""". You then get warnings against things you wouldn't expect, such as after advice. /** * A comment */ public aspect World { pointcut greeting() : execution(* Hello.sayHello(..)); /** * A comment */ after() returning : greeting() { System.out.println(""""world""""); } } This gives two warnings, one for the aspect itself, and one for the after returning advice. The warnings occur both with and without the existence of Javadoc comments!""",2004-07-29 09:58:13,5b90224,"['org.aspectj.ajdt.core/testdata/javadoc/5b90224 World.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/5b90224 AjdtBatchTests.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/5b90224 JavadocTest.java']"
71159,Bug 71159 pointcut call(MethodPattern) matches non-visible methods in parent class,"""aspectjtools.jar / ajc v1.2 We believe that the call(methodpattern) pointcut has matching behaviour that is inconsistent with what we expect from Java in relation to invocations of methods on subclasses and superclasses. Background: Our goal is to use an aspect to declare ajc compiler warnings on any invocation to a target method, where the space of targets is defined as any visible method of any class in a specified package P or its subpackages. As well as straight invocations from types in packages oustide P and its subpackages, we wish to match method invocations on P where the methods invoked are inherited from P -- that is , they are obtained in a type that directly extends a type in P or its subpackages. The fragment of the aspect we are using is: public aspect Aspect1 { pointcut methodCalls() : !within(Aspect1) && call(* P..*.*(..)) ; // 'P' is the target package space declare warning : methodCalls() : """"invoking""""; //... } Consider these cases: Case 1 method inheritance: Superclass A in package P declares and implements a public method M. A direct subclass B (in a package outside P) directly extends A and inherits this method. Now, any calls inside B to M or this.M() are matched by the call() join point above which seeks to match calls to P..*.*() This is as we would expect since the implementation in package space P is actually being called. Case 2 method overriding: Superclass A in package P declares and implements a public method M. Direct subclass B (in a package outside P) overrides A.M with its own implementation M'. M' does not invoke M. Now, calls inside B to M' or this.M'() are still matched by the call() join point above which seeks to match calls to P..*.*() even though M' does not invoke or depend on M. We do not expect this result since we do not think M is actually called. Case 3 redeclaration of non-visible method with the same name: Superclass A in package P declares and implements a private method M. Direct subclass B (in a package outside P) introduces its own method M having the same signature as A.M. Now, calls in B to M or this.M() are still matched by the call() join point above which seeks to match calls to P..*.*() even though A.M is not visible to B and is never called by it. We do not expect this result since we do not think A.M is ever called. The only way we can explain this apparent behaviour is by reasoning that the compiler is treating the subclass B """"as a type of"""" its parent A and somehow concluding that method calls on B can be equated with calls to methods of identical signature on A. However this seems at odds with the rules for Java visibility and with our expectations for when the call(...) joinpoint should match. We have experimented with execution(...) join points to perform this matching but that has turned up a different set of problems which we are still analyzing. Please can you shed any light on what the call joinpoint is doing here? regards, Dave""",2004-07-30 10:36:22,7e0c3cd,"['tests/bugs150/pr71159/pkg1/7e0c3cd A.java', 'tests/bugs150/pr71159/pkg1/7e0c3cd B.java', 'tests/bugs150/pr71159/pkg1/7e0c3cd C.java', 'tests/src/org/aspectj/systemtest/ajc150/7e0c3cd Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/7e0c3cd ResolvedMemberImpl.java']"
71377,Bug 71377 Cannot advise private method call in around advice,"""Pointcuts should match call joint points in advice. However AspectJ does not match calls to _private_ methods in around advice. The same applies to get/set pointcuts for _private fields. This is probably because in the testcase below a call to """"privateMethod()"""" in the body of the around advice is a call to an accessor method: ajc$inlineAccessMethod$bug_nnnn_JoinPointInAroundAdvice$bug_nnnn_JoinPointInAro undAdvice$privateMethod(""""around""""); public aspect JoinPointInAroundAdvice { private static Set privateCalls = new HashSet(); private static Set publicCalls = new HashSet(); pointcut internalCall () : call(* JoinPointInAroundAdvice.privateMethod(..)); before () : internalCall () { privateCalls.add(thisJoinPoint); } pointcut externalCall () : call(* JoinPointInAroundAdvice.publicMethod(..)); before () : externalCall () { publicCalls.add(thisJoinPoint); } pointcut execTest () : execution(* JoinPointInAroundAdvice.test()); before () : execTest () { privateMethod(""""before""""); publicMethod(""""before""""); } void around () : execTest () { privateMethod(""""around""""); publicMethod(""""around""""); proceed(); } // void around () : execTest () { // Runnable runnable = new Runnable () { // public void run () { // privateMethod(""""around closure""""); // publicMethod; // proceed(); // } // }; // runnable.run(); // } after () : execTest () { privateMethod(""""after""""); publicMethod(""""after""""); } private static void privateMethod (String from) { System.out.println(""""? privateMethod() """" + from); } public static void publicMethod (String from) { System.out.println(""""? publicMethod() """" + from); } public static void test () { System.out.println(""""? test()""""); privateMethod(""""test""""); publicMethod(""""test""""); } public static void main (String[] args) { test(); if (privateCalls.size() != publicCalls.size()) { throw new RuntimeException(""""Missing join point""""); } else { System.out.println(""""Success.""""); } } }""",2004-08-04 10:21:05,851da68,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/851da68 AspectDeclaration.java', 'tests/bugs/AroundAdviceJPs/851da68 FieldGetJoinPointsInAroundAdvice.java', 'tests/bugs/AroundAdviceJPs/851da68 FieldJoinPointsInAroundAdvice.java', 'tests/bugs/AroundAdviceJPs/851da68 JoinPointInAroundAdvice.java', 'tests/src/org/aspectj/systemtest/ajc121/851da68 Ajc121Tests.java', 'weaver/src/org/aspectj/weaver/bcel/851da68 LazyClassGen.java']"
71723,Bug 71723 Inconsistency in scoping of protected members in ITDs,"""When introducing new member functions to existing classes via inter-type declarations, the scoping rules that apply to the ITD bodies are the same as for the aspect - for example, private members of the target class cannot be accessed unless the aspect is privileged. Similarly, protected members of classes in different packages should not be visible in ITDs unless the aspect is privileged. This rule is only enforced for protected members declared in the target class - protected members that are inherited are visible from ITDs in aspects in different packages. The following is an example of this: ---------------------- package foo; public class Foo extends AncientFoo { protected int i() { return 42; } public static void main(String[] args) { new Foo().doStuff(); } public void doStuff() { } protected int ancientI() { return 42; } } class AncientFoo { protected int ancientI() { return -42; } protected int ancientJ() { return 0; } } ---------- package bar; import foo.Foo; aspect Bar { public void Foo.doing() { try { System.out.println(i()); // fails in ajc System.out.println(ancientI()); // fails in ajc System.out.println(ancientJ()); // succeeds System.out.println(clone()); // succeeds } catch(Throwable t) { } } before(Foo f) : call(* doStuff(..)) && target(f) { f.doing(); } } ------------------- All four calls in Foo.doing() should fail, as they refer to protected members of foo.Foo from package bar. However, only the first 2 - the ones directly declared/overridden in foo.Foo - are detected as errors, and removing them makes the rest compile and execute. Best wishes, Pavel""",2004-08-10 13:32:45,dfb15c1,"['tests/bugs/pr71723/foo/dfb15c1 Foo.java', 'tests/src/org/aspectj/systemtest/ajc121/dfb15c1 Ajc121Tests.java']"
71811,Bug 71811 AJDoc: should be able to set encoding like javadoc,"""ajdoc doesn't support the -encoding -docencoding and -charset options of javadoc. Especially, it doesn't pass on the -encoding to ajc. If your project uses a source file encoding (e.g. UTF-8) differing form the platform standard, and some java identifiers use characters byond the standard ASCII range, you won't be able to use ajdoc at all.""",2004-08-11 13:40:26,5f80c8c,"['ajdoc/src/org/aspectj/tools/ajdoc/5f80c8c Main.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/5f80c8c CoverageTestCase.java']"
71878,Bug 71878 Bad injar aspect name on Linux,"""If you checkout the """"JarUsingProject"""" project from """"org.eclipse.ajdt.test/manual testing"""" in the AJDT 1.1.12 tree, and look at the advised-by entries in the outline view and the context menu of the gutter annotation, on Windows you get """"injar aspect: AbstractAspect.aj"""", but on Linux you get """"injar aspect: C:\eclipse30AJDTPluginTest\eclipse\workspace\JarGeneratingProject\src\p1\AbstractAspect.aj"""". The Windows-style path indicates the location of the original class files in the JAR file, which was clearly built on Windows.""",2004-08-12 12:24:31,2dfc738,['asm/src/org/aspectj/asm/internal/2dfc738 AspectJElementHierarchy.java']
72150,Bug 72150 AJC possible bug with static nested classes,,2004-08-18 03:27:01,b5e6307,"['tests/bugs/java5/arrayCloning/b5e6307 A.java', 'tests/bugs/java5/arrayCloning/b5e6307 C.java', 'tests/src/org/aspectj/systemtest/ajc121/b5e6307 Ajc121Tests.java', 'weaver/src/org/aspectj/weaver/b5e6307 TypeX.java']"
72154,Bug 72154 Support for simple dump file,"""When the compiler terminates abnormally (exception) or behaves unexpectedly (warning/error/abort) a simple dump of the compiler state should be produced to aid problem diagnosis. The content and conditions under which the dump is produced should be configurable by the user but the facility should be enabled by default for exceptions. Consequently its inclusion should have negligible impact on compiler performance and footprint. The file should be attached to bug reports to give a complete and objective description of the users environment and support problem resolution where a testcase cannot be provided. One approach is to write a uniquely name file (using date & time) in the current directory e.g ajcore.20040818.105200.txt which should be human readable (it can be zipped if large) to allow the user to potentially diagnose their own problems or remove potentially sensitive data before submission. It should contain basic information such as AspectJ version, system properties and command line as well as failure information such as _full_ exception stack trace, compiler messages and internal compiler state.""",2004-08-18 06:00:35,f503523,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/f503523 AjdtCommand.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/f503523 BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f503523 AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/tools/ajc/f503523 Main.java', 'org.aspectj.ajdt.core/testdata/DumpTestCase/src/f503523 HelloWorld.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/f503523 AjdtBatchTests.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/f503523 CompilerDumpTestCase.java', 'weaver/src/org/aspectj/weaver/f503523 Dump.java', 'weaver/src/org/aspectj/weaver/f503523 World.java', 'weaver/testsrc/org/aspectj/weaver/f503523 BcweaverTests.java', 'weaver/testsrc/org/aspectj/weaver/f503523 DumpTestCase.java']"
72157,Bug 72157 declare soft can cause programs with invalid exception behaviour to be generated,"""Compiling the program below results in the constructor for the class SCE2 throwing Exception, which it is not declared to throw either in the source code or in the generated bytecode. If the 'declare soft' statement is removed, then the super() call in the SCE2 constructor is correctly reported as throwing an undeclared exception; it seems that the 'declare soft' statement turns off the exception checking of the super() call despite there being no join point which covers this call that would actually soften the exception. I'm using 'DEVELOPMENT built on Monday Aug 16, 2004 at 13:50:47 GMT'. public class SuperConsExc { public SuperConsExc() throws Exception { throw new Exception(); } public static void main(String[] args) { new SCE2(); } } class SCE2 extends SuperConsExc { public SCE2() { super(); } } aspect SCEAspect { declare soft: Exception: within(SCE2); }""",2004-08-18 06:39:42,eca1429,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/eca1429 AjProblemReporter.java', 'tests/bugs/eca1429 ConvertToUnchecked.java', 'tests/bugs/eca1429 PR72157.java', 'tests/src/org/aspectj/systemtest/ajc121/eca1429 Ajc121Tests.java']"
72528,Bug 72528 around advice throws java.lang.VerifyError at runtime,"""I have an aspect that captures around() a pcd and returns an Object[], though the actual methods being instrumented might return any valid POJO array, i understand that AspectJ will take care of casting at assignment. I expected the following code to work properly, but at runtime i get a java.lang.VerifyError as shown below: F:\wd\Hello>ajbrowser HelloWorld.lst java.lang.VerifyError: (class: de/rohith/PrinterWorld, method: returnArrayWithCl oning signature: ()[Ljava/lang/Integer;) Incompatible argument to function at de.rohith.HelloWorld.main(HelloWorld.java:18) Exception in thread """"main"""" I suspect the compiler fails to notice the return types of the methods being caught at compile time. I have tested this code with both ajbrowser as well as AJDT, both result in the same error output. -----------HelloWorldAspect.java--------------- package de.rohith; import java.lang.Object; public aspect HelloWorldAspect { private int callDepth = -1; public HelloWorldAspect() { } pointcut hello(): !within(HelloWorldAspect); pointcut method(): execution(public (*[]) de..*(..)); pointcut cloning(): call(* java.lang.Object.clone()); declare warning: method() && hello(): """"*[] returning method called"""" ; Object[] around(): cflow(method()) && cloning() && hello() { print("""""""", thisEnclosingJoinPointStaticPart); Object[] ret = proceed(); return (Object[])ret.clone(); } private void print(String prefix, Object message) { for (int i = 0, spaces = callDepth * 2; i < spaces; i++) { System.out.print("""" """"); } System.out.println(prefix + message); } } -----------PrinterWorld.java------------ package de.rohith; public class PrinterWorld { private Integer[] intArray = new Integer[2]; public PrinterWorld() { } public void print() { System.out.println(""""Hello World!""""); } public Integer returnInt() { return new Integer(3); } public Integer[] returnArrayWithCloning() { for (int i = 0; i < intArray.length; i++) { intArray[i] = new Integer(i++); } return (Integer[])intArray.clone(); } public Integer[] returnArrayWithoutCloning() { return intArray; } } -----------HelloWorld.java------------ package de.rohith; public class HelloWorld { public static void main(String[] args) { PrinterWorld p = new PrinterWorld(); p.print(); Integer i = p.returnInt(); Integer[] intArray = p.returnArrayWithCloning(); Integer[] array2 = p.returnArrayWithoutCloning(); } }""",2004-08-24 14:21:34,27d204c,"['tests/bugs/27d204c ArrayCloning.java', 'tests/src/org/aspectj/systemtest/ajc121/27d204c Ajc121Tests.java', 'weaver/src/org/aspectj/weaver/27d204c ResolvedTypeX.java', 'weaver/src/org/aspectj/weaver/bcel/27d204c BcelShadow.java']"
72531,Bug 72531 declare warning warns at wrong points,,2004-08-24 14:42:12,82eae55,"['tests/bugs/pr72531/de/rohith/82eae55 HelloWorld.java', 'tests/bugs/pr72531/de/rohith/82eae55 HelloWorldAspect.java', 'tests/bugs/pr72531/de/rohith/82eae55 PrinterWorld.java', 'tests/src/org/aspectj/systemtest/ajc121/82eae55 Ajc121Tests.java', 'weaver/src/org/aspectj/weaver/patterns/82eae55 WildTypePattern.java', 'weaver/testsrc/org/aspectj/weaver/patterns/82eae55 TypePatternTestCase.java']"
72671,Bug 72671 Bootclasspath specification for compiling is not possible,"""I have following bug running eclipse 3.0 and ajdt 1.1.12 I have following class: import java.io.FileNotFoundException; import java.io.FileOutputStream; import org.w3c.dom.DOMConfiguration; import org.w3c.dom.DOMError; import org.w3c.dom.DOMErrorHandler; import org.w3c.dom.Document; import org.w3c.dom.DocumentFragment; import org.w3c.dom.NodeList; import org.w3c.dom.ls.DOMImplementationLS; import org.w3c.dom.ls.LSInput; import org.w3c.dom.ls.LSOutput; import org.w3c.dom.ls.LSParser; import com.dcbank.common.DOMImplementationLSSingleton; public class DOMHelper { public static final String CLASS_ID = """"%full_filespec: DOMHelper.java~1:java:1 %""""; public static void save(Document document, String filename) throws ClassNotFoundException, InstantiationException, IllegalAccessException, FileNotFoundException { document.normalizeDocument(); } } which compiles very fine with JDK 1.4.2_02 on Windows XP, as soon as the dom2-xml-apis.jar and dom3-xercesImpl.jar are added at the beginning of the jre container, or are included in the jar-library list before the system jar. As soon as I convert this project to an AspectJ project, the code does not compile anymore. The aspectJ compiler does not find the normalizeDocument, which is included in the one of the two additional jars. method any more. kind regards Arno Schmidmeier""",2004-08-26 06:56:09,d1551bd,"['ajde/src/org/aspectj/ajde/internal/d1551bd CompilerAdapter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/d1551bd BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/d1551bd AjBuildConfig.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/d1551bd AjBuildManager.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/ajc/d1551bd BuildArgParserTestCase.java']"
72699,Bug 72699 Bogus error message: The abstract method ajc$pointcut$$tracingScope$a2 in type Tracing can only be defined by an abstract class,"""When attempting to compile the following aspect the resulting error message should say something like """"The abstract method pointcut tracingScope in type Tracing can only be defined by an abstract aspect"""" public aspect Tracing { public abstract pointcut tracingScope(); }""",2004-08-26 11:46:30,5e08765,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/5e08765 PointcutDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/5e08765 AjProblemReporter.java', 'tests/bugs/5e08765 BogusMessage.java', 'tests/bugs/5e08765 BogusMessage2.java', 'tests/src/org/aspectj/systemtest/ajc121/5e08765 Ajc121Tests.java']"
73334,Bug 73334 Avoid clashes in the org.eclipse namespace by renaming our duplicates.,We have recently renamed our 'copy' of BCEL to use a different package prefix so that our version never clashes with another version that might be around on a users system. This enhancement is to do the same thing for our 'copy' of the org.eclipse.jdt code (in the shadows project). As part of packaging the shadows project to create the 'jdtcore' jar files (bin and src) we will rename the packages from: org.eclipse.jdt.*** to org.aspectj.org.eclipse.jdt.** This has a really nice side effect that we can make our version of the compiler accessible in the IDE. It should now be possible for AJDT to work more closely with it and get features like eager parsing to work. Care will be taken that we don't accidentally make the merge process a nightmare.,2004-09-06 11:41:58,b133299,"['ajde/src/org/aspectj/ajde/internal/b133299 CompilerAdapter.java', 'ajde/testsrc/org/aspectj/ajde/b133299 BuildConfigurationTests.java', 'ajde/testsrc/org/aspectj/ajde/b133299 ExtensionTests.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/b133299 AjdtCommand.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/b133299 BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/compiler/b133299 IAjTerminalSymbols.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/core/b133299 AspectJCore.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/b133299 AjClassFile.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/b133299 AjCompilerAdapter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/b133299 ClassFileBasedByteCodeProvider.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/b133299 IOutputClassFileNameProvider.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/b133299 InterimCompilationResult.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/b133299 WeaverAdapter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/b133299 WeaverMessageHandler.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 AccessForInlineVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 AdviceDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 AjConstructorDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 AjMethodDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 AspectClinit.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 AspectDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 AstUtil.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 DeclareDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 EclipseAttributeAdapter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 IfMethodDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 IfPseudoToken.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 InterSuperFixerVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 InterSuperReference.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 InterTypeConstructorDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 InterTypeDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 InterTypeFieldDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 InterTypeMethodDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 KnownFieldReference.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 KnownMessageSend.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 MakeDeclsPublicVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 PointcutDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 PointcutDesignator.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 Proceed.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 ProceedVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 PseudoToken.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 PseudoTokens.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 SuperFixerVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b133299 ThisJoinPointVisitor.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 AjLookupEnvironment.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 AjTypeConstants.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 EclipseFactory.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 EclipseScope.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 EclipseShadow.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 EclipseSourceLocation.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 EclipseSourceType.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 EclipseTypeMunger.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 HelperInterfaceBinding.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 InlineAccessFieldBinding.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 InterTypeFieldBinding.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 InterTypeMemberFinder.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 InterTypeMethodBinding.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 InterTypeScope.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 PointcutBinding.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 PrivilegedFieldBinding.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 PrivilegedHandler.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b133299 SimpleSyntheticAccessMethodBinding.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/parser/b133299 DeclarationFactory.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/b133299 AjProblemReporter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 AjBatchImageBuilder.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 AjBuildNotifier.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 AjCompilerOptions.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 AjIncrementalImageBuilder.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 AjState.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 AsmElementFormatter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 AsmHierarchyBuilder.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 AspectJBuilder.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 EclipseAdapterUtils.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 EclipseClassPathManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 EclipseSourceContext.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b133299 StatefulNameEnvironment.java', 'org.aspectj.ajdt.core/testsrc/b133299 WeaveTests.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/ajc/b133299 AjdtCommandTestCase.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/ajc/b133299 BuildArgParserTestCase.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/core/builder/b133299 AjCompilerOptionsTest.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/core/builder/b133299 AsmBuilderTest.java']"
73433,Bug 73433 AspectJ does not correctly support -cp,"""Discovered by Andy Brodie. -cp is a shorthand for -classpath supported by the JDT compiler. AspectJ does not correctly support -cp option. Look at this example: C:\aspectj1.2>ajc -inpath injar.jar -outjar outjar.jar -cp lib\aspectjrt.jar [error] can't find type org.aspectj.lang.JoinPoint 1 error C:\aspectj1.2>ajc -inpath injar.jar -outjar outjar.jar -classpath lib\aspectjrt.jar This is due to the arg parser in AspectJ only recognizing -classpath. It doesn't fail when it encounters -cp, it just ignores it and passes it down to JDT for processing. The fix is to recognize -cp too.""",2004-09-08 05:46:09,8e4d898,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/8e4d898 BuildArgParser.java']
73895,Bug 73895 unnecessary cast causing problems,"""class: org.aspectj.weaver.ResolvedTypeX$Name method: isCoerceableFrom(..) I am having trouble with the line: ResolvedMember[] b = ((Name)other).getDeclaredMethods(); //??? is this cast always safe As the comment suggests this cast is NOT always safe. In my case the cast is not safe because I have some additional implementations for ResolvedTypeX (some optimizations). Solution: just remove the cast since the method """"getDeclaredMethods"""" is already defined abstract in the type of """"other"""" (ResolvedTypeX). So the cast seems to be obsolete anyway.""",2004-09-14 13:08:41,8a64fa2,['weaver/src/org/aspectj/weaver/8a64fa2 ResolvedTypeX.java']
74048,Bug 74048 AJDT reports unnecessary compile time warnings for private static aspects,,2004-09-16 05:30:58,16512b2,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/16512b2 AjProblemReporter.java', 'tests/src/org/aspectj/systemtest/ajc150/16512b2 Ajc150Tests.java']"
74238,Bug 74238 Applet which uses cflow pointcut gets AccessControlException,"""When I used cflow pointcut for my applet, I couldn't launch the Applet. java.lang.ExceptionInInitializerError at SandAspect.ajc$preClinit(SandAspect.aj) at SandAspect.<clinit>(SandAspect.aj) at SandApplet.init(SandApplet.java) at sun.applet.AppletPanel.run(AppletPanel.java:353) at java.lang.Thread.run(Thread.java:534) Caused by: java.security.AccessControlException: access denied (java.util.Proper tyPermission aspectj.runtime.cflowstack.usethreadlocal read) at java.security.AccessControlContext.checkPermission(AccessControlConte xt.java:269) at java.security.AccessController.checkPermission(AccessController.java: 401) at java.lang.SecurityManager.checkPermission(SecurityManager.java:524) at java.lang.SecurityManager.checkPropertyAccess(SecurityManager.java:12 76) at java.lang.System.getProperty(System.java:612) at org.aspectj.runtime.internal.CFlowStack.selectFactoryForVMVersion(CFl owStack.java:124) at org.aspectj.runtime.internal.CFlowStack.<clinit>(CFlowStack.java:59) ... 5 more It because CFlowStack uses System.getProperty method with no try..catch block. Applet doesn't have permission to read system property: """"aspectj.runtime.cflowstack.usethreadlocal"""". workaround: modify CFlowStack.java(1.5) line 123,124 like this ----- private static String getSystemPropertyWithNoSecurityException( String aPropertyName, String aDefaultValue){ try{ return System.getProperty(aPropertyName, aDefaultValue); } catch(java.lang.SecurityException e){ return aDefaultValue; } } private static void selectFactoryForVMVersion() { String override = getSystemPropertyWithNoSecurityException( """"aspectj.runtime.cflowstack.usethreadlocal"""" , """"unspecified"""" ); ----- I think defining getSystemPropertyWithNoSecurityException(or more simple name :-)) method in some utility class and using it where you call System.getProperty are better way.""",2004-09-19 05:51:49,6e155a6,"['ajde/testdata/SecurityManagerTest/src/6e155a6 HelloWorld.java', 'runtime/src/org/aspectj/runtime/internal/6e155a6 CFlowCounter.java', 'runtime/src/org/aspectj/runtime/internal/6e155a6 CFlowStack.java']"
74952,"""Bug 74952 before,after !(cflow(within(Trace*))) prints nothing""","""Reference: """"cflow(within(C)) vs (within(C)||cflowbelow(within(C)) in aspectj-users mailing list. The aspect TraceClass below doesn't print any message when the pointcut is defined to """"!cflow(within(Trace*))"""". The other defintion """"!(within(Trace*) || cflowbelow(within(Trace*)))"""" works fine. Wes Isberg in his reply explained that cflow should never be used alone but he thought """"there is a bug or two in here"""" class SomeClass { static public void main (String [] args) { } } // SomeClass aspect TraceClass { // members static private int level = 0; static private void offset() { int i; for (i = 0; i < level; ++i) { System.out.print("""" """"); } } // offset pointcut pc() : !cflow(within(Trace*)) // !(within(Trace*) || cflowbelow(within(Trace*))) ; before () : pc() { offset(); System.out.println(""""-> """" + thisJoinPoint); ++level; } after () : pc() { --level; offset(); System.out.println(""""<- """" + thisJoinPoint); } } // TraceClass In order to try to figure out what is happening within TraceClass, I added a second aspect, TraceTrace, just to trace TraceClass. aspect TraceTrace { // members static private int level = 0; static private void offset() { int i; for (i = 0; i < level; ++i) { System.out.print("""" """"); } } // offset pointcut pc() : within(TraceClass); before () : pc() { offset(); System.out.println(""""=> """" + thisJoinPoint); ++level; } after () : pc() { --level; offset(); System.out.println(""""<= """" + thisJoinPoint); } } // TraceTrace Here is what TraceTrace prints when TraceClass uses """"!cflow(within(Trace*))"""" => staticinitialization(TraceClass.<clinit>) => set(int TraceClass.level) <= set(int TraceClass.level) => preinitialization(TraceClass()) => initialization(TraceClass()) => execution(TraceClass()) <= execution(TraceClass()) <= initialization(TraceClass()) <= staticinitialization(TraceClass.<clinit>) The after advice is not executed for preinitialization.""",2004-09-24 11:04:58,a303a09,"['tests/bugs/a303a09 WhatsGoingOn.java', 'tests/src/org/aspectj/systemtest/ajc121/a303a09 Ajc121Tests.java', 'weaver/src/org/aspectj/weaver/bcel/a303a09 BcelShadow.java']"
75568,Bug 75568 ajc changes classfile timestamps even if compilation fails (regression),"""It appears that ajc 1.2 updates a classfile timestamps even if the compilation fails. This breaks the integration with the Ant build system. E.g. using the ant """"javac"""" task with the Ajc11CompilerAdapter interface, the compilation may fail on the first attempt and succeed on the second attempt, - because ajc has touched the timestamp and Ant hence decides that nothing needs to be recompiled. This did not happen in ajc 1.1. To reproduce: 1. In the examples/observer folder, run a build: ajc -sourceroots . 2. Edit the """"Demo.java"""" class and insert the line """"DONT COMPILE"""" 3. Run the compilation again. The compiler displays the correct error message but the Demo.class file has been updated with the compile-time timestamp.""",2004-10-04 10:12:39,0a77939,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/0a77939 BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/0a77939 AjCompilerAdapter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/0a77939 AjBuildConfig.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/0a77939 AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/0a77939 AjCompilerOptions.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/0a77939 AspectJBuilder.java', 'org.aspectj.ajdt.core/testdata/src1/0a77939 C1.java', 'org.aspectj.ajdt.core/testdata/src1/0a77939 C2.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/0a77939 AjdtBatchTests.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/0a77939 ProceedOnErrorTestCase.java']"
76055,Bug 76055 Some Pointcut PatternNodes are missing getters to traverse syntax tree,"""In order to find out which other pointcuts are referenced by a pointcut definition i need to access the private members of the CflowPointcut, IfPointcut and NotPointcut PatternNodes found in the weaver module. Unlike the OrPointcut and AndPointcut classes, they are missing the appropriate getter methods.""",2004-10-12 03:43:52,b0f270e,"['weaver/src/org/aspectj/weaver/patterns/b0f270e CflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/b0f270e IfPointcut.java']"
76096,Bug 76096 Anonymous classes unaware of introductions into abstract classes (error can't find type $Local$),,2004-10-12 12:17:35,6beb43f,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/6beb43f AjProblemReporter.java', 'tests/bugs/pr76096/6beb43f ConcreteClassA.java', 'tests/src/org/aspectj/systemtest/ajc121/6beb43f Ajc121Tests.java']"
76374,Bug 76374 Problem with declare parents when using non-public classes,"""Non-public classes, when explicitly named, do not get woven. The test case below exhibits this problem when the package declaration is uncommented. If the package declaration is commented out, the class is woven correctly. If the package declaration is uncommented, a compilation failure occurs with AspectJ 1.2. According to Andrew Clement, AspectJ 1.2.1 compiles, but does not weave. If the """"MyInnerClass"""" is changed to be public [regardless of the package declaration status], the class is woven correctly. Also: When the """"MyInnerClass"""" is moved out of """"MyClass"""", but kept in the MyClass.java file, then the following behavior is exhibited: If the package declaration is commented out, the class is woven correctly. If the package declaration is uncommented out, a compilation failure occurs with AspectJ 1.2. Note, in this case, MyInnerClass cannot be declared as public. It also appears that if the RunnableAspect is placed in the same package as """"MyClass"""", weaving occurs correctly, regardless of any class access modifiers <MyClass.java> // package mypackage; public class MyClass { public MyClass() { MyInnerClass mic = new MyInnerClass(); if (mic instanceof Runnable) mic.run(); } class MyInnerClass { public void run() { System.out.println(""""In MyInnerClass.run()!!""""); } } public static void main(String args[]) { new MyClass(); } } </MyClass.java> <RunnableAspect.aj> public aspect RunnableAspect { declare parents: MyClass$MyInnerClass implements Runnable; // declare parents: mypackage.MyClass$MyInnerClass implements Runnable; } </RunnableAspect.aj>""",2004-10-15 13:23:09,ca9c1f7,['tests/src/org/aspectj/systemtest/ajc150/ca9c1f7 Ajc150Tests.java']
76798,Bug 76798 Add versions to woven class files - enabling better backwards compatibility.,"""We don't currently include a version in the class files that come out of the weaver. This can cause problems. For example, if we add a new attribute to a class file in a future version of AspectJ, then that attribute will cause older versions of AspectJ to blow up if they encounter it. If we include a version in the class file we can rev the version number when we add attributes (or change the class file form in another way), and by checking that version number in the weaver we can better determine whether we should fail if we encounter a new attribute (or other change), or if it is safe to continue processing. I will add a new WeaverVersion attribute that includes 2 shorts. Major and Minor. Encountering a major version in a class file that is greater than the version a particular weaver is designed to understand will cause compilation to fail. Encountering a minor version in a class file that is greater than the minor version a particular weaver is designed to understand will not cause compilation to fail - we will assume it is safe to continue.""",2004-10-22 07:04:41,6aa7516,"['weaver/src/org/aspectj/weaver/6aa7516 AjAttribute.java', 'weaver/src/org/aspectj/weaver/bcel/6aa7516 BcelAttributes.java', 'weaver/src/org/aspectj/weaver/bcel/6aa7516 BcelField.java', 'weaver/src/org/aspectj/weaver/bcel/6aa7516 BcelMethod.java', 'weaver/src/org/aspectj/weaver/bcel/6aa7516 BcelObjectType.java', 'weaver/src/org/aspectj/weaver/bcel/6aa7516 LazyClassGen.java', 'weaver/src/org/aspectj/weaver/bcel/6aa7516 LazyMethodGen.java']"
77076,Bug 77076 Weaving into jar fails if some of the referred classes are unavailable,"""I am trying to profile JDBC access in a Spring-based application. Since all the JDBC interaction is performed through Spring classes, I need to weave into spring.jar. However, many of the classes referred by spring.jar aren't available to me (I am not using the functionality implemented by many of the classes). When I try to weave into spring.jar I get errors complaining that it can't find types for those classes. I expected that ajc would ignore unknown classes unless weaving would be affected by content/API of those classes. Using jar files that refer to foreign classes that one may never have/need is a common scenario. For example, spring.jar refers to Velocity, Struts, JDO, Hibernate, Quartz classes; I am unlikely to use all of these referred frameworks in an application. This bug/limitation prevents using AspectJ with such jars. To reproduce the bug in a controlled environment, I created the following aspect which should make the weaving process a pass-thru filter (no join point is matched by the pointcut) class TemporaryClass { } public aspect NoWeaveAspect { before() : call(* TemporaryClass.*(..)) && within(org.spring..*) { } } Weaving this aspect with spring.jar should result in logically identical jar file. However, when I compile using the following command (or equivalent ant task), I get the following errors: C:\work\aop\bugs\injar-with-nonexisting-classes>ajc -version AspectJ Compiler 1.2.1rc1 built on Friday Oct 22, 2004 at 13:31:47 GMT C:\work\aop\bugs\injar-with-nonexisting-classes>ajc -injars spring.jar -outjar s pring-woven.jar NoWeaveAspect.java C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.quartz.xml.JobSchedulingDataProcessor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.quartz.StatefulJob (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.quartz.SimpleTrigger (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe freemarker.cache.TemplateLoader (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.quartz.CronTrigger (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.quartz.JobDetail (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.quartz.Job (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.quartz.impl.jdbcjobstore.JobStoreCMT (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.struts.action.PlugIn (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.velocity.tools.generic.NumberTool (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.struts.action.Action (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.struts.tiles.TilesRequestProcessor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.struts.action.RequestProcessor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.velocity.runtime.resource.loader.ResourceLoader (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.velocity.runtime.log.LogSystem (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe javax.faces.el.VariableResolver (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.velocity.tools.generic.DateTool (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.commons.attributes.AttributeRepositoryClass (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.cglib.proxy.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.commons.pool.PoolableObjectFactory (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.cglib.proxy.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.cglib.proxy.Dispatcher (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInvocation (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.cglib.proxy.CallbackFilter (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.cglib.proxy.NoOp (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.hibernate.transaction.TransactionManagerLookup (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.hibernate.connection.ConnectionProvider (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.hibernate.UserType (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.apache.ojb.broker.accesslayer.ConnectionFactoryManagedImpl (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.cglib.proxy.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe net.sf.cglib.proxy.CallbackFilter (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) C:\work\aop\bugs\injar-with-nonexisting-classes\spring.jar [error] can't find ty pe org.aopalliance.intercept.MethodInterceptor (no source information available) 41 errors""",2004-10-26 23:43:59,a4a9090,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/a4a9090 AjBuildManager.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/core/builder/a4a9090 OutjarTest.java', 'weaver/src/org/aspectj/weaver/a4a9090 JoinPointSignature.java', 'weaver/src/org/aspectj/weaver/a4a9090 JoinPointSignatureIterator.java', 'weaver/src/org/aspectj/weaver/a4a9090 Member.java', 'weaver/src/org/aspectj/weaver/a4a9090 MemberImpl.java', 'weaver/src/org/aspectj/weaver/a4a9090 MissingResolvedTypeWithKnownSignature.java', 'weaver/src/org/aspectj/weaver/a4a9090 ReferenceType.java', 'weaver/src/org/aspectj/weaver/a4a9090 ResolvedMemberImpl.java', 'weaver/src/org/aspectj/weaver/a4a9090 ResolvedType.java', 'weaver/src/org/aspectj/weaver/a4a9090 WeaverMessages.java', 'weaver/src/org/aspectj/weaver/a4a9090 World.java', 'weaver/src/org/aspectj/weaver/bcel/a4a9090 BcelAccessForInlineMunger.java', 'weaver/src/org/aspectj/weaver/bcel/a4a9090 BcelTypeMunger.java', 'weaver/src/org/aspectj/weaver/bcel/a4a9090 LazyClassGen.java', 'weaver/src/org/aspectj/weaver/patterns/a4a9090 SignaturePattern.java', 'weaver/src/org/aspectj/weaver/patterns/a4a9090 TypePatternList.java', 'weaver/src/org/aspectj/weaver/patterns/a4a9090 WildTypePattern.java']"
77163,Bug 77163 Load time weaver default verbose setting,"""The default setting for the load time weaver is (as of 1.2.1rc1) to produce weaving messages rather than ignore them. I think the default should be changed to ignore them. Also, I cannot override the default setting with -Daj.weaver.versose=""""False"""". This is the implied syntax from docs/examples/build.xml. If this has changed then build.xml should be updated. Otherwise, the weaver should be fixed to use it!""",2004-10-27 20:09:52,edd6539,"['weaver/src/org/aspectj/weaver/tools/edd6539 WeavingAdaptor.java', 'weaver/testsrc/org/aspectj/weaver/edd6539 WeavingURLClassLoaderTest.java']"
77269,Bug 77269 Advice on inner classes not show in Outline view or gutter,"""Advice associated with pointcuts that match join points in inner classes are not shown. Declare warning/error are shown however. See attached screenshot for example below. Notice WEAVEINFO messages indicate problem is in AJDT not AspectJ. Also notice phantom entry in Outline view """"injar aspectL Test.java"""". package bug_nnnnn; public class Test { public void test () { new Runnable() { public void run() { try { throw new Exception(); } catch (Exception ex) { handleException(ex); } } }; } public static void handleException (Throwable th) { } public static void main(String[] args) { try { throw new Exception(); } catch (Exception ex) { handleException(ex); } } } aspect Aspect { declare warning : call(void handleException(..)) && !within(Aspect) : """"Only Aspect should handle exceptions""""; pointcut caughtExceptions (Throwable th) : handler(Throwable+) && args(th); before (Throwable th) : caughtExceptions(th) { Test.handleException(th); } }""",2004-10-29 06:25:28,4573068,"['asm/src/org/aspectj/asm/internal/4573068 AspectJElementHierarchy.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/4573068 AsmHierarchyBuilder.java', 'tests/src/org/aspectj/systemtest/ajc150/4573068 Ajc150Tests.java']"
77799,Bug 77799 NullPointerException in StructureSearchManager,Calling Ajde.getDefault().getStructureSearchManager().findMatches(...) for an AspectJ project that has not been built results in a NullPointerException in StructureSearchManager.findMatchesHelper(...) (line 58) Simple patch is attached.,2004-11-04 01:48:22,aab9c2c,['ajde/src/org/aspectj/ajde/ui/aab9c2c StructureSearchManager.java']
78021,Bug 78021 Injecting exception into while loop with break statement causes catch block to be ignored,"""In order to test exception scenarios in an existing framework, I have created an aspect to inject an exception. The exception is injected into some code running within a try/catch/finally block. After the exception is thrown, I am expecting control to pass to the catch block. However, what is happening is that the catch block code is not executed, control passes through the finally block and the (undeclared) exception is thrown to the calling method. Here is a distilled test case: public class MainClass { protected Integer counter; private int j; public static void main(String[] args) { MainClass mh = new MainClass(); try { mh.doSomething(); } catch (Exception e) { System.out.println(""""Exception thrown by doSomething!!!!!""""); e.printStackTrace(); } } public void doSomething() { int i = 0; while (i++ < 1) { counter=null; try { counter = getCounter(); if (counter == null) { break; } commit(); } catch (Throwable e) { System.out.println(""""Caught exception """" + e); } finally { System.out.println(""""In finally block""""); } } } protected Integer getCounter() { return new Integer(j++); } protected void commit() throws SQLException { System.out.println(""""Main.commit""""); } } The following aspect injects the exception: public aspect SimpleExceptionThrowingAspect { pointcut commitOperation() : call (* MainClass+.commit(..)); before() throws SQLException : commitOperation() { throw new SQLException(""""Dummy SQL Exception"""", """"55102""""); } } Expected output is: Caught exception java.sql.SQLException: Dummy SQL Exception In finally block Actual output is: In finally block Exception thrown by doSomething!!!!! java.sql.SQLException: Dummy SQL Exception at nz.govt.moh.test.SimpleExceptionThrowingAspect.ajc$before$nz_govt_moh_test_SimpleExceptionThrowingAspect$1$292c82f1(SimpleExceptionThrowingAspect.aj:10) at nz.govt.moh.test.MainClass.doSomething(MainClass.java:32) at nz.govt.moh.test.MainClass.main(MainClass.java:14) Removing the """"break;"""" statement from MainClass.java causes the expected output to be produced.""",2004-11-06 13:47:16,603b063,"['tests/bugs150/603b063 PR78021.java', 'tests/bugs150/603b063 PR79554.java', 'tests/src/org/aspectj/systemtest/603b063 AllTests.java', 'tests/src/org/aspectj/systemtest/ajc150/603b063 Ajc150TestsNoHarness.java', 'tests/src/org/aspectj/systemtest/ajc150/603b063 AllTestsAspectJ150.java', 'tests/src/org/aspectj/systemtest/ajc150/603b063 AllTestsJava5_binaryWeaving.java', 'tests/src/org/aspectj/systemtest/ajc150/603b063 TestUtils.java', 'weaver/src/org/aspectj/weaver/bcel/603b063 LazyMethodGen.java']"
78261,"""Bug 78261 field pattern with """"void"""" type should be compile-time error""",We really should barf early on get(void i) as opposed to just compiling through and treating it as something that'll never match. I rated this as minor since this is just an error message issue.,2004-11-10 01:58:38,2b23e91,['tests/src/org/aspectj/systemtest/ajc150/2b23e91 Ajc150Tests.java']
79523,Bug 79523 BCException: illegal change to pointcut declaration: calls(<nothing>),,2004-11-25 16:31:26,93fdce1,"['tests/src/org/aspectj/systemtest/ajc150/93fdce1 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/93fdce1 ReferencePointcut.java']"
80249,Bug 80249 Order of types passed to compiler determines weaving behavior,"""Currently, the order in which you specify types when passing them to the compiler can affect how they are woven: For example, if we have class A and class B extends A - Also, an aspect that 'declare parents: A+ implements Serializable' then depending on whether we see A first, we may or may not make B serializable. The fix is that when we weave a type, we first weave its supertype then its superinterfaces (if they were also passed to the compiler). The problematic construct is declare parents - so we only process the types in a special order if there are declare parents around. Also, because we can't currently do decp when binary weaving, the order processing logic is only being put into the source weaving pipeline.""",2004-12-06 05:20:15,9052d5d,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/9052d5d AjLookupEnvironment.java', 'tests/decp/9052d5d A.java', 'tests/decp/9052d5d AspectX.java', 'tests/decp/9052d5d B.java', 'tests/src/org/aspectj/systemtest/ajc150/9052d5d Ajc150Tests.java']"
80916,"""Bug 80916 In some cases the structure model doesn't contain the """"matches declare"""" relationship""","""With a project containing one class and one aspect: public class HelloClass { public static void main(String[] args) { new HelloClass().sayHello(); } public void sayHello() { System.out.println(""""Hello""""); } } public aspect A1 { pointcut test() : get(* System.out); declare warning : test() && !within(A1) : """"test warning""""; pointcut anotherTest() : execution(void HelloClass.sayHello(..)); after() returning : anotherTest() { System.out.println(""""returning....""""); } } The following is returned from the structure model: asmRelMap entry: HelloClass.sayHello(), relationship: advised by, target: A1.afterReturning(): anotherTest.. asmRelMap entry: A1.afterReturning(): anotherTest.., relationship: uses pointcut, target: A1.anotherTest() asmRelMap entry: A1.afterReturning(): anotherTest.., relationship: advises, target: HelloClass.sayHello() asmRelMap entry: HelloClass.sayHello(), relationship: advised by, target: A1.afterReturning(): anotherTest.. asmRelMap entry: A1.anotherTest(), relationship: pointcut used by, target: A1.afterReturning(): anotherTest.. asmRelMap entry: A1.declare warning: """"test warning"""", relationship: matched by, target: HelloClass.sayHello() In other words, the model is saying that there are two entries the same: asmRelMap entry: HelloClass.sayHello(), relationship: advised by, target: A1.afterReturning(): anotherTest.. whereas one of these should be the """"matches declare"""" relationship relating to the declare warning. Changing the aspect to be: public aspect A1 { pointcut test() : get(* System.out); declare warning : test() && !within(A1) : """"test warning""""; pointcut anotherTest() : execution(void HelloClass.sayHello(..)); after() returning : anotherTest() { System.out.println(""""returning....""""); } after() returning : test() { System.out.println(""""returning again!""""); } } means that the IRelationshipMap does now contain the """"matches declare"""" relationship. This is all with AspectJ 5 M1.""",2004-12-14 06:01:38,427c0d3,['weaver/src/org/aspectj/weaver/427c0d3 AsmRelationshipProvider.java']
81846,Bug 81846 EclipseAdapterUtils.java:83,"""java.lang.ArrayIndexOutOfBoundsException: 3 Unfortunately I can't provide much more information, please see the attached compiler dump.""",2004-12-23 07:27:36,a675b65,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/a675b65 EclipseAdapterUtils.java']
81863,Bug 81863 Annotation matching using within() PCD doesn't appear to be working.,,2004-12-23 10:54:16,8a8930f,"['tests/java5/annotations/within/8a8930f PlainWithin.java', 'tests/src/org/aspectj/systemtest/ajc150/8a8930f AnnotationPointcutsTests.java', 'tests/src/org/aspectj/systemtest/ajc150/8a8930f AnnotationRuntimeTests.java', 'weaver/src/org/aspectj/weaver/patterns/8a8930f AnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/8a8930f ExactAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/8a8930f ExactTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/8a8930f HandlerPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/8a8930f TypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/8a8930f WildTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/8a8930f WithinPointcut.java']"
82062,Bug 82062 WeaveMessage should provide more information,It would be wonderful if the WeaveMessage object would provide two additional things: - the affected class name - the aspect name I could use this to determine which aspect is woven into which class during load-time weaving (need this for dependency management).,2005-01-01 15:07:54,9897659,"['bridge/src/org/aspectj/bridge/9897659 WeaveMessage.java', 'weaver/src/org/aspectj/weaver/9897659 Advice.java', 'weaver/src/org/aspectj/weaver/9897659 Shadow.java', 'weaver/src/org/aspectj/weaver/bcel/9897659 BcelTypeMunger.java', 'weaver/src/org/aspectj/weaver/bcel/9897659 BcelWorld.java']"
82134,Bug 82134 AspectJ 5 M2 should implement backwards compatibility for binary aspect form,,2005-01-04 09:40:55,797b6a6,"['tests/src/org/aspectj/systemtest/ajc150/797b6a6 AllTestsJava5_binaryWeaving.java', 'tests/src/org/aspectj/systemtest/ajc150/797b6a6 MigrationTests.java', 'weaver/src/org/aspectj/weaver/797b6a6 AdviceKind.java', 'weaver/src/org/aspectj/weaver/797b6a6 AjAttribute.java', 'weaver/src/org/aspectj/weaver/797b6a6 ResolvedPointcutDefinition.java', 'weaver/src/org/aspectj/weaver/797b6a6 VersionedDataInputStream.java', 'weaver/src/org/aspectj/weaver/797b6a6 WeaverStateInfo.java', 'weaver/src/org/aspectj/weaver/bcel/797b6a6 BcelAttributes.java', 'weaver/src/org/aspectj/weaver/bcel/797b6a6 BcelField.java', 'weaver/src/org/aspectj/weaver/bcel/797b6a6 BcelMethod.java', 'weaver/src/org/aspectj/weaver/bcel/797b6a6 BcelObjectType.java', 'weaver/src/org/aspectj/weaver/bcel/797b6a6 LazyMethodGen.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 AndAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 AndPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 AndTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 AnnotationPatternList.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 AnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 AnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 ArgsAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 ArgsPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 BindingAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 BindingTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 CflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 Declare.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 DeclareErrorOrWarning.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 DeclareParents.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 DeclarePrecedence.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 DeclareSoft.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 ExactAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 ExactTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 HandlerPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 IfPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 KindedPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 ModifiersPattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 NamePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 NotAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 NotPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 NotTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 OrAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 OrPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 OrTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 PerCflow.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 PerClause.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 PerFromSuper.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 PerObject.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 PerSingleton.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 Pointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 ReferencePointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 SignaturePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 ThisOrTargetAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 ThisOrTargetPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 ThrowsPattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 TypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 TypePatternList.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 WildAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 WildTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 WithinAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 WithinCodeAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 WithinPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/797b6a6 WithincodePointcut.java', 'weaver/testsrc/org/aspectj/weaver/bcel/797b6a6 PatternWeaveTestCase.java', 'weaver/testsrc/org/aspectj/weaver/bcel/797b6a6 PointcutResidueTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/797b6a6 AndOrNotTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/797b6a6 DeclareErrorOrWarningTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/797b6a6 ModifiersPatternTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/797b6a6 NamePatternTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/797b6a6 SignaturePatternTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/797b6a6 TypePatternListTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/797b6a6 TypePatternTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/797b6a6 WithinTestCase.java']"
82171,Bug 82171 enable ASM interoperability with JavaCore via uniform element handles,,2005-01-04 14:13:17,df7fff4,"['asm/src/org/aspectj/asm/df7fff4 AsmManager.java', 'asm/src/org/aspectj/asm/df7fff4 IElementHandleProvider.java', 'asm/src/org/aspectj/asm/internal/df7fff4 AspectJElementHierarchy.java', 'asm/src/org/aspectj/asm/internal/df7fff4 FullPathHandleProvider.java', 'asm/src/org/aspectj/asm/internal/df7fff4 ProgramElement.java', 'docs/sandbox/api-clients/org/aspectj/samples/df7fff4 AsmRelationshipMapExtensionTest.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/df7fff4 AsmInterTypeRelationshipProvider.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/df7fff4 AsmHierarchyBuilder.java', 'weaver/src/org/aspectj/weaver/df7fff4 AsmRelationshipProvider.java', 'weaver/src/org/aspectj/weaver/df7fff4 ShadowMunger.java']"
82218,Bug 82218 fails to doc spacewar using AJDT 1.2.0M2,"""Using AJDT 1.2.0M2 {with Java 5 JRE on XP SP2}, install Spacewar example and generate to Spacewar/docs. Result: output has no cross-references (and displays special AJDT tags), and stderr lists this exception: java.lang.StringIndexOutOfBoundsException: String index out of range: -1 at java.lang.AbstractStringBuilder.insert(AbstractStringBuilder.java:980) at java.lang.StringBuffer.insert(StringBuffer.java:447) at org.aspectj.tools.ajdoc.HtmlDecorator.insertDeclarationsDetails(HtmlDecorator.java:350) at org.aspectj.tools.ajdoc.HtmlDecorator.addAspectDocumentation(HtmlDecorator.java:234) at org.aspectj.tools.ajdoc.HtmlDecorator.decorateHTMLFile(HtmlDecorator.java:188) at org.aspectj.tools.ajdoc.HtmlDecorator.decorateHTMLFromDecl(HtmlDecorator.java:116) at org.aspectj.tools.ajdoc.HtmlDecorator.decorateHTMLFromDecls(HtmlDecorator.java:54) at org.aspectj.tools.ajdoc.HtmlDecorator.decorateHTMLFromInputFiles(HtmlDecorator.java:43) at org.aspectj.tools.ajdoc.Main.main(Main.java:210)""",2005-01-05 04:49:41,f70b383,"['ajdoc/src/org/aspectj/tools/ajdoc/f70b383 HtmlDecorator.java', 'ajdoc/src/org/aspectj/tools/ajdoc/f70b383 Util.java', 'ajdoc/testdata/coverage/foo/f70b383 ModelCoverage.java', 'ajdoc/testdata/coverage/foo/f70b383 NoMembers.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/f70b383 CoverageTestCase.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/f70b383 JDKVersionTest.java']"
82340,Bug 82340 Visibility selector ignored for pointcuts,"""Using ajdoc under AJDT 1.1.12 or AspectJ 1.2.1 at the commandline has the following aspect has problems. public abstract aspect Aspect { private pointcut privatePointcut (); protected pointcut protectedPointcut (); public pointcut publicPointcut (); private void privateMethod () { } public void protectedMethod () { } public void publicMethod () { } } 1. Asking for """"protected"""" gives all pointcuts (public, protected _and_ private) 2. The Aspect entry is wrong: """"public abstract class Aspect"""" 3. The """"Methods inherited ..."""" section has a leading comma: """", clone, equals, finalize, ...""""""",2005-01-06 12:25:09,b460597,"['ajdoc/src/org/aspectj/tools/ajdoc/b460597 HtmlDecorator.java', 'ajdoc/src/org/aspectj/tools/ajdoc/b460597 StubFileGenerator.java', 'ajdoc/testdata/bug82340/b460597 Pointcuts.java', 'ajdoc/testdata/coverage/foo/b460597 NoMembers.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/b460597 CoverageTestCase.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/b460597 PointcutVisibilityTest.java']"
82755,Bug 82755 [ajdoc] update ajdoc to support Java 5 language features,Java 5 langauge features such as enums and annotations need to be supported by ajdoc.,2005-01-13 10:49:15,7b7c7b2,"['ajdoc/src/org/aspectj/tools/ajdoc/7b7c7b2 Declaration.java', 'ajdoc/src/org/aspectj/tools/ajdoc/7b7c7b2 StubFileGenerator.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/7b7c7b2 AsmHierarchyBuilder.java']"
82989,Bug 82989 Compiler error due to a wrong exception check in try blocks,"""Compiler error on correct code when an aspect performs a method introdiction. The method introduction contains an invocation to a method from the class and such an invocation is inside an appropriate try block. The ajc compiler performs a wrong check on the exception types. To understand better, please see the attached example""",2005-01-17 12:07:27,cc6e681,"['tests/src/org/aspectj/systemtest/ajc150/cc6e681 Ajc150Tests.java', 'tests/src/org/aspectj/systemtest/ajc150/cc6e681 GenericsTests.java', 'weaver/src/org/aspectj/weaver/cc6e681 AjcMemberMaker.java']"
83303,"""Bug 83303 complier error when mixing inheritance, overriding and polymorphism""","""Given this scenario: - class A define method m1 (with proteceted visibility) - class B extends class A and implements interface I and override method m1 (but with public visibility) - interface I define method m1 (with public visibility) The code is correct and compile using java 1.4 Let's modify the scenario: move the method B.m1 into a method introduction on aspect C, such that - class B extends class A - apsect C intosuces method m1 into B (with public visibility) and makes B implemts I (declare parents) - A and I as before The compiler reports this error: B.java:1 [error] The inherited method A.m1() cannot hide the public abstract method in I class B extends A {""",2005-01-20 08:47:23,5d281fd,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/5d281fd AjProblemReporter.java', 'tests/bugs150/5d281fd PR83303.java', 'tests/src/org/aspectj/systemtest/ajc150/5d281fd Ajc150TestsNoHarness.java']"
83563,Bug 83563 pertypewithin() handing of inner classes,,2005-01-24 14:59:36,1b01255,"['tests/bugs150/1b01255 PR83563_1.java', 'tests/bugs150/1b01255 PR83563_2.java', 'tests/src/org/aspectj/systemtest/ajc150/1b01255 Ajc150TestsNoHarness.java', 'weaver/src/org/aspectj/weaver/1b01255 PerTypeWithinTargetTypeMunger.java', 'weaver/src/org/aspectj/weaver/patterns/1b01255 PerTypeWithin.java']"
83565,"""Bug 83565 BCException """"bad type name"""" thrown when compiling""","""I just downloaded AJDT version 1.2.0.20050124144759 and I am running Eclipse 3.1M4. I tried to use aspectJ on an existing Java 5 project. There are no aspects in it yet, just straight Java 5. The project runs just fine as a standard Java project. When add the AspectJ nature and I try to compile the project, no class files are generated and I get this error generated on a type that is parameterized: Internal compiler error org.aspectj.weaver.BCException: Bad type name: at org.aspectj.weaver.TypeX.nameToSignature(TypeX.java:634) at org.aspectj.weaver.TypeX.forName(TypeX.java:87) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromBinding(EclipseFactory.java:155) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromBindings(EclipseFactory.java:163) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeResolvedMember(EclipseFactory.java:229) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeResolvedMember(EclipseFactory.java:224) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.visit(AsmHierarchyBuilder.java:675) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration.traverse(ConstructorDeclaration.java:447) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1133) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:314) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.internalBuild(AsmHierarchyBuilder.java:171) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.buildStructureForCompilationUnit(AsmHierarchyBuilder.java:111) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.finishedCompilationUnit(EclipseFactory.java:354) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing(AjCompilerAdapter.java:138) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:373) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:682) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:168) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:165) The source code of the file that generates this error is: package mj.compiler.ast; import java.util.Vector; import mj.compiler.Driver; import mj.compiler.Visitor; public class Sequence<T extends AST> extends AST { private Vector<T> elements = new Vector<T>(); public Sequence() { super(0, 0); } public Sequence(T element) { super(element); elements.add(element); } public int length() { return elements.size(); } public T elementAt(int i) { return elements.elementAt(i); } public Sequence add(T element) { elements.add(element); return this; } public Sequence add(int pos, T element) { elements.add(pos, element); return this; } public Sequence addAll(Sequence<T> others) { if( others == null ) return this; elements.addAll(others.elements); return this; } public void visitChildren(Visitor v) { for( AST element : elements ) { element.visit(v); } } public void replaceChild(AST old, AST gnu) { T NEW = (T)gnu; for(int i = 0; i < elements.size(); i++ ) { if( elements.get(i) == old ) { elements.set(i, NEW); return; } } throw new Driver.CompileError(""""Can't find child in replaceChild.""""); } /*** START GENERATED VISITOR PROTOCOL ***///TODO public void visit(mj.compiler.Visitor v) { v.visitSequence(this); } /*** END GENERATED VISITOR PROTOCOL ***/ } Hope this helps something. ps- I am able to create and run a very simple AspectJ project with an aspect, advice, and some Java 5 syntax.""",2005-01-24 17:13:15,5765d53,"['ajde/testdata/bug-83565/5765d53 Bug.java', 'ajde/testsrc/org/aspectj/ajde/5765d53 AjdeTests.java', 'ajde/testsrc/org/aspectj/ajde/5765d53 GenericsTest.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/5765d53 AsmHierarchyBuilder.java']"
83626,Bug 83626 @AJ,Andy wants a patch format + a bugzilla for @AJ work due to some funny license issue. Here it is as drafted,2005-01-25 11:20:09,7b4c7d7,['bcel-builder/src/org/aspectj/apache/bcel/generic/7b4c7d7 MethodGen.java']
83935,Bug 83935 @AJ and formal binding impl,"""Some notes on formal binding impl for @AJ In code style, the advice signature is always looking the same (..bindings.., org.aspectj.lang.Part thisJoinPointStaticPart, JoinPoint thisJoinPoint, org.aspectj.lang.Part thisEnclosingJoinPointStaticPart) In @ style, it is user defined. The current impl is handling the formal binding in a way that only args/this/target can be bound. I had to add some conditionals to handles cases like that: void myAdvice(JoinPoint jp, Object target) {..} where target() binding is at index 1, while the index 0 is not an unbound but actually """"virtually"""" bound to the joinpoint. Pointcut are thus having a virtuallyBoundedNames String[] that is the list of arguments for which we don't want any complain if it not bound. This one is populated during @ extraction, and Pointcut.concretize() make sure the info is not lost when composition occurs (with PerClause f.e.) The only issue is that currently, binding JP/SJP/ESJP themselves is not possible f.e. """"... && args(jp)"""" myAdvice(JoinPoint jp, JoinPoint currentJp) Is that a big issue ? May be impact adviceexecution() and could impact some use cases around mock testing.""",2005-01-28 10:29:18,639b4fd,"['tests/java5/ataspectj/ataspectj/639b4fd MultipleBindingTest.java', 'tests/java5/ataspectj/ataspectj/639b4fd SingletonAspectBindingsTest.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/639b4fd AtAjSyntaxTests.java', 'weaver/src/org/aspectj/weaver/bcel/639b4fd BcelAdvice.java']"
84122,Bug 84122 Allow aspectPath to contain directories,"""The -aspectpath option to the compiler only allows jar/zip files, not directories. But inpath and classpath allow directories. This capability would improve the handling of aspects spanning multiple projects in Eclipse. AJDT can currently only support jar/zip files on the aspect path, which requires one of the projects to create an outjar instead of writing to the bin directory as usual. The iajc ant task could then also be enhanced to support aspectpath directories.""",2005-02-01 05:03:27,68f6350,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/68f6350 BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/68f6350 AjState.java', 'tests/options/aspectpath/68f6350 MyClass.java', 'tests/src/org/aspectj/systemtest/ajc150/68f6350 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/68f6350 BcelWeaver.java']"
84260,Bug 84260 import static fails when importing a method,I got the following error: ============================================== MyClass2.java:3 [error] The import MyClass.myMethod cannot be resolved import static MyClass.myMethod; ============================================== other import static statements (Strings/Enums) appear to work.,2005-02-02 14:23:31,f747b82,"['tests/bugs150/pr84260/f747b82 A.java', 'tests/bugs150/pr84260/f747b82 I1.java', 'tests/bugs150/pr84260/f747b82 I2.java', 'tests/src/org/aspectj/systemtest/ajc150/f747b82 Ajc150Tests.java']"
84312,Bug 84312 Finish implementation of *runtime* retention checking,See FIXME in BindingAnnotationTypePattern.resolveBinding() and EclipseSourceType.getAnnotationTypes(),2005-02-03 05:47:10,f9eebd4,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/f9eebd4 EclipseSourceType.java', 'weaver/src/org/aspectj/weaver/patterns/f9eebd4 BindingAnnotationTypePattern.java']"
84333,Bug 84333 BCException: Bad type name: TypeX.nameToSignature(TypeX.java:635),,2005-02-03 10:14:20,fb01cad,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/fb01cad EclipseFactory.java', 'tests/src/org/aspectj/systemtest/ajc150/fb01cad Ajc150Tests.java', 'tests/src/org/aspectj/systemtest/ajc150/fb01cad GenericsTests.java']"
85297,Bug 85297 Improvements to incremental compilation,,2005-02-15 12:31:18,e460b1e,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/e460b1e AjState.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/e460b1e IStateListener.java', 'tests/src/org/aspectj/systemtest/incremental/e460b1e IncrementalTests.java']"
86057,Bug 86057 expect error when overriding final pointcuts,"""I get no compiler error when I """"override""""/redefine a final pointcut: ------------ public class Main { static void walk() {} static void run() {} public static void main(String[] args) { walk(); run(); } } abstract aspect AA { public final pointcut publicPointcut() : call(void walk()); before() : publicPointcut() { System.out.print(""""here: """" + thisJoinPoint); } } aspect AA1 extends AA { // expecting error here b/c pointcut is final public pointcut publicPointcut() : call(void run()); } ------------ When run, it picks out run() rather than walk().""",2005-02-21 17:25:49,86ce1f7,"['tests/src/org/aspectj/systemtest/ajc150/86ce1f7 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/86ce1f7 ResolvedType.java', 'weaver/src/org/aspectj/weaver/86ce1f7 WeaverMessages.java']"
86789,"""Bug 86789 annotations and """"circularity in declare precedence""""""",,2005-02-27 16:24:12,f90186c,['weaver/src/org/aspectj/weaver/patterns/f90186c WildTypePattern.java']
86832,Bug 86832 Internal compiler error (generics?),"""Attached is project that will generate an """"Internal compiler error"""" for a single class that extends """"ArrayList<Object>"""". If the class extends just """"ArrayList"""" the compiler error does not occur. Note that the """"extends ArrayList<Object>"""" class compiles successuflly without the aspectj nature. --- exception --- Severity Description Resource In Folder Location Creation Time 2 Internal compiler error java.lang.NullPointerException at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ClassScope.detectHierarchyCycle(ClassScope.java:945) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.internalResolveType(ParameterizedSingleTypeReference.java:143) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference.resolveType(ParameterizedSingleTypeReference.java:208) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveSuperType(TypeReference.java:112) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ClassScope.findSupertype(ClassScope.java:1092) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectSuperclass(ClassScope.java:747) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ClassScope.connectTypeHierarchy(ClassScope.java:884) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.connectTypeHierarchy(CompilationUnitScope.java:249) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:91) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:331) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:348) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:682) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:168) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:165) FlattenedListExtendsArrayListObject.java opentrader.infra/src/org/opentrader/infra/springframework February 28, 2005 9:59:42 AM""",2005-02-28 09:59:49,0cb826c,['tests/src/org/aspectj/systemtest/ajc150/0cb826c Ajc150Tests.java']
87282,Bug 87282 Compilation error on generic member introduction,"""The compiler aborts with the following introduction code: aspect introductionToA{ private ArrayList<B> A.m_Array = new ArrayList<B>(); public void A.addB(B tmp){ m_Array.add(tmp); } } The error message is """"[error] The method add(E) in the type ArrayList<E> is not applicable for the arguments (B) m_Array.add(tmp)"""" Compiling with AspectJ Development version (2005/02/18).""",2005-03-07 11:27:29,51c018d,['tests/src/org/aspectj/systemtest/ajc150/51c018d GenericsTests.java']
87376,Bug 87376 NPE when unresolved type of a bound var in a pointcut expression (EclipseFactory.java:224),see attached mini-project to reproduce,2005-03-08 10:11:13,85aa152,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/85aa152 AsmHierarchyBuilder.java', 'tests/bugs150/pr87376/85aa152 I.java', 'tests/src/org/aspectj/systemtest/ajc150/85aa152 Ajc150Tests.java']"
88652,Bug 88652 an array type as the last parameter in a signature does not match on the varargs declared method,"""I get this warning in my code, though I actually do not specify an array type. The signature I want to match is the following constructor signature: public Touple(Object formulaHandle, Object... propositions) {...} Touple implements IRelation The pointcut I use is the following: pointcut p(): call(Touple.new(..)); This should actually match the signature, shouldn't it? AspectJ however complains with this warning: an array type as the last parameter in a signature does not match on the varargs declared method: void ltlrv.Touple.<init>(java.lang.Object, java.lang.Object[]) [Xlint:cantMatchArrayTypeOnVarargs] Also, even if I *had* stated an array type, it should match even then IMHO, since arrays and varargs are actually the same in the Java implementation.""",2005-03-21 12:05:42,b5f4d09,"['tests/src/org/aspectj/systemtest/ajc150/b5f4d09 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/b5f4d09 ExactTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/b5f4d09 SignaturePattern.java', 'weaver/src/org/aspectj/weaver/patterns/b5f4d09 TypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/b5f4d09 WildTypePattern.java']"
88862,Bug 88862 Declare annotation on ITDs,I'll use this bug to capture info on the implementation...,2005-03-23 09:47:03,0d14ccf,"['tests/src/org/aspectj/systemtest/ajc150/0d14ccf AnnotationBinding.java', 'tests/src/org/aspectj/systemtest/ajc150/0d14ccf Annotations.java', 'weaver/src/org/aspectj/weaver/0d14ccf NewFieldTypeMunger.java', 'weaver/src/org/aspectj/weaver/0d14ccf ResolvedMember.java', 'weaver/src/org/aspectj/weaver/bcel/0d14ccf BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/0d14ccf BcelShadow.java', 'weaver/src/org/aspectj/weaver/bcel/0d14ccf BcelWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/0d14ccf LazyMethodGen.java', 'weaver/src/org/aspectj/weaver/patterns/0d14ccf AnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/0d14ccf SignaturePattern.java']"
88900,Bug 88900 Unnecessary warning for ITDs,"""Consider the following aspect: public aspect RunnableDefaultImpl { public void Runnable.run() { } } (Note that it makes little sense to have a default implementation for Runnable. However, I am using it to allow easy reproduction of the bug.) Compiling this aspect leads to the following warning: ...\test\RunnableDefaultImpl.aj:9 [warning] this affected type is not exposed to the weaver: java.lang.Runnable [Xlint:type NotExposedToWeaver] public void Runnable.run() { ^^^ This warning isn't really necessary as weaver doesn't (and shouldn't) need to have Runnable exposed. In fact, everything works as expected already. Now it will be a good warning (or even error), if I was trying to introduce a new method, such as in the following aspect: public aspect RunnableDefaultImpl { public void Runnable.walk() { } }""",2005-03-23 13:37:57,e76b370,"['tests/src/org/aspectj/systemtest/ajc150/e76b370 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/e76b370 ResolvedTypeMunger.java']"
90143,Bug 90143 [itds] Problem with an ITD on an interface,"""If an ITD method is declared on an interface with an anonymous inner class returned as the result, the compiler generates an error for any """"super.xxx"""" calls in the anonymous inner class. The example project shows this with a nested inner interface, but the same problem occurs with an ITD of this kind on any interface. The error does not occur if the ITD is declared on an inner class (as shown in the example) or a normal class.""",2005-04-04 06:46:08,21cf37d,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/21cf37d InterSuperFixerVisitor.java', 'tests/src/org/aspectj/systemtest/ajc150/21cf37d Ajc150Tests.java']"
90588,Bug 90588 compiler verifyerror and an NPE,,2005-04-07 06:32:11,d697649,"['tests/bugs150/pr90588/d697649 AbstractClass.java', 'tests/bugs150/pr90588/d697649 ConcreteClass.java', 'tests/src/org/aspectj/systemtest/knownfailures/d697649 KnownfailuresTests.java']"
91053,Bug 91053 Generics problem with Set - does not compile with AspectJ 5,"""I tried different things to remove compiler warnings about generics which you get when you switch to JDK 5 and use collections. At last I fall back to JDK 1.4. The following code compiles with AspectJ 5 and JDK compliance level 1.4: public aspect SubjectAspect { private Set Subject.observers = new HashSet(); public void Subject.addObserver(SubjectObserver observer) { observers.add(observer); } ... } After switching to compliance level 5.0 I get an error message """"The method add(E) in the type Set<E> is not applicable for the arguments (SubjectObserver)"""". I don't know if it is a similar problem like #87550 but I means for older projects which use collections that they can't switch to JDK 1.5""",2005-04-11 17:15:13,952dda9,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/952dda9 EclipseFactory.java', 'tests/src/org/aspectj/systemtest/ajc150/952dda9 GenericsTests.java', 'weaver/src/org/aspectj/weaver/952dda9 TypeX.java', 'weaver/src/org/aspectj/weaver/952dda9 World.java']"
91114,"""Bug 91114 [jdt-parser] Parser error on System.out.printf(""""..."""" + (after-before) + """"..."""")""","""Following code fragment: ***************************** class Foo { public void bar () { long before = 0; long after = 0; System.out.println(""""... """" + (before - after) + """" ...""""); } } ***************************** leads to following parser error ***************************** [...].java:25 [error] Syntax error on token """"-"""", invalid AssignmentOperator System.out.println(""""... """" + (before - after) + """" ...""""); ***************************** Problems seems to vanish when I rename the before variable.""",2005-04-12 08:03:15,169a488,['tests/src/org/aspectj/systemtest/ajc150/169a488 Ajc150Tests.java']
91267,Bug 91267 NPE at EclipseFactory.java:143 when using generic methods in aspects,"""When I compile any of these two aspects with ajc -1.5, an exception is thrown by the compiler: import java.util.*; public aspect TestBug1 { static <T> void addToEnv(Map<String,T> env, String key, T value) { env.put(key, value); } } import java.util.*; public aspect TestBug2 { static <T> T lookupEnv(Map<String,T> env, String key) { return env.get(key); } } If the methods are placed into classes instead of aspects, all works fine. The exception thrown is the following: java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.getName(EclipseFactory.java:143) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromBinding(EclipseFactory.java:166) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromBindings(EclipseFactory.java:176) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeResolvedMember(EclipseFactory.java:254) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeResolvedMember(EclipseFactory.java:249) at org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.fillDeclaredMembers(EclipseSourceType.java:115) at org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.getDeclaredPointcuts(EclipseSourceType.java:146) at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.buildInterTypeAndPerClause(AspectDeclaration.java:977) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.buildInterTypeAndPerClause(AjLookupEnvironment.java:303) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:119) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:331) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:348) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:683) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:168) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:109) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) at org.aspectj.tools.ajc.Main.run(Main.java:291) at org.aspectj.tools.ajc.Main.runMain(Main.java:227) at org.aspectj.tools.ajc.Main.main(Main.java:80)""",2005-04-13 09:29:09,7389d9f,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/7389d9f EclipseFactory.java', 'tests/src/org/aspectj/systemtest/ajc150/7389d9f GenericsTests.java', 'weaver/src/org/aspectj/weaver/7389d9f TypeX.java']"
91417,Bug 91417 -Xreweavable should be the default,In order to facilitate widespread use of LTW we need to ensure code is compiled with Xreweavable. However we cannot rely on developers to use this flag so it must be the default. Unfortunately the current code bloat is unacceptable for large projects.,2005-04-14 11:16:09,12e6334,"['loadtime/src/org/aspectj/weaver/loadtime/12e6334 ClassLoaderWeavingAdaptor.java', 'loadtime/src/org/aspectj/weaver/loadtime/12e6334 Options.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/12e6334 BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/core/12e6334 AspectJCore.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/12e6334 AjBuildConfig.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/12e6334 AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/12e6334 AjCompilerOptions.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/12e6334 AspectJBuilder.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/12e6334 BinaryFormsTestCase.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/core/builder/12e6334 AjCompilerOptionsTest.java', 'taskdefs/src/org/aspectj/tools/ant/taskdefs/12e6334 AjcTask.java', 'testing/newsrc/org/aspectj/testing/12e6334 WeaveSpec.java', 'testing/src/org/aspectj/testing/harness/bridge/12e6334 CompilerRun.java', 'tests/java5/ataspectj/ataspectj/ltwlog/12e6334 MainVerboseAndShow.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/12e6334 AtAjLTWTests.java', 'weaver/src/org/aspectj/weaver/12e6334 WeaverStateInfo.java', 'weaver/src/org/aspectj/weaver/bcel/12e6334 BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/12e6334 BcelTypeMunger.java', 'weaver/src/org/aspectj/weaver/bcel/12e6334 BcelWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/12e6334 LazyClassGen.java']"
91719,Bug 91719 Work with Oli B to pull in examples of generating all the LINT messages,,2005-04-18 05:21:33,70b9ffd,"['tests/bugs/seven/lint/70b9ffd Main.java', 'tests/src/org/aspectj/systemtest/xlint/70b9ffd XLintTests.java']"
91858,Bug 91858 NullPointerException when declare @type is spelt with capital letter,I have the following code in an AspectJ project: declare @Type: MainClass : @MyAnnotation; I believe the correct syntax should be: declare @type: MainClass : @MyAnnotation; However when I saved my aspect with the first version I got the following NullPointerException: java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.ast.DeclareAnnotationDeclaration.postParse (DeclareAnnotationDeclaration.java:83) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ClassScope.postParse (ClassScope.java:175) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFieldsAndM ethods(ClassScope.java:154) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.build FieldsAndMethods(CompilationUnitScope.java:63) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindi ngs(AjLookupEnvironment.java:104) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile (Compiler.java:331) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile (Compiler.java:348) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation (AjBuildManager.java:683) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:191) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild (AjBuildManager.java:109) at org.aspectj.ajde.internal.CompilerAdapter.compile (CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:165),2005-04-19 05:38:48,78abc76,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/78abc76 DeclareAnnotationDeclaration.java', 'tests/src/org/aspectj/systemtest/ajc150/78abc76 DeclareAnnotationTests.java', 'weaver/src/org/aspectj/weaver/patterns/78abc76 PatternParser.java']"
91912,Bug 91912 Request for a new type of relationship in the structure model,Declare soft relationships are currently 'advises' and 'advised by' relationships. Would it be possible to add 'softens' and 'softened by' (or 'softens exception at' and 'exception softened by') relationships to the structure model?,2005-04-19 11:32:29,7a61380,"['asm/src/org/aspectj/asm/7a61380 IRelationship.java', 'weaver/src/org/aspectj/weaver/7a61380 AsmRelationshipProvider.java']"
92053,Bug 92053 @args causes a VerifyError: Unable to pop operand off an empty stack,"""I'm getting a VerifyError exception when I try to use @args in following code: ------------------ Test3.java ------------------------- import java.lang.annotation.*; @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @interface Ann {} @Ann class AClass{} public class Test3 { void abc(AClass y) {} public static void main(String[] args) { new Test3().abc(new AClass()); } } aspect Annotations { before(Ann ann) : call(* Test3.*(..)) && @args(ann) { System.out.println(""""Before: """" + thisJoinPoint); } } ---- On JRockIt5 jre and AspectJ 1.5.0M2 I get following result: ----------- java.lang.VerifyError: (class: Test3, method: main signature: ([Ljava/lang/String;)V) Unable to pop operand off an empty stack ----------- I'm getting similar error with sun jre and with older versions of AspectJ5 (20050324155000 and from 10th feb).""",2005-04-20 07:19:59,3f942a4,"['tests/java5/annotations/binding/bugs/3f942a4 Test3.java', 'tests/src/org/aspectj/systemtest/ajc150/3f942a4 AnnotationBinding.java', 'weaver/src/org/aspectj/weaver/patterns/3f942a4 ArgsAnnotationPointcut.java']"
92630,Bug 92630 Null Pointer Exception thrown by ajc compiler,,2005-04-25 15:26:05,02f75ba,['weaver/src/org/aspectj/weaver/bcel/02f75ba UnwovenClassFile.java']
92837,Bug 92837 [inc-compilation] Incremental Compilation Fails for ITD's on Aspects,"""On my project, when I save an aspect that calls an inter-type declaration defined on itself, the incremental compiler gives a message like this: The method logError(String, Exception) is undefined for the type Foo Foo.java Running a full build clears the error. This might be a compiler bug, or it might be AJDT (I never run command-line incremental compilation, so I don't know :-)). Unfortunately, simple test cases or extracts of just the 2 aspects aren't reproducing the issue, so let me know if you need me to spend some time trying to create a small isolated version of the issue.""",2005-04-26 17:48:55,727b0f5,"['tests/multiIncremental/PR92837/base/sample/727b0f5 AbstractDerived.java', 'tests/multiIncremental/PR92837/base/sample/727b0f5 Holder.java', 'tests/multiIncremental/PR92837/inc1/sample/727b0f5 AbstractDerived.java', 'tests/src/org/aspectj/systemtest/incremental/tools/727b0f5 MultiProjectIncrementalTests.java']"
92906,Bug 92906 showWeaveInfo for declare annotations,"""declaring annotations (declare @type, @constructor, @method and @field) currently doesn't show a message when the -showWeaveInfo option is set in ajc. Appropriate messages should be displayed.""",2005-04-27 09:55:33,abc9a58,"['ajde/testsrc/org/aspectj/ajde/abc9a58 ShowWeaveMessagesTestCase.java', 'bridge/src/org/aspectj/bridge/abc9a58 WeaveMessage.java', 'weaver/src/org/aspectj/weaver/bcel/abc9a58 BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/abc9a58 BcelWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/abc9a58 Utility.java']"
93345,Bug 93345 unresolved joinpoint in cflow causes ClassCastException on BcelWeaver:933,"""I'm getting ClassCastException while compiling following code: ---- Test.java ---- class AClass { // void method() {} } aspect AnAspect { pointcut annt() : cflow( execution(* *(..)) ); before() : annt() { System.out.println(""""before annt""""); } } ---- Here's output of the compiler: --- out --- java.lang.ClassCastException: org.aspectj.weaver.ResolvedMember at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:933) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:244) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:119) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:385) [cut] ------ The problem is caused by cflow on unresolved (not existing) jointpoint. When you uncomment the method() in AnClass, the problem disappears. I found this bug when I was introducing an aspect (which has pointcuts based on annotations) to fresh object-oriented system without annotated classes. When I started to annotate the classes problem disappeared. Following code illustates (simplified) situation: --- Test2.java --- import java.lang.annotation.*; @Target(ElementType.METHOD) @interface Ann {} class AClass { // @Ann void method() {} } aspect AnAspect { pointcut annt() : cflow( execution(@Ann * *(..)) ); before() : annt() { System.out.println(""""before annt""""); } } ---- I'm attaching those sources and ajcore files. Best regards, Michal""",2005-04-30 08:49:47,f603458,"['tests/src/org/aspectj/systemtest/ajc150/f603458 AllTestsAspectJ150.java', 'tests/src/org/aspectj/systemtest/ajc150/f603458 StaticImports.java', 'tests/src/org/aspectj/systemtest/ajc150/f603458 SuppressedWarnings.java', 'weaver/src/org/aspectj/weaver/bcel/f603458 BcelWeaver.java']"
94086,Bug 94086 Exploding compile time with if() statements in pointcut,"""Compile time explodes when adding if(...) statements to pointcuts. This is the same with ajc 1.2.1 and 1.5M2 although 1.5M2 is a little bit faster, but compile time still explodes. Example: pointcut pc2() : (execution(* Test.a(..)) && if(sl.isEnabled()) ) || (execution(* Test.a(..)) && if(sl.isEnabled()) ) compiled in about 1 second. Up to 7 such conditions , eg. pointcut Pc7() : (execution(* Test.a(..)) && if (sl.isEnabled())) || (execution(* Test.b(..)) && if (sl.isEnabled())) || (execution(* Test.c(..)) && if (sl.isEnabled())) || (execution(* Test.d(..)) && if (sl.isEnabled())) || (execution(* Test.e(..)) && if (sl.isEnabled())) || (execution(* Test.f(..)) && if (sl.isEnabled())) || (execution(* Test.g(..)) && if (sl.isEnabled())); are also compiled quite quickly (~ 3 seconds with both ajc 1.2.1 and 1.5M2). Now, adding another condition (8 lines) causes 6 seconds compile time. Adding yet another condition line (= 9 ex. lines) causes ~ 1 min compile time! (10 such lines even more than 8 minutes) Sample source code below ------------------------ // ########## Aspect.aj ############### public aspect Aspect { private static final SimpleLogger sl = new SimpleLogger(); pointcut PC() : (execution(* Test.a(..)) && if (sl.isEnabled())) || (execution(* Test.b(..)) && if (sl.isEnabled())) || (execution(* Test.c(..)) && if (sl.isEnabled())) || (execution(* Test.d(..)) && if (sl.isEnabled())) || (execution(* Test.e(..)) && if (sl.isEnabled())) || (execution(* Test.f(..)) && if (sl.isEnabled())) || (execution(* Test.g(..)) && if (sl.isEnabled())) || (execution(* Test.h(..)) && if (sl.isEnabled())) || (execution(* Test.i(..)) && if (sl.isEnabled())) || (execution(* Test.j(..)) && if (sl.isEnabled())) ; before() : PC() { sl.log(""""Before""""); } after() : PC() { sl.log(""""After""""); } } // ########## Test.java ###############""",2005-05-09 04:45:22,88d477d,"['tests/src/org/aspectj/systemtest/ajc150/88d477d Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/88d477d IfPointcut.java']"
94167,Bug 94167 NPE in reflect implementation,"""Proposed fix (I'd like input on how to best add test cases for this so I can submit a tested patch); I believe this will work because if you uncomment the work-around line, it works): Change line 63 from: method = declaringType.getDeclaredMethod (getName(),getParameterTypes()); to method = getDeclaringType().getDeclaredMethod (getName(),getParameterTypes()); Test source: package reflect; import org.aspectj.lang.*; import org.aspectj.lang.reflect.*; import java.lang.reflect.*; aspect Test { before() : call(* *(..)) && !within(Test) { MethodSignature sig = (MethodSignature)thisJoinPoint.getSignature(); //sig.getDeclaringType(); // uncomment to work-around Method method = sig.getMethod(); } } public class MinimalErr { public static void main(String args[]) { try { Inner.foo(); } catch (Throwable t) { t.printStackTrace(); } } public static class Inner { public static void foo() {} } }""",2005-05-09 13:37:42,3824b1c,"['runtime/src/org/aspectj/runtime/reflect/3824b1c AdviceSignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/3824b1c MethodSignatureImpl.java', 'tests/bugs150/3824b1c PR94167.java', 'tests/src/org/aspectj/systemtest/ajc150/3824b1c Ajc150Tests.java']"
95992,Bug 95992 Problems resolving type name inside generic class,"""ajc reports an error when compiling the following code: interface Base<T> { static interface Inner { } } class Test<T extends Test.InnerTest> implements Base<T> { static class InnerTest implements Inner { } } $ ajc -1.5 Test.java Test.java:14 [error] Inner cannot be resolved to a type static class InnerTest implements Inner { Sun's javac compiles it without any error. The error can be avoided by simply writing """"Base.Inner"""" instead of just """"Inner"""". Also, it compiles fine if the constraint """"extends Test.InnerTest"""" is left away.""",2005-05-19 14:12:24,b953c03,['tests/src/org/aspectj/systemtest/ajc150/b953c03 Ajc150Tests.java']
96371,Bug 96371 Patch to support loading aop.xml properly,"""AspectJ 5 load-time weaving in CVS HEAD isn't loading aop.xml files properly from a jar file without specifying the global -D flag. The following patch fixes the problem for me so I can load aop.xml files from jars on the classpath without a global flag: ClassLoaderWeavingAdaptor.java:109: - Enumeration xmls = loader.getResources(""""/META-INF/aop.xml""""); + Enumeration xmls = loader.getResources(""""META-INF/aop.xml""""); I.e., getResources doesn't work with a leading separator, at least not on the Sun VM or JRockIt on Windows. Writing a unit test for this would require significant changes to the loadtime module, so I wrote a standalone test of the API: public class TestApi extends TestCase { public void testLoadResource() throws Exception { URL urlList[] = { new URL (""""file:testsrc/org/aspectj/weaver/loadtime/test/sample.jar"""") }; ClassLoader loader = new URLClassLoader(urlList); Enumeration xmls = loader.getResources(""""META-INF/aop.xml""""); //this version fails: //Enumeration xmls = loader.getResources(""""/META-INF/aop.xml""""); assertTrue(xmls.hasMoreElements()); } }""",2005-05-23 17:22:52,f14646f,"['loadtime/src/org/aspectj/weaver/loadtime/f14646f ClassLoaderWeavingAdaptor.java', 'loadtime5/java5-src/org/aspectj/weaver/loadtime/f14646f ClassPreProcessorAgentAdapter.java', 'tests/java5/ataspectj/ataspectj/f14646f SingletonAspectBindingsTest.java']"
98290,"""Bug 98290 no """"matches declare"""" entry in structure model for single declare warning statement""","""A project containing one class and one aspect: ----------------------------------------------------- package pack; public class C { public static void main(String[] args) { new C().sayHello(); } public void sayHello() { System.out.println(""""HELLO""""); } } ---------------------------------------------------- package pack; public aspect A { declare warning : execution(* C.sayHello(..)) : """"blah blah""""; } ----------------------------------------------------- has the """"matched by"""" entry for A.aj, but doesn't have the """"matches declare"""" entry for C.java. This means that in AJDT, C.sayHello isn't added to our map and consequently we don't get any relationships showing in the Cross Reference view for A.aj.""",2005-06-03 10:57:01,619f8bc,"['weaver/src/org/aspectj/weaver/bcel/619f8bc BcelShadow.java', 'weaver/src/org/aspectj/weaver/bcel/619f8bc LazyMethodGen.java']"
98646,Bug 98646 parser cannot parse varargs correctly,"""the following cannot be parsed: call(* *(int, Integer...)) see in modules/weaver/.../PointcutVisitorTest (uncomment the testTemp()) See """"FIXME AV for Adrian"""" comments in PatternParser. Half fix but then fails for other tests. Adrian can you have a look at it ? Thanks""",2005-06-07 05:55:18,743566f,"['weaver/src/org/aspectj/weaver/patterns/743566f BasicTokenSource.java', 'weaver/src/org/aspectj/weaver/patterns/743566f PatternParser.java', 'weaver/testsrc/org/aspectj/weaver/patterns/743566f VisitorTestCase.java']"
99125,Bug 99125 Repetitive method name/signature in class file,"""This is what the VM sais: java.lang.ClassFormatError: Repetitive method name/signature in class file com/ netvisor/metadata_view/ComponentFactory at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:620) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java: 124) at java.net.URLClassLoader.defineClass(URLClassLoader.java:260) at java.net.URLClassLoader.access$100(URLClassLoader.java:56) at java.net.URLClassLoader$1.run(URLClassLoader.java:195) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:188) at java.lang.ClassLoader.loadClass(ClassLoader.java:306) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268) at java.lang.ClassLoader.loadClass(ClassLoader.java:251) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) And this is why: I've got an interface (ComponentFactory) and an aspect that adds various ITD methods trough that interface. I've added some methods to both the interface and the aspect, some other methods are only added trough the aspect. (The situation is a bit more complex, I've got a base interface/aspect with these two methods and the subaspects implement the problematic two methods .) And those methods that are both in the interface and the aspect are the ones that get duplicated in the interface class file. This is working fine in the old CVS branch (1.2.*). Hope it helps, good luck!""",2005-06-09 06:25:43,df46c6f,"['tests/bugs150/pr99125/p/df46c6f I.java', 'tests/bugs150/pr99125/p/df46c6f J.java', 'tests/src/org/aspectj/systemtest/ajc150/df46c6f Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/df46c6f BcelTypeMunger.java', 'weaver/src/org/aspectj/weaver/bcel/df46c6f LazyClassGen.java']"
99136,Bug 99136 xlint advice not applied appears twice with cflows,"""////////////// in the following code aspect A{ before(): call(* *(..)) && cflow(execution(* *(..))) {} } //////////////////////////////////// two """"advice not appied"""" xlint messages are produced, one for the before advice and one for the cflow within the before advice.""",2005-06-09 08:36:06,047173e,"['tests/bugs150/pr105479/047173e Driver.java', 'tests/bugs150/pr105479/047173e ReturnTypeTester.java', 'tests/harness/047173e XLintcflow.java', 'tests/src/org/aspectj/systemtest/ajc150/047173e Ajc150Tests.java', 'tests/src/org/aspectj/systemtest/xlint/047173e XLintTests.java', 'weaver/src/org/aspectj/weaver/bcel/047173e BcelWeaver.java']"
99168,Bug 99168 [generics][itds] ITD on generic inner class crashes ajc,inter-type declaration on a generic inner class crashes the compiler: class Outer { class Inner {} class Generic_Inner<T> {} } class Generic_Outer<T> { } aspect Injector { int Outer.outer; // works int Outer.Inner.inner; // works int Generic_Outer.outer; // works int Outer.Generic_Inner.inner; // crashes } /home/user/sgelin3/dev/java/ajc/new_bug/Bug.java [error] Internal compiler error java.lang.RuntimeException: can't handle: class Generic_Inner#RAW extends NULL TYPENULL SUPERINTERFACES enclosing type : OuterNULL FIELDSNULL METHODS at org.aspectj.ajdt.internal.compiler.lookup.InterTypeScope.makeSourceTypeBinding(InterTypeScope.java:35) at org.aspectj.ajdt.internal.compiler.lookup.InterTypeScope.<init>(InterTypeScope.java:28) at org.aspectj.ajdt.internal.compiler.ast.InterTypeDeclaration.resolve(InterTypeDeclaration.java:101) at org.aspectj.ajdt.internal.compiler.ast.InterTypeFieldDeclaration.resolve(InterTypeFieldDeclaration.java:141) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1076) at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:110) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1125) ...,2005-06-09 11:21:17,588023e,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/588023e InterTypeScope.java']
99191,Bug 99191 declare @field allowed for non existent fields,"""///// in this code @interface anInterface{} aspect B { declare @field : int B.noSuchField : @anInterface; // should be an error } ////////////////// I don't get an error, even though B.noSuchField doesn't exist. If I try declare @field on NoSuchCLass.noSuchField I do get an error though.""",2005-06-09 12:08:17,2da9b31,"['tests/bugs150/pr99191/2da9b31 pr99191_1.java', 'tests/bugs150/pr99191/2da9b31 pr99191_2.java', 'tests/bugs150/pr99191/2da9b31 pr99191_3.java', 'tests/bugs150/pr99191/2da9b31 pr99191_4.java', 'tests/bugs150/pr99191/2da9b31 pr99191_5.java', 'tests/bugs150/pr99191/2da9b31 pr99191_6.java', 'tests/src/org/aspectj/systemtest/ajc150/2da9b31 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/2da9b31 BcelClassWeaver.java']"
100227,Bug 100227 [generics][itds] inner class with generic enclosing class,"""ajc crashes with a NullPointerException when an intertype declaration tries to modify an inner class, if the enclosing (outer) class is generic: class Outer { class Inner {} } class Generic_Outer<T> { class Inner {} } aspect Injector { int Outer.outer; // works int Outer.Inner.inner; // works int Generic_Outer.outer; // works int Generic_Outer.Inner.inner; // crashes } /home/user/sgelin3/dev/java/ajc/new_bug/Bug.java [error] Internal compiler error java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromBinding(EclipseFactory.java:202) at org.aspectj.ajdt.internal.compiler.ast.InterTypeFieldDeclaration.build(InterTypeFieldDeclaration.java:173) at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.buildInterTypeAndPerClause(AspectDeclaration.java:1020) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.buildInterTypeAndPerClause(AjLookupEnvironment.java:306) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:122) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:302) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:316) ...""",2005-06-15 12:24:09,7d5002a,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/7d5002a EclipseFactory.java', 'tests/src/org/aspectj/systemtest/ajc150/7d5002a Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/7d5002a TypeX.java']"
100260,Bug 100260 [generics][itds] methods inherited from a generic parent,"""when using an intertype declaration to add a method to a generic class, the method is not correctly inherited. the bug doesn't apply to fields. Strangely enough, raw types (generic types instantiated without specifying a type parameter) inherit the methods properly: class Generic_Parent<T> {} class Child extends Generic_Parent<Integer> {} class Generic_Child<T> extends Generic_Parent<Integer> {} aspect Injector { public void Generic_Parent.inherited_method() {} public int Generic_Parent.inherited_field; public void test() { int inherited_field; inherited_field = new Generic_Child().inherited_field; // works inherited_field = new Generic_Child<Integer>().inherited_field; // works inherited_field = new Child().inherited_field; // works new Generic_Child().inherited_method(); // works new Generic_Child<Integer>().inherited_method(); // unresolved new Child().inherited_method(); // unresolved } }""",2005-06-15 14:29:21,b54831f,['tests/src/org/aspectj/systemtest/ajc150/b54831f Ajc150Tests.java']
101047,Bug 101047 Weaver produces wrong local variable table bytecode,"""AspectJ version: DEVELOPMENT (also observed in 1.2.1) When weaving with a before or after advice, the generated local variable table will, on branch instructions, offset the """"length"""" field of a local variable wrongly by one instruction. Also, the weaver will mix up local variables with the same name, thus violating the java VM specification: // Test.aj aspect Test { before() : ( execution(* Foo.foo(..) ) ) { System.out.println(""""before""""); } // Foo.java public class Foo { private String myString = """"A String""""; public static void main(String[] args) { new Foo().foo(); } private void foo() { String myLocal = myString; if (myLocal.endsWith(""""X"""")) { String local1 = """"local1""""; System.out.println(local1); } else if (myLocal.endsWith(""""Y"""")) { String local2 = """"local2""""; System.out.println(local2); } else { String local1 = """"local3""""; System.out.println(local1); } } } --- We compilw with ajc -sourceroots . and dumps Foo with javap: javap -c -l -s -private Foo .... .... private void foo(); Signature: ()V Code: 0: invokestatic #65; //Method Test.aspectOf:()LTest; 3: invokevirtual #68; //Method Test.ajc$before$Test$1$f0485e90:()V 6: aload_0 7: getfield #15; //Field myString:Ljava/lang/String; 10: astore_1 11: aload_1 12: ldc #30; //String X 14: invokevirtual #36; //Method java/lang/String.endsWith: (Ljava/lang/String;)Z 17: ifeq 33 20: ldc #38; //String local1 22: astore_2 23: getstatic #44; //Field java/lang/System.out:Ljava/io/PrintStream; 26: aload_2 27: invokevirtual #50; //Method java/io/PrintStream.println: (Ljava/lang/String;)V 30: goto 65 33: aload_1 34: ldc #52; //String Y 36: invokevirtual #36; //Method java/lang/String.endsWith: (Ljava/lang/String;)Z 39: ifeq 55 42: ldc #54; //String local2 44: astore_2 45: getstatic #44; //Field java/lang/System.out:Ljava/io/PrintStream; 48: aload_2 49: invokevirtual #50; //Method java/io/PrintStream.println: (Ljava/lang/String;)V 52: goto 65 55: ldc #56; //String local3 57: astore_2 58: getstatic #44; //Field java/lang/System.out:Ljava/io/PrintStream; 61: aload_2 62: invokevirtual #50; //Method java/io/PrintStream.println: (Ljava/lang/String;)V 65: return LineNumberTable: line 7: 6 line 8: 11 line 9: 20 line 10: 23 line 11: 33 line 12: 42 line 13: 45 line 15: 55 line 16: 58 line 18: 65 LocalVariableTable: Start Length Slot Name Signature 6 60 0 this LFoo; 11 55 1 myLocal Ljava/lang/String; 45 12 2 local2 Ljava/lang/String; 23 43 2 local1 Ljava/lang/String; We see that the two occurences of the """"local1"""" variable erroneously have been combined into one entry, starting at byte 23 and ending at byte 66. This is obviously wrong, since """"local1"""" has no value in the """"local2"""" block. Secondly, the """"local2"""" variable end is wrongly offset by one instruction offset.""",2005-06-21 10:13:24,85a4b0a,['bcel-builder/src/org/aspectj/apache/bcel/generic/85a4b0a MethodGen.java']
101407,Bug 101407 NullPointerException when selecting Save As in top menu,"""The Steps of Reproduce: 1. Open BIRT 2. New a project 3. In top menu of File, click New -> Report to create a report 4. Drag a table element from Palette into the report of Layout view 5. Save the report 6. Drag mouse to select two cells in the table 7. Select the report in Navigator view 8. In the top menu, select Save As... 9. In the Save As pop up dialog window, change the file name in the File name field, then click OK button Expected Result: There is no error to click OK button Actual Result: Error window pops up and the error log as follows: java.lang.NullPointerException at org.eclipse.gef.editparts.AbstractEditPart.getRoot (AbstractEditPart.java:587) at org.eclipse.gef.editparts.AbstractEditPart.getRoot (AbstractEditPart.java:587) at org.eclipse.gef.editparts.AbstractEditPart.getViewer (AbstractEditPart.java:637) at org.eclipse.birt.report.designer.internal.ui.editors.schematic.editparts.TableU til.getSelectionCells(TableUtil.java:258) at org.eclipse.birt.report.designer.internal.ui.editors.schematic.editparts.TableE ditPart.canMerge(TableEditPart.java:1244) at org.eclipse.birt.report.designer.internal.ui.editors.schematic.actions.MergeAct ion.calculateEnabled(MergeAction.java:51) at org.eclipse.gef.ui.actions.WorkbenchPartAction.isEnabled (WorkbenchPartAction.java:111) at org.eclipse.ui.actions.RetargetAction.setActionHandler (RetargetAction.java:249) at org.eclipse.ui.actions.RetargetAction.partActivated (RetargetAction.java:144) at org.eclipse.ui.internal.PartListenerList$1.run (PartListenerList.java:49) at org.eclipse.core.internal.runtime.InternalPlatform.run (InternalPlatform.java:616) at org.eclipse.core.runtime.Platform.run(Platform.java:747) at org.eclipse.ui.internal.PartListenerList.firePartActivated (PartListenerList.java:47) at org.eclipse.ui.internal.WorkbenchPage.firePartActivated (WorkbenchPage.java:1370) at org.eclipse.ui.internal.WorkbenchPage.setActivePart (WorkbenchPage.java:2738) at org.eclipse.ui.internal.WorkbenchPage.requestActivation (WorkbenchPage.java:2415) at org.eclipse.ui.internal.PartPane.requestActivation (PartPane.java:304) at org.eclipse.ui.internal.EditorPane.requestActivation (EditorPane.java:127) at org.eclipse.ui.internal.PartPane.handleEvent(PartPane.java:284) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:801) at org.eclipse.swt.widgets.Shell.setActiveControl(Shell.java:935) at org.eclipse.swt.widgets.Control.sendFocusEvent(Control.java:1768) at org.eclipse.swt.widgets.Control.WM_SETFOCUS(Control.java:4139) at org.eclipse.swt.widgets.Canvas.WM_SETFOCUS(Canvas.java:239) at org.eclipse.swt.widgets.Control.windowProc(Control.java:3032) at org.eclipse.swt.widgets.Display.windowProc(Display.java:3338) at org.eclipse.swt.internal.win32.OS.SetFocus(Native Method) at org.eclipse.swt.widgets.Control.forceFocus(Control.java:607) at org.eclipse.swt.widgets.Control.setFocus(Control.java:2054) at org.eclipse.swt.widgets.Composite.setFocus(Composite.java:447) at org.eclipse.gef.ui.parts.GraphicalEditor.setFocus (GraphicalEditor.java:346) at org.eclipse.ui.part.MultiPageEditorPart.setFocus (MultiPageEditorPart.java:545) at org.eclipse.ui.part.MultiPageEditorPart.setFocus (MultiPageEditorPart.java:519) at org.eclipse.ui.part.MultiPageEditorPart.setFocus (MultiPageEditorPart.java:545) at org.eclipse.ui.part.MultiPageEditorPart.setFocus (MultiPageEditorPart.java:519) at org.eclipse.ui.part.MultiPageEditorPart.pageChange (MultiPageEditorPart.java:433) at org.eclipse.birt.report.designer.ui.editors.ReportEditor.pageChange (ReportEditor.java:1179) at org.eclipse.birt.report.designer.ui.editors.ReportEditor.rebuildReportDesign (ReportEditor.java:584) at org.eclipse.birt.report.designer.ui.editors.ReportEditor.setInput (ReportEditor.java:547) at org.eclipse.birt.report.designer.ui.editors.ReportEditor.performSaveAs (ReportEditor.java:870) at org.eclipse.birt.report.designer.ui.editors.ReportEditor.doSaveAs (ReportEditor.java:812) at org.eclipse.ui.internal.SaveAsAction.run(SaveAsAction.java:64) at org.eclipse.jface.action.Action.runWithEvent(Action.java:881) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection (ActionContributionItem.java:915) at org.eclipse.jface.action.ActionContributionItem.access$2 (ActionContributionItem.java:866) at org.eclipse.jface.action.ActionContributionItem$7.handleEvent (ActionContributionItem.java:785) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2772) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2431) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench (Workbench.java:254) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141) at org.eclipse.ui.internal.ide.IDEApplication.run (IDEApplication.java:96) at org.eclipse.core.internal.runtime.PlatformActivator$1.run (PlatformActivator.java:335) at org.eclipse.core.runtime.adaptor.EclipseStarter.run (EclipseStarter.java:273) at org.eclipse.core.runtime.adaptor.EclipseStarter.run (EclipseStarter.java:129) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324) at org.eclipse.core.launcher.Main.basicRun(Main.java:185) at org.eclipse.core.launcher.Main.run(Main.java:704) at org.eclipse.core.launcher.Main.main(Main.java:688)""",2005-06-23 02:44:44,97520cf,"['bcel-builder/src/org/aspectj/apache/bcel/generic/97520cf LocalVariableGen.java', 'weaver/src/org/aspectj/weaver/bcel/97520cf LazyMethodGen.java', 'weaver/src/org/aspectj/weaver/bcel/97520cf LocalVariableTag.java']"
101411,Bug 101411 SerialVersionUID handling,"""from emails - needs a decision --------------- Hi Andy is there a way for the weaver to add to weaved classes the serial ver uid field based on the pre-weaved bytecode computation. Right now it issues lint warning when a Serializable class without serial ver uid is encountered and due to evil #75442 this is very annoying for LTW. A first step would be to at least deal with that when we had the perObbjectTypeMunger (then should not change any kind previous stuff). Alex ------------ Andy, Generating the suid sounds like a nice idea but the code the JVM used is private inside ObjectStreamClass. Also we need to take care with ITD fields to ensure correct behaviour when sending and receiving from non-woven classes. Basically the programmer needs to be engaged, it only affects serializable classes and in 1.5 there is a warning if you don't declare the field so there is a strong hint to the programmer to solve the problem. For LTW we should make an enhancement to allow the user to configure Lint and other things. For example they may or may not be interested in advice not matching. Matthew Webster ---------------------- Alex, We should make a distinction between benign changes to suid and those that affect members. Generating suid when we add a static initializer (to support thisJoinPoint or the staticinitialization join point), accessor methods for privileged aspects or transient per-fields is OK. Doing for ITDs is more problematic. Matthew Webster""",2005-06-23 03:47:48,6e6658a,"['bcel-builder/src/org/aspectj/apache/bcel/generic/6e6658a ClassGen.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/6e6658a BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/6e6658a AjBuildConfig.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/6e6658a AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/6e6658a AjCompilerOptions.java', 'tests/features151/serialveruid/6e6658a AnAspect.java', 'tests/features151/serialveruid/6e6658a Basic.java', 'tests/features151/serialveruid/6e6658a BigHorribleClass.java', 'tests/src/org/aspectj/systemtest/ajc151/6e6658a AllTestsAspectJ151.java', 'tests/src/org/aspectj/systemtest/ajc151/6e6658a SerialVersionUIDTests.java', 'weaver/src/org/aspectj/weaver/6e6658a Lint.java', 'weaver/src/org/aspectj/weaver/6e6658a World.java', 'weaver/src/org/aspectj/weaver/bcel/6e6658a LazyClassGen.java']"
101606,Bug 101606 AspectJ compiler does not process unused code compiler options properly for aspects,In Eclipse (3.0) click 'Window' > 'Preferences' > 'Java' > 'Compiler'. Select the 'Unused Code' tab on the compiler preference page. Change 'Unused or unread private members' to Warning or Error. Create a project that contains an aspect with some private pointcuts. You will see warnings or errors for these pointcuts saying that they are unused.,2005-06-24 05:17:53,2c88c59,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/2c88c59 AjProblemReporter.java', 'tests/src/org/aspectj/systemtest/ajc150/2c88c59 Ajc150Tests.java']"
102212,Bug 102212 [itds] abstract synchronized: compile error expected,"""when using intertype declaration, the compiler doesn't check for illegal modifier combinations such as """"abstract synchronized"""". another manifestation of this problem is when using intertype declaration to add a synchronized method to an interface. the problem is more severe in this case because conceptually, this method is not abstract at all. interface Interface {} abstract class Parent {} class Child extends Parent implements Interface {} aspect Bug { // illegal modifier combination not caught by ajc public abstract synchronized void Parent._abstract(); public synchronized void Child._abstract() {} // the following has the same effect, but is easier to miss public /* implicit abstract */ synchronized void Interface._interface() {} // use Child to make java complain: """"illegal modifiers: 0x421"""" // (this corresponds to """"public abstract synchronized"""") public static void main(String[] args) { new Child(); } }""",2005-06-29 17:07:44,b17ff4e,"['tests/src/org/aspectj/systemtest/ajc150/b17ff4e Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/b17ff4e BcelTypeMunger.java', 'weaver/src/org/aspectj/weaver/bcel/b17ff4e LazyMethodGen.java']"
102459,Bug 102459 provide more detail in -showWeaveInfo messages,"""When advice is executed, the object you have to work with is the joinpoint. This can then be queried to get various information out of it. It would be nice, if as part of the weaving you could get hold of the same information. This is particularly useful in the case of writing a coverage tool. In order to measure where you've been, you have to know all the places you could possibly go. The introduction of the -showWeaveInfo option means that we can record these places, however, this would be greatly enhanced by providing similar information as to that which is collected as the program is running. The information which would be good is the same as that obtained from JoinPoint.StaticPart.getSignature().toLongString().""",2005-07-01 06:48:04,c6bc7a2,"['bridge/src/org/aspectj/bridge/c6bc7a2 WeaveMessage.java', 'tests/java5/ataspectj/ataspectj/ltwlog/c6bc7a2 MainVerboseAndShow.java', 'weaver/src/org/aspectj/weaver/c6bc7a2 Shadow.java']"
102933,Bug 102933 problem with Object arrays and clone() with 1.4 .class compatibility,,2005-07-06 16:20:01,fb428d0,['tests/src/org/aspectj/systemtest/ajc150/fb428d0 Ajc150Tests.java']
103051,Bug 103051 Declare Soft not Affecting Explicit Adviceexecution,"""The following aspect should compile successfully: import java.io.IOException; public aspect SoftenAdvice { declare soft: IOException: within(SoftenAdvice) && adviceexecution(); before() : execution(* main(..)) { throw new IOException(""""test""""); } public static void main(String args[]) { } } But both 1.5.0M2 and HEAD (from 2 days ago) give this output: C:\devel\scratch\err>ajc SoftenAdvice.aj C:\devel\scratch\err\SoftenAdvice.aj:7 [error] Unhandled exception type IOExcept ion throw new IOException(""""test""""); ^^^^^^^^^^^^^^^^^^^^ 1 error However if you change the declare soft to be the following, it correctly softens at the advice execution join point. declare soft: IOException: within(SoftenAdvice) && !withincode(* *(..));""",2005-07-07 14:03:58,554e733,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/554e733 EclipseFactory.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/554e733 EclipseShadow.java', 'tests/src/org/aspectj/systemtest/ajc150/554e733 Ajc150Tests.java']"
103157,"""Bug 103157 after returning should not bind """"null"""" as return value""","""Today I found out the following. When writing an advice as... after() returning(Object o): staticinitialization(*) { System.out.println(o); } This advice is indeed executed every time a type returns from staticinitialization. However, since there is no returned object, o is bound to """"null"""". I think this is inconsistent with the fact where we have something like: after() returning(T o): call(Object Foo.bar()) { System.out.println(o); } Here, AFAIK the advice would not execute in cases where the returned object is not an instance of T. Thus, I would propose that the first advice should only execute at joinpoints where a return value is available.""",2005-07-08 09:13:23,8b294d9,"['tests/new/8b294d9 AfterReturningParam.java', 'tests/new/8b294d9 ConstructorExecInit.java', 'tests/new/8b294d9 OddConstructors.java', 'tests/src/org/aspectj/systemtest/ajc150/8b294d9 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/8b294d9 Advice.java', 'weaver/src/org/aspectj/weaver/8b294d9 Shadow.java']"
103266,Bug 103266 NPE on syntax error,"""This example program generates an NPE on CVS HEAD and M2. I will attach the ajcore file. public abstract aspect WorkerExample { after() returning (RequestContext newContext) : call(RequestContext+.new (..)) { System.out.println(""""constructing """"+newContext+"""" at """"+thisJoinPoint.toLongString()+"""" from """"+thisEnclosingJoinPointStaticPart+"""":""""); } public abstract class RequestContext { public final Object execute() { return doExecute(); } /** template method */ public abstract Object doExecute(); } public static void main(String args[]) { new Runnable() { public void run() {} }.run(); }; } aspect ConcreteAlpha extends WorkerExample { Object around(final Object runnable) : execution(void Runnable.run()) && this(runnable) { System.out.println(""""monitoring operation: """"+runnable+"""" at """"+thisJoinPoint+"""", for """"+thisJoinPoint.getThis()); RequestContext requestContext = new RequestContext() { public Object doExecute() { return proceed(runnable); } }; return requestContext.execute(); } } aspect ConcreteBeta extends WorkerExample { Object around() : call(void awqeyuwqer()) { RequestContext requestContext = new ConnectionRequestContext() { public Object doExecute() { return proceed(); } }; return requestContext.execute(); } }""",2005-07-10 01:40:14,bba9c50,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/bba9c50 MakeDeclsPublicVisitor.java', 'tests/src/org/aspectj/systemtest/ajc150/bba9c50 Ajc150Tests.java']"
103740,Bug 103740 Compiler failure on @annotation,I'm using the ajc embedded in the latest dev build of AJDT (build 20050713163417) This small example illustrates the problem: public abstract aspect AbstractRequestMonitor { public pointcut requestExecution(RequestContext requestContext) : execution(* RequestContext.execute(..)) && this(requestContext); public abstract class RequestContext { public abstract Object execute(); } after(RequestContext requestContext) throwing (Throwable t) : requestExecution(requestContext) { } } import java.lang.annotation.Retention; import java.lang.annotation.RetentionPolicy; @Retention(RetentionPolicy.RUNTIME) public @interface AroundAdvice { } public aspect ErrorHandling { declare soft: Exception: !@annotation(AroundAdvice) && !withincode(* * (..)); Object around() : adviceexecution() && !@annotation(AroundAdvice) { try { return proceed(); } catch (Exception e) { return null; } } } Here's the stack trace I get: org.aspectj.weaver.BCException: bad at org.aspectj.weaver.bcel.BcelRenderer.visit(BcelRenderer.java:228) at org.aspectj.weaver.ast.Literal.accept(Literal.java:29) at org.aspectj.weaver.bcel.BcelRenderer.recur(BcelRenderer.java:151) at org.aspectj.weaver.bcel.BcelRenderer.renderTest (BcelRenderer.java:117) at org.aspectj.weaver.bcel.BcelAdvice.getTestInstructions (BcelAdvice.java:445) at org.aspectj.weaver.bcel.BcelShadow.weaveAroundClosure (BcelShadow.java:2585) at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:182) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:480) at org.aspectj.weaver.Shadow.implement(Shadow.java:358) at org.aspectj.weaver.bcel.BcelClassWeaver.implement (BcelClassWeaver.java:1703) at org.aspectj.weaver.bcel.BcelClassWeaver.weave (BcelClassWeaver.java:389) at org.aspectj.weaver.bcel.BcelClassWeaver.weave (BcelClassWeaver.java:94) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1362) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump (BcelWeaver.java:1327) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify (BcelWeaver.java:1106) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:981) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave (AjCompilerAdapter.java:286) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling (AjCompilerAdapter.java:165) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspec tj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile (Compiler.java:368) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation (AjBuildManager.java:727) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:206) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (AjBuildManager.java:140) at org.aspectj.ajde.internal.CompilerAdapter.compile (CompilerAdapter.java:121) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:191),2005-07-13 19:09:31,2ae4f53,"['tests/src/org/aspectj/systemtest/ajc150/2ae4f53 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/2ae4f53 AnnotationPointcut.java']"
104024,Bug 104024 combining varargs and inner classes crashes the parser,class Outer { public class Inner {} } public class Bug { public void varargs(Object... varargs) {} public void test() { Outer.Inner inner = new Outer().new Inner(); varargs(inner); // works varargs(new Outer().new Inner()); // crashes } },2005-07-15 11:16:07,f2af562,['tests/src/org/aspectj/systemtest/ajc150/f2af562 Ajc150Tests.java']
104212,Bug 104212 static method call from subclass signature is wrong,"""a very bad bug... or ? in the snip below, getMethod() says null and the factory is actually thinking that test() is a static method of AspectJBugMain instead of Assert... wondering why we don't catch that in the test suite or what could happen recently around that. Or is it something I am confused about ? (i doubt a jp.getSignature().getMethod is supposed to return null in some cases though..) @Aspect public class Sam { @Pointcut(""""call(* *.*(..))"""") public void methodCalls() { } @Around(""""methodCalls() && !within(alex.sam.Sam) && within(alex..*)"""") public Object aroundMethodCalls(ProceedingJoinPoint jp) throws Throwable { String typeName = jp.getSignature().getDeclaringTypeName(); System.out.println(""""declType """" + typeName); System.out.println(""""method """" + ((MethodSignature)jp.getSignature()).getMethod()); return jp.proceed(); } } class Assert { public static void test() { System.out.println(""""RUN Assert.test""""); } } class AspectJBugMain extends Assert { public static void main(String[] args) { test(); } // public static void test() { // System.out.println(""""RUN AspectJBugMain.test""""); // } }""",2005-07-18 09:25:01,619a6ad,"['tests/java5/ataspectj/ataspectj/619a6ad Bug104212.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/619a6ad AtAjSyntaxTests.java', 'weaver/src/org/aspectj/weaver/bcel/619a6ad BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/619a6ad BcelShadow.java', 'weaver/src/org/aspectj/weaver/bcel/619a6ad BcelWorld.java']"
104529,"""Bug 104529 @SuppressWarnings( """"unchecked"""" ) is not ignoring type safety checks""","""AJDT is ignoring the @SuppressWarnings( """"unchecked"""" ) annotation. It is giving me a type safety warning when I don't specify the type when declaring a generic even though I have the @SuppressWarnings( """"unchecked"""" ) annotation specified.""",2005-07-20 12:46:55,7b32570,['tests/src/org/aspectj/systemtest/ajc150/7b32570 Ajc150Tests.java']
104720,Bug 104720 VerifyError after weaving around trivial switch statement,"""After compiling the attached source file and class file with ajc -inpath . -outjar t.jar Tracer.aj (on any of 1.2.1, 1.5.0M2 or the June 2005 snapshot) and then attempting to run it with gij -classpath ./t.jar:$CLASSPATH Test the following error is obtained: Exception in thread """"main"""" java.lang.VerifyError: verification failed at PC 1 in Test:newTest_aroundBody2((I)LTest;): branch out of range at java.lang.VMClassLoader.resolveClass(java.lang.Class) (/usr/lib/libgcj.so.6.0.0) at java.lang.Class.initializeClass() (/usr/lib/libgcj.so.6.0.0) at java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader) (/usr/lib/libgcj.so.6.0.0) at gnu.java.lang.MainThread.run() (/usr/lib/libgcj.so.6.0.0) An excerpt from the output of javap -private -classpath t.jar -c Test shows that the generated switch is indeed bogus: private static final Test newTest_aroundBody2(int); Code: 0: iload_0 1: tableswitch{ //0 to 0 0: -1157627302; default: 16 } 20: invokespecial #3; //Method """"<init>"""":()V 23: areturn""",2005-07-21 15:16:55,bf767a9,"['bcel-builder/src/org/aspectj/apache/bcel/generic/bf767a9 SWITCH.java', 'bcel-builder/src/org/aspectj/apache/bcel/generic/bf767a9 TABLESWITCH.java']"
104957,Bug 104957 NullPointerException when running ajc on gij,"""When running ajc 1.2.1 on the GNU Interpreter for Java 4.0.1, I received this error: java.lang.NullPointerException at org.aspectj.apache.bcel.generic.InstructionComparator$1.equals(org.aspectj.apache.bcel.generic.Instruction, org.aspectj.apache.bcel.g eneric.Instruction) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.apache.bcel.generic.Instruction.equals(java.lang.Object) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at java.util.AbstractMap.equals(java.lang.Object, java.lang.Object) (/usr/lib/libgcj.so.6.0.0) at java.util.HashMap.put(java.lang.Object, java.lang.Object) (/usr/lib/libgcj.so.6.0.0) at java.util.HashSet.add(java.lang.Object) (/usr/lib/libgcj.so.6.0.0) at org.aspectj.apache.bcel.generic.InstructionHandle.addTargeter(org.aspectj.apache.bcel.generic.InstructionTargeter) (/tmp/cache/local/ aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.apache.bcel.generic.BranchInstruction.notifyTarget(org.aspectj.apache.bcel.generic.InstructionHandle, org.aspectj.apache. bcel.generic.InstructionHandle, org.aspectj.apache.bcel.generic.InstructionTargeter) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.apache.bcel.generic.BranchInstruction.setTarget(org.aspectj.apache.bcel.generic.InstructionHandle) (/tmp/cache/local/aspe ctj1.2/lib/aspectjweaver.jar.so) at org.aspectj.apache.bcel.generic.BranchInstruction.BranchInstruction(short, org.aspectj.apache.bcel.generic.InstructionHandle) (/tmp/c ache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.apache.bcel.generic.Select.Select(short, int[], org.aspectj.apache.bcel.generic.InstructionHandle[], org.aspectj.apache.b cel.generic.InstructionHandle) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.apache.bcel.generic.LOOKUPSWITCH.LOOKUPSWITCH(int[], org.aspectj.apache.bcel.generic.InstructionHandle[], org.aspectj.apa che.bcel.generic.InstructionHandle) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.apache.bcel.generic.SWITCH.SWITCH(int[], org.aspectj.apache.bcel.generic.InstructionHandle[], org.aspectj.apache.bcel.gen eric.InstructionHandle, int) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.apache.bcel.generic.SWITCH.SWITCH(int[], org.aspectj.apache.bcel.generic.InstructionHandle[], org.aspectj.apache.bcel.gen eric.InstructionHandle) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.weaver.bcel.Utility.copyInstruction(org.aspectj.apache.bcel.generic.Instruction) (/tmp/cache/local/aspectj1.2/lib/aspectj weaver.jar.so) at org.aspectj.weaver.bcel.LazyMethodGen.packBody(org.aspectj.apache.bcel.generic.MethodGen) (/tmp/cache/local/aspectj1.2/lib/aspectjwea ver.jar.so) at org.aspectj.weaver.bcel.LazyMethodGen.pack() (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.weaver.bcel.LazyMethodGen.getMethod() (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.weaver.bcel.LazyClassGen.writeBack(org.aspectj.weaver.bcel.BcelWorld) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar. so) at org.aspectj.weaver.bcel.LazyClassGen.getJavaClass(org.aspectj.weaver.bcel.BcelWorld) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.j ar.so) at org.aspectj.weaver.bcel.BcelWeaver.getClassFilesFor(org.aspectj.weaver.bcel.LazyClassGen) (/tmp/cache/local/aspectj1.2/lib/aspectjwea ver.jar.so) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(org.aspectj.weaver.bcel.UnwovenClassFile, org.aspectj.weaver.bcel.BcelObjectType, o rg.aspectj.weaver.IWeaveRequestor) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so) at org.aspectj.weaver.bcel.BcelWeaver.weave(org.aspectj.weaver.IClassFileProvider) (/tmp/cache/local/aspectj1.2/lib/aspectjweaver.jar.so ) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave() (Unknown Source) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling() (Unknown Source) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(org.aspectj.org.eclipse.jdt.internal.compiler.env.ICompilationUnit[]) (Unknown Source) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(java.util.List) (Unknown Source) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(org.aspectj.ajdt.internal.core.builder.AjBuildConfig, org.aspectj.bridg e.IMessageHandler, boolean) (Unknown Source) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(org.aspectj.ajdt.internal.core.builder.AjBuildConfig, org.aspectj.br idge.IMessageHandler) (Unknown Source) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(org.aspectj.bridge.IMessageHandler, boolean) (Unknown Source) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(java.lang.String[], org.aspectj.bridge.IMessageHandler) (Unknown Source) at org.aspectj.tools.ajc.Main.run(java.lang.String[], org.aspectj.bridge.IMessageHolder) (Unknown Source) at org.aspectj.tools.ajc.Main.runMain(java.lang.String[], boolean) (Unknown Source) at org.aspectj.tools.ajc.Main.main(java.lang.String[]) (Unknown Source) at gnu.java.lang.MainThread.call_main() (/usr/lib/libgcj.so.6.0.0) at gnu.java.lang.MainThread.run() (/usr/lib/libgcj.so.6.0.0) Unfortunately, the above stack trace contains no line number information; however, by running the program under the gdb debugger, I was able to get a backtrace with line numbers for the relevant part of the stack trace: (gdb) bt #0 0x011a0246 in org.aspectj.apache.bcel.generic.InstructionComparator$1.equals(org.aspectj.apache.bcel.generic.Instruction, org.aspectj.apache.bcel.generic.Instruction) (this=@5c71ea8, i1=@610fe70, i2=@610fc60) at org/aspectj/apache/bcel/generic/InstructionComparator.java:79 #1 0x011a004e in org.aspectj.apache.bcel.generic.Instruction.equals(java.lang.Object) (this=@610fe70, that=@610fc60) at org/aspectj/apache/bcel/generic/Instruction.java:499 #2 0x031b5f9b in java.util.AbstractMap.equals(java.lang.Object, java.lang.Object) (o1=@610fe70, o2=@610fc60) at ../../../libjava/java/util/AbstractMap.java:603 #3 0x031cc0ae in java.util.HashMap.put(java.lang.Object, java.lang.Object) (this=@6483690, key=@610fe70, value=@2dfc0) at ../../../libjava/java/util/HashMap.java:349 #4 0x031cca00 in java.util.HashSet.add(java.lang.Object) (this=null, o=@610fe70) at ../../../libjava/java/util/HashSet.java:151 #5 0x011b30ad in org.aspectj.apache.bcel.generic.InstructionHandle.addTargeter(org.aspectj.apache.bcel.generic.InstructionTargeter) ( this=@6949d20, t=@610fe70) at org/aspectj/apache/bcel/generic/InstructionHandle.java:208 #6 0x011861e6 in org.aspectj.apache.bcel.generic.BranchInstruction.notifyTarget(org.aspectj.apache.bcel.generic.InstructionHandle, org.aspectj.apache.bcel.generic.InstructionHandle, org.aspectj.apache.bcel.generic.InstructionTargeter) (old_ih=null, new_ih=@6949d20, t=@610fe70) at org/aspectj/apache/bcel/generic/BranchInstruction.java:217 #7 0x01186133 in org.aspectj.apache.bcel.generic.BranchInstruction.setTarget(org.aspectj.apache.bcel.generic.InstructionHandle) ( this=@610fe70, target=@6949d20) at org/aspectj/apache/bcel/generic/BranchInstruction.java:205 #8 0x011857ef in org.aspectj.apache.bcel.generic.BranchInstruction.BranchInstruction(short, org.aspectj.apache.bcel.generic.InstructionHandle) (this=@610fe70, opcode=171, target=@6949d20) at org/aspectj/apache/bcel/generic/BranchInstruction.java:86 #9 0x011d3489 in org.aspectj.apache.bcel.generic.Select.Select(short, int[], org.aspectj.apache.bcel.generic.InstructionHandle[], org.aspectj.apache.bcel.generic.InstructionHandle) (this=@610fe70, opcode=171, match=@6f63b90, targets=@6eeabe0, target=@6949d20) at org/aspectj/apache/bcel/generic/Select.java:106 #10 0x011c3152 in org.aspectj.apache.bcel.generic.LOOKUPSWITCH.LOOKUPSWITCH(int[], org.aspectj.apache.bcel.generic.InstructionHandle[], org.aspectj.apache.bcel.generic.InstructionHandle) (this=@610fe70, match=@6f63b90, targets=@6eeabe0, target=@6949d20) at org/aspectj/apache/bcel/generic/LOOKUPSWITCH.java:80 #11 0x011d4f94 in org.aspectj.apache.bcel.generic.SWITCH.SWITCH(int[], org.aspectj.apache.bcel.generic.InstructionHandle[], org.aspectj.apache.bcel.generic.InstructionHandle, int) (this=@6a20978, match=@5b1ccd0, targets=@6eeac08, target=@6949d20, max_gap=1) at org/aspectj/apache/bcel/generic/SWITCH.java:104 #12 0x011d5002 in org.aspectj.apache.bcel.generic.SWITCH.SWITCH(int[], org.aspectj.apache.bcel.generic.InstructionHandle[], org.aspectj.apache.bcel.generic.InstructionHandle) (this=@6a20978, match=@5b1ccd0, targets=@6eeac08, target=@6949d20) at org/aspectj/apache/bcel/generic/SWITCH.java:109 #13 0x01332eb6 in org.aspectj.weaver.bcel.Utility.copyInstruction(org.aspectj.apache.bcel.generic.Instruction) (i=@610fc60) at org/aspectj/weaver/bcel/Utility.java:474 #14 0x01326f66 in org.aspectj.weaver.bcel.LazyMethodGen.packBody(org.aspectj.apache.bcel.generic.MethodGen) (this=@6d98000, gen=@6d983c0) at org/aspectj/weaver/bcel/LazyMethodGen.java:813 #15 0x01326d08 in org.aspectj.weaver.bcel.LazyMethodGen.pack() (this=@6d98000) at org/aspectj/weaver/bcel/LazyMethodGen.java:790 #16 0x01324c81 in org.aspectj.weaver.bcel.LazyMethodGen.getMethod() (this=@6d98000) at org/aspectj/weaver/bcel/LazyMethodGen.java:336 #17 0x0131b502 in org.aspectj.weaver.bcel.LazyClassGen.writeBack(org.aspectj.weaver.bcel.BcelWorld) (this=@610ff00, world=@5642d20) at org/aspectj/weaver/bcel/LazyClassGen.java:418 #18 0x0131b95e in org.aspectj.weaver.bcel.LazyClassGen.getJavaClass(org.aspectj.weaver.bcel.BcelWorld) (this=@610ff00, world=@5642d20) at org/aspectj/weaver/bcel/LazyClassGen.java:446 #19 0x01311589 in org.aspectj.weaver.bcel.BcelWeaver.getClassFilesFor(org.aspectj.weaver.bcel.LazyClassGen) (this=@a33c0, clazz=@610ff00) <snip> It might be difficult for me to provide a reproducable test case (it might depend on the gij version, but I can try if wanted). However, happily, having examined the bytecode of the BCEL classes from the first few lines of the stack trace, I think I can explain why this exception occurs without needing to provide a test case. It's very simple. Whoever wrote the BCEL code in question, obviously never ran it with a data set and on a virtual machine where a hash collision in the HashSet would occur. Because, with this BCEL snapshot, if a hash collision does occur, the object being added to the HashSet is *guaranteed* to cause a NullPointerException in the Comparator method. This can be seen merely by examining the code path described by this stack trace. The field """"targets"""" in the LOOKUPSWITCH object has not been initialized when notifyTarget is called, so if there is a hash collision in the HashSet, the InstructionComparator will be called - and it is guaranteed to call getTargets () and access its array length, which will cause a NullPointerException. I hope this explanation is sufficiently clear. If not, I will be happy to provide further details.""",2005-07-24 20:01:39,0e1bb19,['bcel-builder/src/org/aspectj/apache/bcel/generic/0e1bb19 InstructionComparator.java']
106461,Bug 106461 org.aspectj.weaver.patterns.WildTypePattern.maybeGetCleanName(WildTypePattern.java:500),,2005-08-09 08:46:59,5735e96,"['tests/src/org/aspectj/systemtest/ajc150/5735e96 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/5735e96 PatternParser.java', 'weaver/src/org/aspectj/weaver/patterns/5735e96 WildTypePattern.java']"
106634,Bug 106634 regression: argument causes BcelGenericSignatureToTypeXConverter.java:203,"""the following reported a compile error using AspectJ Compiler DEVELOPMENT built on Monday Jun 20, 2005 at 08:14:57 GMT but now crashes using AspectJ Compiler DEVELOPMENT built on Wednesday Aug 10, 2005 at 13:12:53 GMT import java.util.Vector; // works if java.util.* is used public class Bug extends Vector { // works if Vector is not extended void test(DoesNotExist argument) {} // works without the argument } also, the bug only appears if the -1.5 flag is used.""",2005-08-10 11:04:45,477c575,['tests/src/org/aspectj/systemtest/ajc150/477c575 Ajc150Tests.java']
107299,Bug 107299 -aspectpath -inpath arguments fail without drive letter,"""ajc doesn't recognize Windows absolute file paths that don't start with a drive letter, e.g., run: ajc -inpath \test.jar [error] build config error: bad inpath component: \test.jar but ajc -inpath c:\test.jar works ajc -aspectpath \test.jar Test.aj [error] build config error: bad aspectpath: \test.jar ajc -aspectpath c:\test.jar Test.aj (works)""",2005-08-18 01:41:22,332a5df,['util/src/org/aspectj/util/332a5df ConfigParser.java']
107713,Bug 107713 ClassCastException popup,"""Whenever I change any file and save(auto-compile) I get this in a popup. ClassCastException thrown: org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType cannot be cast to org.aspectj.weaver.bcel.BcelObjectType This started happening when I wrote these aspects. Before this started happening the IDE showed this line as an error. b.support.firePropertyChange( property, ( oldval == null ) ? oldval : new String(oldval), new String(newval)); ---------------------------------------------------------------- /** * */ package com.blueprint.util.mixin.test; import java.beans.PropertyChangeListener; import java.beans.PropertyChangeSupport; import java.lang.reflect.Field; import com.blueprint.util.mixin.test.*; import org.aspectj.lang.Signature; public aspect PropertySupportAspect { PropertyChangeSupport PropertySupport.support = new PropertyChangeSupport(this); public interface PropertySupport{ public void addPropertyChangeListener( PropertyChangeListener listener ); public void addPropertyChangeListener( String propertyName, PropertyChangeListener listener ); public void removePropertyChangeListener( String propertyName, PropertyChangeListener listener ); public void removePropertyChangeListener( PropertyChangeListener listener ); public void hasListeners( String propertyName ); } public void PropertySupport.addPropertyChangeListener (PropertyChangeListener listener){ support.addPropertyChangeListener(listener); } public void PropertySupport.addPropertyChangeListener( String propertyName, PropertyChangeListener listener){ support.addPropertyChangeListener(propertyName, listener); } public void PropertySupport.removePropertyChangeListener( String propertyName, PropertyChangeListener listener) { support.removePropertyChangeListener(propertyName, listener); } public void PropertySupport.removePropertyChangeListener (PropertyChangeListener listener) { support.removePropertyChangeListener(listener); } public void PropertySupport.hasListeners(String propertyName) { support.hasListeners(propertyName); } pointcut callSetter( Bean b ) : call( public void com.blueprint.util.test.Bean.setName( String ) ) && target( b ); void around( Bean b ) : callSetter( b ) { String propertyName = getField( thisJoinPointStaticPart.getSignature() ). getName (); System.out.println( """"The property is ["""" + propertyName + """"]"""" ); String oldValue = b.getName(); proceed( b ); firePropertyChange( b, propertyName, oldValue, b.getName ()); } private Field getField( Signature signature ){ Field field = null; System.out.println( """"Getting the field name of ["""" +signature.getName() + """"]"""" ); try{ String methodName = signature.getName(); field = signature.getDeclaringType(). getDeclaredField( methodName. substring( 3, methodName.length() ). toLowerCase()); field.setAccessible(true); }catch( NoSuchFieldException nsfe ){ nsfe.printStackTrace(); } return field; } void firePropertyChange( Bean b, String property, String oldval, String newval) { System.out.println( """"The property is ["""" + property + """"]""""); System.out.println( """"The old value is ["""" + oldval + """"]""""); System.out.println( """"The new value is ["""" + newval + """"]""""); b.support.firePropertyChange( property, ( oldval == null ) ? oldval : new String(oldval), new String(newval)); } } ---------------------------------------------------------------- import java.io.Serializable; public class Bean implements Serializable{ private String name; public String getName() { return name; } public void setName( String name ) { this.name = name; } } ---------------------------------------------------------------- public aspect BeanSupport { declare parents: Bean implements PropertySupportAspect.PropertySupport; } ----------------------------------------------------------------""",2005-08-23 06:56:58,100d9e0,"['weaver/src/org/aspectj/weaver/bcel/100d9e0 BcelWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/100d9e0 BcelWorld.java']"
107858,Bug 107858 illegal argument to proceed crashes the parser,"""in a context where proceed requires zero arguments, calling it with an extra argument crashes the compiler, but only if that argument is a field access: class Foo { Foo field; void test() {} } public aspect Bug { void around() : call(void Foo.test()) { Foo foo = new Foo().field; proceed(foo); // caught at compile time proceed(new Foo().field); // crashes } } /home/user/sgelin3/dev/java/ajc/new_bug/Bug.java [error] Internal compiler error java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.getAccessibleField(AccessForInlineVisitor.java:145) at org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:108) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.FieldReference.traverse(FieldReference.java:609) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java:467) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:212)""",2005-08-24 10:53:45,6c8747b,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/6c8747b AccessForInlineVisitor.java', 'tests/src/org/aspectj/systemtest/ajc150/6c8747b Ajc150Tests.java']"
108050,Bug 108050 Execution not matching override in doubly derived method,"""The following sample code fails because the compiler isn't matching the execution of doPost in MockServlet4. The declare warning for """"servlet request"""" doesn't match in that case, nor does advice on the join point actually run at runtime (though this simplified code only shows the problem with declare warning). This was working until fairly recently (certainly in M2, even in AJDT from August 11). public abstract class MockServlet extends HttpServlet { protected void doPost() { } private static aspect FindMatches { declare warning: execution(* HttpServlet.do*(..)): """"servlet request""""; declare warning: execution(* HttpServlet+.do*(..)): """"servlet request2""""; } } class HttpServlet { protected void doPost() { } } public class MockDelayingServlet extends MockServlet { private static final long serialVersionUID = 1; } public class MockServlet4 extends MockDelayingServlet { protected void doPost() { } } compiler output (should have 6 warnings, including two for MockServlet4): C:\devel\workspace\test\src\MockServlet.java:16 [warning] servlet request protected void doPost() { ^^^^^^^^^^^^^^^^^^^^^^^^^ method-execution(void MockServlet.doPost()) see also: C:\devel\workspace\test\src\MockServlet.java:20::0 C:\devel\workspace\test\src\MockServlet.java:16 [warning] servlet request2 protected void doPost() { ^^^^^^^^^^^^^^^^^^^^^^^^^ method-execution(void MockServlet.doPost()) see also: C:\devel\workspace\test\src\MockServlet.java:21::0 C:\devel\workspace\test\src\MockServlet.java:26 [warning] servlet request protected void doPost() { ^^^^^^^^^^^^^^^^^^^^^^^^^ method-execution(void HttpServlet.doPost()) see also: C:\devel\workspace\test\src\MockServlet.java:20::0 C:\devel\workspace\test\src\MockServlet.java:26 [warning] servlet request2 protected void doPost() { ^^^^^^^^^^^^^^^^^^^^^^^^^ method-execution(void HttpServlet.doPost()) see also: C:\devel\workspace\test\src\MockServlet.java:21::0 C:\devel\workspace\test\src\MockServlet4.java:9 [warning] servlet request2 protected void doPost() ^^^^^^^^^^^^^^^^^^^^^^^ method-execution(void MockServlet4.doPost()) see also: C:\devel\workspace\test\src\MockServlet.java:21::0 5 warnings""",2005-08-25 16:22:28,27e68f3,"['tests/src/org/aspectj/systemtest/ajc150/27e68f3 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/27e68f3 JoinPointSignature.java', 'weaver/src/org/aspectj/weaver/27e68f3 ResolvedMemberImpl.java']"
108062,Bug 108062 NPE when opening resources from CVS resources history,NPE when opening resources (double-click) from CVS resources history view. java.lang.NullPointerException at org.eclipse.mylar.java.ui.editor.MylarJavaElementDescriptor.drawCompositeImage(MylarJavaElementDescriptor.java:40) at org.eclipse.jface.resource.CompositeImageDescriptor.getImageData(CompositeImageDescriptor.java:205) at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:279) at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:233) at org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:211) at org.eclipse.mylar.ui.MylarImages.getImage(MylarImages.java:108) at org.eclipse.mylar.java.ui.editor.MylarCompilationUnitEditor.updatedTitleImage(MylarCompilationUnitEditor.java:55) at org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater$1.run(JavaEditorErrorTickUpdater.java:86) at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:152) at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:28) at org.eclipse.swt.widgets.Display.syncExec(Display.java:3413) at org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater.postImageChange(JavaEditorErrorTickUpdater.java:84) at org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater.updateEditorImage(JavaEditorErrorTickUpdater.java:77) at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1548) at org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:2360) at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291) at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:624) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69) at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:621) at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2135) at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:2378) at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:2405) at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:773) at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:572) at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:365) at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:552) at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:214) at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2325) at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2258) at org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:2250) at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2236) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69) at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2231) at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2204) at org.eclipse.team.internal.ccvs.ui.actions.OpenLogEntryAction$1.run(OpenLogEntryAction.java:85) at org.eclipse.team.internal.ccvs.ui.repo.RepositoryManager.run(RepositoryManager.java:651) at org.eclipse.team.internal.ccvs.ui.actions.CVSAction$2.run(CVSAction.java:347) at org.eclipse.team.internal.ccvs.ui.actions.CVSAction$3.run(CVSAction.java:356) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69) at org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:353) at org.eclipse.team.internal.ccvs.ui.actions.OpenLogEntryAction.execute(OpenLogEntryAction.java:64) at org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:117) at org.eclipse.team.internal.ccvs.ui.HistoryView$6.handleEvent(HistoryView.java:199) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143) at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103) at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334) at org.eclipse.core.launcher.Main.basicRun(Main.java:278) at org.eclipse.core.launcher.Main.run(Main.java:973) at org.eclipse.core.launcher.Main.main(Main.java:948),2005-08-25 17:47:23,ad753aa,"['bcel-builder/src/org/aspectj/apache/bcel/classfile/ad753aa GenericSignatureParser.java', 'tests/bugs150/ad753aa pr108602.java', 'tests/src/org/aspectj/systemtest/ajc150/ad753aa Ajc150Tests.java']"
108117,Bug 108117 Complete implementation of abstract generic aspects,this requires 1/ completion of the parameterizeWith implementation in the pointcut AST nodes 2/ a much more exhaustive test suite around it.,2005-08-26 10:35:57,451fea8,"['weaver/src/org/aspectj/weaver/patterns/451fea8 AnnotationPatternList.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 AnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 ArgsAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 ArgsPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 CflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 ConcreteCflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 DeclareAnnotation.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 DeclarePrecedence.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 HandlerPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 PerCflow.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 PerFromSuper.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 PerObject.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 PerSingleton.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 PerTypeWithin.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 Pointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 ThisOrTargetAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 ThisOrTargetPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 TypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 WithinAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 WithinCodeAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 WithinPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/451fea8 WithincodePointcut.java']"
108118,Bug 108118 Complete implementation of @SuppressAjWarnings,ensure that @SuppressAJWarnings are indeed suppressed during pointcut operations. This requires wrapping major pointcut operations with calls to Lint from the associated advice.,2005-08-26 10:37:42,81a0790,"['tests/src/org/aspectj/systemtest/ajc150/81a0790 SuppressedWarnings.java', 'weaver/src/org/aspectj/weaver/bcel/81a0790 BcelAdvice.java', 'weaver/src/org/aspectj/weaver/bcel/81a0790 Utility.java']"
108120,Bug 108120 Complete implemenation of runtime pointcut parsing and matching,"""The weaver API for runtime pointcut parsing and matching needs extending for all of the new pointcuts we have added in AJ5. Recommended approach is to implement JavaLangReflectObjectType as a new ReferenceTypeDelegate, and a JavaLangReflectWorld in place of BcelWorld.""",2005-08-26 10:39:53,a39f595,"['aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/a39f595 AjTypeImpl.java', 'aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/a39f595 PointcutImpl.java', 'aspectj5rt/java5-src/org/aspectj/lang/annotation/a39f595 Pointcut.java', 'aspectj5rt/java5-src/org/aspectj/lang/reflect/a39f595 Pointcut.java', 'bcel-builder/src/org/aspectj/apache/bcel/classfile/a39f595 JavaClass.java', 'bcel-builder/src/org/aspectj/apache/bcel/generic/a39f595 Type.java', 'bcel-builder/testsrc/org/aspectj/apache/bcel/classfile/tests/a39f595 GetReflectMembersTest.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/a39f595 AtAspectJAnnotationFactory.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/a39f595 PointcutDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/a39f595 PointcutDesignator.java', 'tests/java5/ataspectj/annotationGen/a39f595 RuntimePointcuts.java', 'tests/src/org/aspectj/systemtest/ajc150/a39f595 Ajc150Tests.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/a39f595 AtAjAnnotationGenTests.java', 'weaver/java5-src/org/aspectj/weaver/reflect/a39f595 Java15AnnotationFinder.java', 'weaver/java5-src/org/aspectj/weaver/reflect/a39f595 Java15ReflectionBasedReferenceTypeDelegate.java', 'weaver/java5-testsrc/org/aspectj/weaver/tools/a39f595 Java15PointcutExpressionTest.java', 'weaver/src/org/aspectj/weaver/a39f595 Shadow.java', 'weaver/src/org/aspectj/weaver/a39f595 UnresolvedType.java', 'weaver/src/org/aspectj/weaver/a39f595 World.java', 'weaver/src/org/aspectj/weaver/internal/tools/a39f595 PointcutExpressionImpl.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 AndPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 AndTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 AnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 ArgsAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 ArgsPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 CflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 ConcreteCflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 ExactTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 HandlerPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 HasMemberTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 IfPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 KindedPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 NotPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 NotTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 OrPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 OrTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 PerCflow.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 PerClause.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 PerFromSuper.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 PerObject.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 PerSingleton.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 PerTypeWithin.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 Pointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 PointcutExpressionMatching.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 ReferencePointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 SignaturePattern.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 ThisOrTargetAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 ThisOrTargetPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 ThrowsPattern.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 TypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 TypePatternList.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 WildTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 WithinAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 WithinCodeAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 WithinPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/a39f595 WithincodePointcut.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 AnnotationFinder.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 JoinPointMatchImpl.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 PointcutParameterImpl.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 ReflectionBasedReferenceTypeDelegate.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 ReflectionBasedReferenceTypeDelegateFactory.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 ReflectionBasedResolvedMemberImpl.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 ReflectionShadow.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 ReflectionVar.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 ReflectionWorld.java', 'weaver/src/org/aspectj/weaver/reflect/a39f595 ShadowMatchImpl.java', 'weaver/src/org/aspectj/weaver/tools/a39f595 JoinPointMatch.java', 'weaver/src/org/aspectj/weaver/tools/a39f595 PointcutExpression.java', 'weaver/src/org/aspectj/weaver/tools/a39f595 PointcutParameter.java', 'weaver/src/org/aspectj/weaver/tools/a39f595 PointcutParser.java', 'weaver/src/org/aspectj/weaver/tools/a39f595 PointcutPrimitive.java', 'weaver/src/org/aspectj/weaver/tools/a39f595 ShadowMatch.java', 'weaver/testsrc/a39f595 BcweaverModuleTests15.java', 'weaver/testsrc/org/aspectj/weaver/patterns/a39f595 AndOrNotTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/a39f595 ArgsTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/a39f595 HandlerTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/a39f595 KindedTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/a39f595 PatternsTests.java', 'weaver/testsrc/org/aspectj/weaver/patterns/a39f595 PointcutTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/a39f595 ThisOrTargetTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/a39f595 WithinCodeTestCase.java', 'weaver/testsrc/org/aspectj/weaver/patterns/a39f595 WithinTestCase.java', 'weaver/testsrc/org/aspectj/weaver/reflect/a39f595 ReflectionBasedReferenceTypeDelegateTest.java', 'weaver/testsrc/org/aspectj/weaver/reflect/a39f595 ReflectionWorldTest.java', 'weaver/testsrc/org/aspectj/weaver/tools/a39f595 PointcutExpressionTest.java', 'weaver/testsrc/org/aspectj/weaver/tools/a39f595 PointcutParserTest.java', 'weaver/testsrc/reflect/tests/a39f595 C.java']"
108377,Bug 108377 Verify Error on intertype field indirection in intertype method,"""When I run this program: public class A { public static void main(String[] args) { System.out.println(new A().foo()); } } aspect Aspect1 { public A A.a; public String A.value; public String A.foo() { return a.value; } } I get the error: Exception in thread """"main"""" java.lang.VerifyError: (class: Aspect1, method: ajc$interMethod$Aspect1$A$foo signature: (LA;)Ljava/lang/String;) Incompatible type for getting or setting field at A.<init>(A.java:1) at A.main(A.java:3) Javap reveals that the field name is missing the class name part: 1: getfield #50; //Field a:LA; 4: getfield #46; //Field A.value:Ljava/lang/String; If I replace a.value by this.a.value, the correct code is generated: 1: getfield #37; //Field A.a:LA; 4: getfield #46; //Field A.value:Ljava/lang/String;""",2005-08-30 11:01:24,be750d5,['tests/src/org/aspectj/systemtest/ajc150/be750d5 Ajc150Tests.java']
108448,Bug 108448 IllegalStateException: Undeclared type variable when hiding,,2005-08-31 02:35:46,2c9ea11,"['weaver/src/org/aspectj/weaver/bcel/2c9ea11 BcelField.java', 'weaver/src/org/aspectj/weaver/bcel/2c9ea11 BcelGenericSignatureToTypeXConverter.java', 'weaver/src/org/aspectj/weaver/bcel/2c9ea11 BcelMethod.java', 'weaver/src/org/aspectj/weaver/bcel/2c9ea11 BcelObjectType.java', 'weaver/testsrc/org/aspectj/weaver/bcel/2c9ea11 BcelGenericSignatureToTypeXTestCase.java']"
108816,Bug 108816 AspectJ 1.5.0 Development Compiler Chokes on Advice with Cflow,,2005-09-06 03:18:39,71771ab,"['tests/src/org/aspectj/systemtest/ajc150/71771ab Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/71771ab ArgsPointcut.java']"
108826,Bug 108826 AJDT Error: Can't find type,"""In Eclipse 3.1, using the latest AspectJ build (1.5.0_M3a compiler and 1.3.0 plugin) I get an error """"can't find type test.T"""" , using the following code: =============== package test; public class CantFindType { public <T> T[] method(T[] array) { return null; } } ================ The error occurs, if the return type, or the parameter is an array of a generic type. The code compiles fine, but Eclipse shows the error, but doesn't show the folder or the location for the error.""",2005-09-06 08:13:03,2942ca0,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/2942ca0 EclipseFactory.java', 'tests/src/org/aspectj/systemtest/ajc150/2942ca0 Ajc150Tests.java']"
108886,Bug 108886 Getting Exception during compilation : java.lang.RuntimeException: Internal Compiler Error: Unexpected null source location passed as 'see also' location.,Am attaching a small test case to reproduce the error (Not sure how to attach it - hopefully should be feasible to do so after I log the bug).,2005-09-06 19:02:23,2d21db0,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/2d21db0 AjLookupEnvironment.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/2d21db0 EclipseFactory.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/2d21db0 EclipseSourceType.java', 'weaver/src/org/aspectj/weaver/2d21db0 ResolvedMemberImpl.java', 'weaver/src/org/aspectj/weaver/2d21db0 ResolvedType.java']"
108892,Bug 108892 Load Time Weaving problem with Aspect Definition at 2 Levels of Hierarchy,"""I am trying to weave into Tomcat with a system-level aspect (META-INF/aop.xml is found in a jar on the system classpath), and also have a Web application with an aop.xml properly deployed. When I try to run them both together, only the system-level aspects work. If I remove the system-level aspect jar from the classpath, the application-level aspects work. What would be a reasonable way to isolate this into a test case? If I could package up a simple system.jar and app.war file for Tomcat 5.5.9, would that be useful for you to use in debugging it? I tried making a simple standalone version with 2 aop.xml files in the same app classloader but that works just fine.""",2005-09-06 22:05:34,794f9b5,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/794f9b5 ValidateAtAspectJAnnotationsVisitor.java', 'tests/java5/ataspectj/ataspectj/hierarchy/794f9b5 AppContainerTest.java', 'tests/java5/ataspectj/ataspectj/hierarchy/app/794f9b5 SubApp.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/794f9b5 AtAjLTWTests.java', 'weaver/src/org/aspectj/weaver/bcel/794f9b5 AtAjAttributes.java']"
108902,Bug 108902 Type mismatch: cannot convert from Collection to Collection,(From aspectj-users) The program below produces the erroneous message: [iajc] D:\workdir\DPsample\main\src\com\designpattern\observer\ObserverProt ocol.aj:39 [error] Type mismatch: cannot convert from Collection to Collection [iajc] return observers; [iajc] ^^^^^ //Subject.java interface Subject { public void addObserver(Observer observer); public void removeObserver(Observer observer); public Collection getObservers(); } //Observer.java interface Observer { public void update(); } //ObserverProtocol public abstract aspect ObserverProtocol{ abstract pointcut stateChange(Subject subject); after(Subject subject):stateChange(subject){ Iterator it=subject.getObservers().iterator(); while(it.hasNext()){ Observer observer=(Observer)it.next(); observer.update(); } } private Collection Subject.observers=new ArrayList(); public void Subject.addObserver(Observer observer){ observers.add(observer); } public void Subject.removeObserver(Observer observer){ observers.remove(observer); } public Collection Subject.getObservers() { return observers; } },2005-09-07 02:53:36,2505485,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/2505485 InterTypeMethodDeclaration.java', 'tests/bugs150/pr108902/2505485 Observer.java', 'tests/bugs150/pr108902/2505485 Subject.java', 'tests/src/org/aspectj/systemtest/ajc150/2505485 Ajc150Tests.java']"
109016,Bug 109016 NullPointerException when building configuration,The exception below seems to be happening with any .lst file: Message: NullPointerException thrown: null Stack trace: java.lang.NullPointerException at org.aspectj.ajde.internal.CompilerAdapter.configureBuildOptions(CompilerAdapter.java:296) at org.aspectj.ajde.internal.CompilerAdapter.genBuildConfig(CompilerAdapter.java:170) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:95) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191),2005-09-07 21:09:51,5187437,['ajde/src/org/aspectj/ajde/internal/5187437 CompilerAdapter.java']
109042,Bug 109042 parameter ajc_aroundclosure is never read,,2005-09-08 08:13:40,08d6a5d,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/08d6a5d AjProblemReporter.java', 'tests/src/org/aspectj/systemtest/ajc150/08d6a5d Ajc150Tests.java']"
109124,Bug 109124 VerifyError with inner classes,,2005-09-09 05:44:14,a9ca915,"['tests/src/org/aspectj/systemtest/ajc150/a9ca915 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/a9ca915 BcelField.java']"
109173,"""Bug 109173 Weaving Adaptor enhancements for performance, configuration and diagnosis""","""Here are some suggested enhancements as a result of exhaustive testing in the Eclipse/OSGi environment. 1. If no aspects are declared for a particular class loader, either because there are no visible aop.xml files or they contain no aspect definitions, then we should short-circuit the implementation of weaveClass() so that byte-code is not unnecessarily passed to the weaver. This is especially important under OSGi where there may be hundreds of class bundles, each with their own class loader only some of which are being woven. We can use the existing enabled flag. 2. As previously discussed on aspectj-dev the META-INF directory is considered private in OSGi and is therefore an inappropriate location for aop.xml files declaring shared aspects. I therefore propose a System property to set the a resource names for finding aop.xml files which would default to META-INF/aop.xml e.g. -Dorg.aspectj.weaver.loadtime.configuration=META- INF/aop.xml;org/aspectj/aop.xml. 3. We should not be catching Throwable in Aj. Instead we should catch known exceptions e.g. BCException and issue messages while letting other runtime exceptions pass back to the class loader. A user provided IMessageHandler implementation can decide under what circumstances to abort. Alternatively if Aj is considered to be a safe interface for weaving agents e.g. JVMTI then the dump logic it contains should be moved to the WeavingAdaptor so that it can be used directly from a class loader.""",2005-09-09 12:49:04,03b20bc,"['loadtime/src/org/aspectj/weaver/loadtime/03b20bc Aj.java', 'loadtime/src/org/aspectj/weaver/loadtime/03b20bc ClassLoaderWeavingAdaptor.java', 'loadtime/src/org/aspectj/weaver/loadtime/03b20bc DefaultWeavingContext.java', 'loadtime/src/org/aspectj/weaver/loadtime/03b20bc IWeavingContext.java']"
109283,"""Bug 109283 Invalid """"indirect static access"""" warning on EnumSet.noneOf""","""When compiling AspectJ enabled projects in Java 5.0 source mode with """"Indirect access to static modifier"""" warnings on, the following code incorrectly gives a compiler warning (this doesn't occur in non-AspectJ enabled projects): public class Test { enum Foo { Wibble, Wobble, Woo; } public static void main(String[] args) { EnumSet<Foo> set = EnumSet.noneOf(Foo.class); } }""",2005-09-12 08:37:45,8a0f59a,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/8a0f59a AspectDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/8a0f59a EclipseFactory.java', 'tests/src/org/aspectj/systemtest/ajc150/8a0f59a Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/8a0f59a AjcMemberMaker.java', 'weaver/src/org/aspectj/weaver/bcel/8a0f59a BcelPerClauseAspectAdder.java']"
109486,Bug 109486 Internal compiler error (ClassParser.java:242),"""Testcase: A.aj containing: final abstract aspect A {} This causes the compiler to abort with an internal compiler error: C:\Documents and Settings\mchapman\A.aj [error] Internal compiler error org.aspectj.apache.bcel.classfile.ClassFormatException: Class can't be both final and abstract at org.aspectj.apache.bcel.classfile.ClassParser.readClassInfo(ClassPars er.java:242) at org.aspectj.apache.bcel.classfile.ClassParser.parse(ClassParser.java: 165) at org.aspectj.weaver.bcel.Utility.makeJavaClass(Utility.java:489) at org.aspectj.weaver.bcel.UnwovenClassFile.getJavaClass(UnwovenClassFil e.java:63) at org.aspectj.weaver.bcel.UnwovenClassFile.getClassName(UnwovenClassFil e.java:147) at org.aspectj.ajdt.internal.core.builder.AjState.noteResult(AjState.jav a:497) at org.aspectj.ajdt.internal.core.builder.AjBuildManager$3.acceptResult( AjBuildManager.java:748) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing( AjCompilerAdapter.java:186) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning $org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184(CompilerAdapter.a j:89) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compil er.java:528) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compil er.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilat ion(AjBuildManager.java:728) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuild Manager.java:206) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBu ildManager.java:140) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) at org.aspectj.tools.ajc.Main.run(Main.java:324) at org.aspectj.tools.ajc.Main.runMain(Main.java:238) at org.aspectj.tools.ajc.Main.main(Main.java:82) (no source information available) C:\Documents and Settings\mchapman\A.aj:1 [error] The class A can be either abst ract or final, not both final abstract aspect A {} ABORT Exception thrown from AspectJ DEVELOPMENT C:\Documents and Settings\mchapman>ajc -version AspectJ Compiler DEVELOPMENT built on Tuesday Sep 13, 2005 at 22:31:40 GMT The expected behaviour is naturally just to get a regular compiler errror saying """"The aspect A can be either abstract or final, not both"""".""",2005-09-14 06:06:29,87e5c2e,"['bcel-builder/src/org/aspectj/apache/bcel/classfile/87e5c2e ClassParser.java', 'tests/bugs150/87e5c2e PR109486.java', 'tests/src/org/aspectj/systemtest/ajc150/87e5c2e Ajc150Tests.java']"
109614,Bug 109614 [waiting-on-build] [iajc.task] java.lang.RuntimeException: Ranges must be updated with an enclosing instructionList,,2005-09-15 09:57:46,94159f9,"['tests/bugs150/94159f9 pr109614.java', 'tests/src/org/aspectj/systemtest/ajc150/94159f9 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/94159f9 BcelShadow.java']"
111481,Bug 111481 varargs doesn't work for ITD'd constructors,,2005-10-04 12:25:10,2b0e675,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/2b0e675 InterTypeConstructorDeclaration.java', 'tests/src/org/aspectj/systemtest/ajc150/2b0e675 Ajc150Tests.java']"
111667,Bug 111667 Produce a compile warning when default advice precedence is applied,"""I propose that the compiler spit out a warning anytime that it has to apply the default advice precedence. Also, it should spit out the recommendation that default ordering is not guaranteed from release to release of the compiler. You can see the thread on aspectj-dev titled """"change in runtime execution order"""" and the one on aspectj-users titled """"AJDT 1.3 and aspectj"""" for the reasoning behind why this is a good thing.""",2005-10-05 14:34:46,2c81907,"['tests/src/org/aspectj/systemtest/ajc150/2c81907 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/2c81907 Lint.java', 'weaver/src/org/aspectj/weaver/2c81907 Shadow.java', 'weaver/src/org/aspectj/weaver/2c81907 World.java']"
111915,Bug 111915 illegal change to pointcut declaration,"""org.aspectj.weaver.BCException at org.aspectj.weaver.patterns.ReferencePointcut.concretize1(ReferencePointcut.java:306) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:229) at org.aspectj.weaver.patterns.ReferencePointcut.concretize1(ReferencePointcut.java:331) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:229) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:216) at org.aspectj.weaver.Advice.concretize(Advice.java:273) at org.aspectj.weaver.bcel.BcelAdvice.concretize(BcelAdvice.java:83) at org.aspectj.weaver.CrosscuttingMembers.addShadowMunger(CrosscuttingMembers.java:84) at org.aspectj.weaver.CrosscuttingMembers.addShadowMungers(CrosscuttingMembers.java:78) at org.aspectj.weaver.ResolvedType.collectCrosscuttingMembers(ResolvedType.java:462) at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect(CrosscuttingMembersSet.java:62) at org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave(BcelWeaver.java:426) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:283) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:760) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:225) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:151) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) BCException thrown: illegal change to pointcut declaration: spike.np.CommandCase.handleCommand(BindingTypePattern(spike.np.OtherHandler$MyWorld, 0)) when batch building BuildConfig[/home/guido/workspace/.metadata/.plugins/org.eclipse.ajdt.core/np.generated.lst] #Files=11""",2005-10-07 11:14:18,3021284,"['tests/bugs150/3021284 pr111915.java', 'tests/src/org/aspectj/systemtest/ajc150/3021284 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/3021284 ReferencePointcut.java']"
112027,Bug 112027 unexpected error unboundFormalInPC,"""In 1.5.0M4, I get error """"the parameter tis is not bound in [all branches of] pointcut"""". Not true of 1.2.1. Untested in other development versions of 1.5.0. No branches (all &&) but duplicate specification of this(..). ------------------------------------------ package demo; /** * PerThis */ public class PerThis { public static void main(String[] args) { new This().test(); } } aspect PerThisTest perthis(pc()) { // TutIndex example-basic-perthis pointcut pc() : this(This) && !within(PerThisTest) && call(void run()); before(This tis) : pc() && this(tis){ System.out.println(""""bef """" + this + """" <-- """" + tis); } } class This { int i; void test() { run(); } void run() { System.out.println(""""run """" + this); } }""",2005-10-08 02:49:49,ae612d9,"['tests/src/org/aspectj/systemtest/ajc150/ae612d9 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/ae612d9 BindingTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/ae612d9 ExactTypePattern.java']"
112243,Bug 112243 Compiler Core Dump with Apparent Fix,,2005-10-11 14:27:35,04e8dca,"['weaver/src/org/aspectj/weaver/04e8dca World.java', 'weaver/src/org/aspectj/weaver/bcel/04e8dca BcelWorld.java']"
112458,Bug 112458 Property Editor still shows the properties of layout items when switch to Master page viewer.,Description: Property Editor still shows the properties of layout items when switch to Master page viewer. Steps to reproduce: 1. New a report and insert a label. 2. Select the label.(Property Editor shows label's properties) 3. Switch to Master Page. Expected result: Property Editor changs to reflect Master Page properties. Actual result: It still showed the label's properties. This will confuse customers if they thought it as Master Page Editor and set properties without click Master Page viewer at first.,2005-10-13 07:31:44,53284da,"['tests/src/org/aspectj/systemtest/53284da AllTests15.java', 'tests/src/org/aspectj/systemtest/ajc150/53284da AllTestsAspectJ150.java', 'tests/src/org/aspectj/systemtest/ajc151/53284da Ajc151Tests.java', 'tests/src/org/aspectj/systemtest/ajc151/53284da AllTestsAspectJ151.java', 'weaver/src/org/aspectj/weaver/53284da TypeFactory.java']"
112476,"""Bug 112476 """"declare parents"""" does not work with bytecode weaving""",,2005-10-13 09:44:09,a7e13f1,"['tests/bugs150/pr112476/case1/lib/a7e13f1 A.java', 'tests/bugs150/pr112476/case1/lib/a7e13f1 B.java', 'tests/bugs150/pr112476/case1/lib/a7e13f1 C.java', 'tests/bugs150/pr112476/case1/weaved/a7e13f1 SuperC.java', 'tests/src/org/aspectj/systemtest/ajc150/a7e13f1 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/a7e13f1 BcelTypeMunger.java']"
112514,"""Bug 112514 ajc compile crash, not giving information which class file cause it""",,2005-10-13 13:24:15,999d9b0,['bcel-builder/src/org/aspectj/apache/bcel/classfile/999d9b0 ClassParser.java']
112615,Bug 112615 -XhasMember is not processed correctly when passed from AJDT,"""To test this in AJDT install the bean example, add a new interface called I and then add the following line to BoundPoint.aj: declare parents: hasmethod(* set*(..)) implements I; Now open the AspectJ Compiler preference page and select """"Has Member"""" on the advanced tab. Click OK, rebuild and if the option was working the project would build correctly. As it stands there is an error: the type pattern hasmethod(* set*(..)) can only be used when the -XhasMember option is set""",2005-10-14 08:26:11,cc6862f,"['ajde/testsrc/org/aspectj/ajde/cc6862f BuildConfigurationTests.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/cc6862f AjBuildConfig.java']"
112756,Bug 112756 ajdt compiler generate false warnings,"""I was working on aspect that should raise an error for junit test methods that didn't use any assertions. Apparently I had to use pointcut like """"call(void Assert+.assert*(..))"""" on which ajdt compiler complained about using """"assert"""" keyword. I don't think such warning should be shown in such case. Anyway, here is the complete aspect code. import junit.framework.Test; import junit.framework.Assert; import junit.framework.AssertionFailedError; public aspect AssertionCounter { private ThreadLocal counts = new ThreadLocal(); public pointcut testMethodExecution() : execution(void Test+.test*()); public pointcut assertCall() : cflow(testMethodExecution()) && call(void Assert+.assert*(..)); void around() : testMethodExecution() { counts.set( new Counter()); proceed(); if(((Counter) counts.get()).getCount()==0) { throw new AssertionFailedError(""""No assertions had been called""""); } } before() : assertCall() { ((Counter) counts.get()).inc(); } }""",2005-10-16 23:56:55,7a1002a,['tests/src/org/aspectj/systemtest/ajc150/7a1002a Ajc150Tests.java']
112830,"""Bug 112830 Warning """"couldn't find aspectjrt.jar on classpath""""""","""The compiler makes this warning if """"aspectrt.jar"""" file has a different name like """"aspectrt-1.3.jar"""", which is the case when compiling with maven.""",2005-10-17 14:01:44,1f51499,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/1f51499 AjBuildManager.java']
113073,Bug 113073 weaveinfo messages not reported if applying declare @method on an ITD'd method,"""Given the following class: @interface Annotation{} aspect B { declare @method : public * C.anotherMethod(..) : @Annotation; } class C { } aspect D { public void C.anotherMethod(String s) { } public void C.anotherMethod() { } } I would expect a two weaveinfo messages of the form: weaveinfo 'public void C.anotherMethod()' (pr99191_4.java) is annotated with @Annotation method annotation from 'B' (pr99191_4.java:3) weaveinfo 'public void C.anotherMethod(String)' (pr99191_4.java) is annotated with @Annotation method annotation from 'B' (pr99191_4.java:3) However, only the two """"intertyped"""" messages are coming out.""",2005-10-19 09:24:26,f06df41,"['tests/bugs150/f06df41 pr113073.java', 'tests/src/org/aspectj/systemtest/ajc150/f06df41 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/f06df41 BcelClassWeaver.java']"
113118,Bug 113118 ClassFormatException with tracing aspect,"""Build id: 20051017111807 AspectJ version: 1.5.0.200510141300 The following aspect resulted in the CFE: public aspect CallTrace { /** * A marker interface used to pick the classes to trace. Declare any class you want to * trace to implement this interface. The best way is using an aspect like the one in * the class comment block above. */ public static interface Traced {} /** * A marker annoation, can be used instead of {@link Traced}. */ @Documented @Retention(RetentionPolicy.RUNTIME) @Target({ElementType.TYPE, ElementType.ANNOTATION_TYPE}) public @interface TracedAnno {} private static Level level = Level.INFO; /** * Set the global logging level used for reporting traced calls. Defaults to INFO. * @param newLevel */ public static void setLevel (Level newLevel) { level = newLevel; } /** * @return the Level used for writing traced output. */ public static Level getLevel () { return level; } private static Logger log = Logger.getLogger(Traced.class); private int nesting = 0; private static StringBuffer prefixStr = null; static { new StringBuffer(1024); for (int i=0; i<128; i++) { // stuff with """"+"""". prefixStr.append(""""++++++++""""); } } public pointcut exclusions(): within(CallTrace) || within(*Tracer); // Distinguish between initialization JPs and other method calls, to work // around AJ limitation that around advice isn't supported for initializations. public pointcut traceIntfInit(): initialization(Traced+.new(..)); public pointcut traceIntf(): call(* Traced+.*(..)); public pointcut traceAnnoInit(): initialization(com.adteractive..*.new(..)) && @target(TracedAnno); public pointcut traceAnno(): call(* com.adteractive..*.*(..)) && @target(TracedAnno); public pointcut traceInit(): !exclusions() && (traceIntfInit() || traceAnnoInit()); public pointcut trace(): !exclusions() && (traceIntf() || traceAnno()); before(): traceInit() { nesting++; String pre = prefixStr.substring(0,nesting); log.log (level, pre+""""> """"+thisJoinPointStaticPart); } after(): traceInit() { String pre = prefixStr.substring(0,nesting); log.log (level, pre+""""< """"+thisJoinPointStaticPart); nesting--; } Object around(): trace() { nesting++; String pre = prefixStr.substring(0,nesting); log.log (level, pre+""""> """"+thisJoinPointStaticPart); Object result = proceed(); log.log (level, pre+""""< """"+thisJoinPointStaticPart); nesting--; return result; } } A separate aspect is used to """"declare parent"""" or """"declare @type"""" either the marker interface or annotation, thereby adding tracing to the user-specified classes. E.g., public aspect CallTraceTestTracer { // declare @type: com.me.foo..*: @CallTrace.TracedAnno; declare parents: com.me.foo..* implements CallTrace.Traced; } The exception wasn't thrown in a previous version when I used just before advice for both the """"trace"""" and """"traceInit"""" pointcuts. org.aspectj.apache.bcel.classfile.ClassFormatException at org.aspectj.apache.bcel.classfile.Utility.typeOfSignature(Utility.java:1293) at org.aspectj.apache.bcel.generic.Type.getTypeInternal(Type.java:166) at org.aspectj.apache.bcel.generic.Type.getTypeInternal(Type.java:174) at org.aspectj.apache.bcel.generic.Type.getType(Type.java:155) at org.aspectj.weaver.bcel.BcelWorld.makeBcelType(BcelWorld.java:198) at org.aspectj.weaver.bcel.BcelShadow.createMethodGen(BcelShadow.java:2999) at org.aspectj.weaver.bcel.BcelShadow.extractMethod(BcelShadow.java:2826) at org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline(BcelShadow.java:2020) at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:211) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:514) at org.aspectj.weaver.Shadow.implement(Shadow.java:391) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:1781) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:394) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:98) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1464) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1429) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1203) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1039) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.a jdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:759) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:249) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:158) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in: public class com.adteractive.framework.test.ConditionTestFilterTest extends junit.framework.TestCase: com.adteractive.framework.ConditionTestFilter ctf [Signature(Lcom/adteractive/framework/ConditionTestFilter<Lcom/adteractive/framework/test/InputStub;Lcom/adteractive/framework/test/OutputStub;>;)] static Class class$0 private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0 public void <init>(): ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 16) INVOKESPECIAL junit.framework.TestCase.<init> ()V constructor-execution(void com.adteractive.framework.test.ConditionTestFilterTest.<init>()) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 17) | ACONST_NULL | PUTFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | RETURN (line 16) constructor-execution(void com.adteractive.framework.test.ConditionTestFilterTest.<init>()) end public void <init>() protected void setUp() throws java.lang.Exception org.aspectj.weaver.MethodDeclarationLineNumber: 23:543 : method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.setUp()) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 24) | INVOKESPECIAL junit.framework.TestCase.setUp ()V | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 25) | NEW com.adteractive.framework.test.ConditionTestFilterStub | DUP | LDC """"ctf"""" | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this | ASTORE_1 | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.test.ConditionTestFilterTest.makeBranches()) | | ALOAD_1 | | INVOKESPECIAL com.adteractive.framework.test.ConditionTestFilterTest.makeBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.test.ConditionTestFilterTest.makeBranches()) | INVOKESPECIAL com.adteractive.framework.test.ConditionTestFilterStub.<init> (Ljava/lang/String;[Lcom/adteractive/framework/Filter;)V | PUTFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | RETURN (line 26) method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.setUp()) end protected void setUp() throws java.lang.Exception public void testExecute() org.aspectj.weaver.MethodDeclarationLineNumber: 31:754 : method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testExecute()) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 32) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | NEW com.adteractive.framework.test.InputStub | DUP | INVOKESPECIAL com.adteractive.framework.test.InputStub.<init> ()V | method-call(com.adteractive.framework.Output com.adteractive.framework.ConditionTestFilter.execute(com.adteractive.framework.Input)) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.execute (Lcom/adteractive/framework/Input;)Lcom/adteractive/framework/Output; | method-call(com.adteractive.framework.Output com.adteractive.framework.ConditionTestFilter.execute(com.adteractive.framework.Input)) | CHECKCAST com.adteractive.framework.test.OutputStub | ASTORE_1 | LDC """"bf12"""" (line 33) | ALOAD_1 // com.adteractive.framework.test.OutputStub output | method-call(com.adteractive.framework.Status com.adteractive.framework.test.OutputStub.getStatus()) | | INVOKEVIRTUAL com.adteractive.framework.test.OutputStub.getStatus ()Lcom/adteractive/framework/Status; | method-call(com.adteractive.framework.Status com.adteractive.framework.test.OutputStub.getStatus()) | method-call(java.lang.String com.adteractive.framework.Status.getAdditionalMessage()) | | INVOKEINTERFACE com.adteractive.framework.Status.getAdditionalMessage ()Ljava/lang/String; | method-call(java.lang.String com.adteractive.framework.Status.getAdditionalMessage()) | method-call(void junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertEquals (Ljava/lang/String;Ljava/lang/String;)V | method-call(void junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 34) | NEW com.adteractive.framework.test.ConditionTestFilterStub | DUP | INVOKESPECIAL com.adteractive.framework.test.ConditionTestFilterStub.<init> ()V | PUTFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 35) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | NEW com.adteractive.framework.test.InputStub | DUP | INVOKESPECIAL com.adteractive.framework.test.InputStub.<init> ()V | method-call(com.adteractive.framework.Output com.adteractive.framework.ConditionTestFilter.execute(com.adteractive.framework.Input)) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.execute (Lcom/adteractive/framework/Input;)Lcom/adteractive/framework/Output; | method-call(com.adteractive.framework.Output com.adteractive.framework.ConditionTestFilter.execute(com.adteractive.framework.Input)) | CHECKCAST com.adteractive.framework.test.OutputStub | ASTORE_1 // com.adteractive.framework.test.OutputStub output | ALOAD_1 // com.adteractive.framework.test.OutputStub output (line 36) | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertNotNull (Ljava/lang/Object;)V | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object)) | RETURN (line 37) method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testExecute()) end public void testExecute() public void testGetFilterBranches() org.aspectj.weaver.MethodDeclarationLineNumber: 42:1111 : method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testGetFilterBranches()) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 43) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertNotNull (Ljava/lang/Object;)V | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object)) | ICONST_3 (line 44) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | ARRAYLENGTH | method-call(void junit.framework.Assert.assertEquals(int, int)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertEquals (II)V | method-call(void junit.framework.Assert.assertEquals(int, int)) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 45) | NEW com.adteractive.framework.test.ConditionTestFilterStub | DUP | INVOKESPECIAL com.adteractive.framework.test.ConditionTestFilterStub.<init> ()V | PUTFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 46) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | method-call(void junit.framework.Assert.assertNull(java.lang.Object)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertNull (Ljava/lang/Object;)V | method-call(void junit.framework.Assert.assertNull(java.lang.Object)) | RETURN (line 47) method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testGetFilterBranches()) end public void testGetFilterBranches() public void testSetFilterBranches() org.aspectj.weaver.MethodDeclarationLineNumber: 52:1441 : method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testSetFilterBranches()) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 53) | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.test.ConditionTestFilterTest.makeBranches()) | | INVOKESPECIAL com.adteractive.framework.test.ConditionTestFilterTest.makeBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.test.ConditionTestFilterTest.makeBranches()) | ASTORE_1 | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 54) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | ALOAD_1 // com.adteractive.framework.Filter[] branches | method-call(void com.adteractive.framework.ConditionTestFilter.setFilterBranches(com.adteractive.framework.Filter[])) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.setFilterBranches ([Lcom/adteractive/framework/Filter;)V | method-call(void com.adteractive.framework.ConditionTestFilter.setFilterBranches(com.adteractive.framework.Filter[])) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 55) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertNotNull (Ljava/lang/Object;)V | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object)) | ICONST_3 (line 56) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | ARRAYLENGTH | method-call(void junit.framework.Assert.assertEquals(int, int)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertEquals (II)V | method-call(void junit.framework.Assert.assertEquals(int, int)) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 57) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | ACONST_NULL | method-call(void com.adteractive.framework.ConditionTestFilter.setFilterBranches(com.adteractive.framework.Filter[])) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.setFilterBranches ([Lcom/adteractive/framework/Filter;)V | method-call(void com.adteractive.framework.ConditionTestFilter.setFilterBranches(com.adteractive.framework.Filter[])) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 58) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | method-call(void junit.framework.Assert.assertNull(java.lang.Object)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertNull (Ljava/lang/Object;)V | method-call(void junit.framework.Assert.assertNull(java.lang.Object)) | RETURN (line 59) method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testSetFilterBranches()) end public void testSetFilterBranches() public void testConditionTestFilter() org.aspectj.weaver.MethodDeclarationLineNumber: 64:1847 : method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilter()) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 65) | NEW com.adteractive.framework.test.ConditionTestFilterStub | DUP | INVOKESPECIAL com.adteractive.framework.test.ConditionTestFilterStub.<init> ()V | PUTFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 66) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | method-call(void junit.framework.Assert.assertNull(java.lang.Object)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertNull (Ljava/lang/Object;)V | method-call(void junit.framework.Assert.assertNull(java.lang.Object)) | LDC com.adteractive.framework.test.ConditionTestFilterStub (line 67) | method-call(java.lang.String java.lang.Class.getSimpleName()) | | INVOKEVIRTUAL java.lang.Class.getSimpleName ()Ljava/lang/String; | method-call(java.lang.String java.lang.Class.getSimpleName()) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName()) | | INVOKEVIRTUAL com.adteractive.framework.FilterHelper.getName ()Ljava/lang/String; | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName()) | method-call(void junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertEquals (Ljava/lang/String;Ljava/lang/String;)V | method-call(void junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)) | RETURN (line 68) method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilter()) end public void testConditionTestFilter() public void testConditionTestFilterString() org.aspectj.weaver.MethodDeclarationLineNumber: 73:2158 : method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilterString()) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 74) | NEW com.adteractive.framework.test.ConditionTestFilterStub | DUP | LDC """"foo"""" | INVOKESPECIAL com.adteractive.framework.test.ConditionTestFilterStub.<init> (Ljava/lang/String;)V | PUTFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 75) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | method-call(void junit.framework.Assert.assertNull(java.lang.Object)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertNull (Ljava/lang/Object;)V | method-call(void junit.framework.Assert.assertNull(java.lang.Object)) | LDC """"foo"""" (line 76) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName()) | | INVOKEVIRTUAL com.adteractive.framework.FilterHelper.getName ()Ljava/lang/String; | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName()) | method-call(void junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertEquals (Ljava/lang/String;Ljava/lang/String;)V | method-call(void junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)) | RETURN (line 77) method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilterString()) end public void testConditionTestFilterString() public void testConditionTestFilterStringFilterOfIOArray() org.aspectj.weaver.MethodDeclarationLineNumber: 82:2456 : method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilterStringFilterOfIOArray()) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 83) | NEW com.adteractive.framework.test.ConditionTestFilterStub | DUP | LDC """"foo"""" | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.test.ConditionTestFilterTest.makeBranches()) | | INVOKESPECIAL com.adteractive.framework.test.ConditionTestFilterTest.makeBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.test.ConditionTestFilterTest.makeBranches()) | INVOKESPECIAL com.adteractive.framework.test.ConditionTestFilterStub.<init> (Ljava/lang/String;[Lcom/adteractive/framework/Filter;)V | PUTFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this (line 84) | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertNotNull (Ljava/lang/Object;)V | method-call(void junit.framework.Assert.assertNotNull(java.lang.Object)) | ICONST_3 (line 85) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | | INVOKEVIRTUAL com.adteractive.framework.ConditionTestFilter.getFilterBranches ()[Lcom/adteractive/framework/Filter; | method-call(com.adteractive.framework.Filter[] com.adteractive.framework.ConditionTestFilter.getFilterBranches()) | ARRAYLENGTH | method-call(void junit.framework.Assert.assertEquals(int, int)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertEquals (II)V | method-call(void junit.framework.Assert.assertEquals(int, int)) | LDC """"foo"""" (line 86) | ALOAD_0 // com.adteractive.framework.test.ConditionTestFilterTest this | GETFIELD com.adteractive.framework.test.ConditionTestFilterTest.ctf Lcom/adteractive/framework/ConditionTestFilter; | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName()) | | INVOKEVIRTUAL com.adteractive.framework.FilterHelper.getName ()Ljava/lang/String; | method-call(java.lang.String com.adteractive.framework.FilterHelper.getName()) | method-call(void junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)) | | INVOKESTATIC com.adteractive.framework.test.ConditionTestFilterTest.assertEquals (Ljava/lang/String;Ljava/lang/String;)V | method-call(void junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)) | RETURN (line 87) method-execution(void com.adteractive.framework.test.ConditionTestFilterTest.testConditionTestFilterStringFilterOfIOArray()) end public void testConditionTestFilterStringFilterOfIOArray() private com.adteractive.framework.Filter[] makeBranches() org.aspectj.weaver.MethodDeclarationLineNumber: 89:2749 : method-execution(com.adteractive.framework.Filter[] com.adteractive.framework.test.ConditionTestFilterTest.makeBranches()) | ICONST_3 (line 90) | ANEWARRAY com.adteractive.framework.test.FilterHelperStub | ASTORE_1 | ALOAD_1 // com.adteractive.framework.Filter[] branches (line 91) | ICONST_0 | NEW com.adteractive.framework.test.FilterHelperStub | DUP | LDC """"bf1"""" | INVOKESPECIAL com.adteractive.framework.test.FilterHelperStub.<init> (Ljava/lang/String;)V | AASTORE | ALOAD_1 // com.adteractive.framework.Filter[] branches (line 92) | ICONST_1 | NEW com.adteractive.framework.test.FilterHelperStub | DUP | LDC """"bf12"""" | INVOKESPECIAL com.adteractive.framework.test.FilterHelperStub.<init> (Ljava/lang/String;)V | AASTORE | ALOAD_1 // com.adteractive.framework.Filter[] branches (line 93) | ICONST_2 | NEW com.adteractive.framework.test.FilterHelperStub | DUP | LDC """"bf"""" | INVOKESPECIAL com.adteractive.framework.test.FilterHelperStub.<init> (Ljava/lang/String;)V | AASTORE | ALOAD_1 // com.adteractive.framework.Filter[] branches (line 94) | ARETURN method-execution(com.adteractive.framework.Filter[] com.adteractive.framework.test.ConditionTestFilterTest.makeBranches()) end private com.adteractive.framework.Filter[] makeBranches() end public class com.adteractive.framework.test.ConditionTestFilterTest when implementing on shadow method-call(com.adteractive.framework.Filter[] com.adteractive.framework.test.ConditionTestFilterTest.makeBranches()) when weaving type com.adteractive.framework.test.ConditionTestFilterTest when weaving classes when weaving when incrementally building BuildConfig[C:\cygwin\home\dwampler\work\workspace\.metadata\.plugins\org.eclipse.ajdt.core\adserver-service.generated.lst] #Files=259""",2005-10-19 14:01:25,d7d5947,['weaver/src/org/aspectj/weaver/bcel/d7d5947 LazyClassGen.java']
113510,Bug 113510 readAspect,clearly define what the goal for readAspect is old byte per byte reading cause NPE in some test case current impl is hashcode for aspect name + classloader - ie unstable across startups.,2005-10-24 05:36:56,62d16d5,['loadtime/src/org/aspectj/weaver/loadtime/62d16d5 ClassLoaderWeavingAdaptor.java']
113511,Bug 113511 LTW enhancements,"""Alex, here is the basic patch that is working well before you leave for the weekend ;-) I'll let Matthew post it officially to bugzilla since it was his idea. The earlier return from !enabled is a small addition I made that seems to help further. It would be great to have this in HEAD so I can report performance numbers based on it in part 2 of my article on developerworks ;-) Hope you are enjoying your new addition! Thanks! Index: ClassLoaderWeavingAdaptor.java =================================================================== RCS file: /home/technology/org.aspectj/modules/loadtime/src/org/aspectj/weaver/loadtim e/ClassLoaderWeavingAdaptor.java,v retrieving revision 1.18 diff -u -r1.18 ClassLoaderWeavingAdaptor.java --- ClassLoaderWeavingAdaptor.java 19 Oct 2005 13:11:36 -0000 1.18 +++ ClassLoaderWeavingAdaptor.java 21 Oct 2005 16:04:41 -0000 @@ -107,8 +107,13 @@ // register the definitions registerDefinitions(weaver, loader); + if (!enabled) { + return; + } messageHandler = bcelWorld.getMessageHandler(); + bcelWorld.setResolutionLoader((ClassLoader)null);//loader.getParent()); + // after adding aspects weaver.prepareForWeave(); } @@ -148,7 +153,11 @@ definitions.add(DocumentParser.parse(xml)); } } - + if (definitions.isEmpty()) { + enabled = false; + return; + } + // still go thru if definitions is empty since we will configure // the default message handler in there registerOptions(weaver, loader, definitions);""",2005-10-24 05:39:33,70888dd,"['loadtime/src/org/aspectj/weaver/loadtime/70888dd Aj.java', 'loadtime/src/org/aspectj/weaver/loadtime/70888dd ClassLoaderWeavingAdaptor.java']"
113861,Bug 113861 [generics] field-get problems when generic field is used.,"""Hi, When i'm compiling the following example, i'm getting this errors: TestAspect.aj:21 [error] incompatible return type applying to field-get (java.util.Set com.mprv.secsph.Test.intsSet) Test.java:18 [error] incompatible return type applying to field-get (java.util.Set com.mprv.secsph.Test.intsSet) Here is the example ------------------- Java Code: package com; public class Test { Set<Integer> intsSet; public Set<Integer> foo() { 18: return intsSet; } } Aspect: public privileged aspect TestAspect { pointcut gettingMember(Test t) : target(t) && get(!public Set<Integer> com.*.*) && !within(TestAspect); 21: Set<Integer> around(Test t) : gettingMemberCollection(t) { Set s = proceed(t); return s; } } I've tried many kinds of workarounds, and the only thing which worked, is defining the member field without using generics (regular Set) ... One more disturbing is, that this fiture worked(!) in M2 release. This is an example of the functionality that worked in my project (with M2), but now, also reports the same error: Java code is the same, Aspect is: public privileged aspect TestAspect { pointcut gettingMember(Test t) : target(t) && get(!public Set com.*.*) && !within(TestAspect); Set around(Test t) : gettingMemberCollection(t) { Set s = proceed(t); return s; } } Is it a bug? Or am i doing something wrong? Thanks! Misha.""",2005-10-26 14:01:17,8cea30f,"['tests/bugs150/pr113861/8cea30f Test.java', 'tests/bugs150/pr113861/8cea30f TestAspect.java', 'tests/src/org/aspectj/systemtest/ajc150/8cea30f Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/8cea30f Advice.java', 'weaver/src/org/aspectj/weaver/8cea30f Member.java', 'weaver/src/org/aspectj/weaver/8cea30f MemberImpl.java']"
114005,Bug 114005 annotated ITD fields on interfaces have no annotation,,2005-10-27 13:23:19,d9757d7,"['tests/bugs150/pr114005/d9757d7 Declaration1.java', 'tests/bugs150/pr114005/d9757d7 Declaration2.java', 'tests/src/org/aspectj/systemtest/ajc150/d9757d7 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/d9757d7 BcelTypeMunger.java']"
114054,Bug 114054 NPE in CContentOutlinePage.createContentProvider(),CUIPlugin.getActiveWorkbenchWindow().getActivePage() can return null.,2005-10-27 23:03:41,a4caeb9,"['tests/src/org/aspectj/systemtest/ajc150/a4caeb9 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/a4caeb9 PerThisOrTargetPointcutVisitor.java']"
114332,Bug 114332 Reflection API not detecting ITD method correctly in all circumstances,,2005-10-31 03:42:57,735d94f,"['aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/735d94f AjTypeImpl.java', 'aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/735d94f InterTypeConstructorDeclarationImpl.java', 'aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/735d94f InterTypeDeclarationImpl.java', 'aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/735d94f InterTypeFieldDeclarationImpl.java', 'aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/735d94f InterTypeMethodDeclarationImpl.java', 'tests/java5/reflection/735d94f ReflectBilling.java', 'tests/src/org/aspectj/systemtest/ajc150/735d94f Ajc150Tests.java']"
114495,Bug 114495 unqualified superaspect<T> pointcut sortafunny in subaspect,,2005-11-01 05:43:00,86880f7,"['tests/src/org/aspectj/systemtest/ajc150/86880f7 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/86880f7 ReferenceType.java', 'weaver/src/org/aspectj/weaver/86880f7 ResolvedType.java', 'weaver/src/org/aspectj/weaver/bcel/86880f7 BcelAdvice.java']"
114744,Bug 114744 NPE at CaptureBinding.java on wildcard in intertype field type,When compiling this program with ajc -1.5 public aspect Wildcard { Class<? extends Wildcard> Wildcard.cl; void foo() throws Exception { Wildcard ci = cl.newInstance(); } } ajc throws this exception java.lang.NullPointerException at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.initializeBounds(CaptureBinding.java:75) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.capture(ParameterizedTypeBinding.java:105) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.SingleNameReference.resolveType(SingleNameReference.java:772) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:293) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:199) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:422) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:178) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:400) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1076) at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:114) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1125) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:305) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:514) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:759) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:225) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:151) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) at org.aspectj.tools.ajc.Main.run(Main.java:326) at org.aspectj.tools.ajc.Main.runMain(Main.java:240) at org.aspectj.tools.ajc.Main.main(Main.java:83),2005-11-02 07:56:02,ade32bc,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/ade32bc EclipseFactory.java', 'tests/src/org/aspectj/systemtest/ajc150/ade32bc Ajc150Tests.java']"
115204,Bug 115204 WildAnnotationTypePattern.java:61 NPE after renaming method-annotation class,"""Sorry I don't have a small test case. It looks like the NPE happens when the annotation refered to by a (compiled?) aspect no longer exists because it was renamed. The class being woven is the first one (alphabetically), and the method being woven does not have the annotation on it. Let me know if you need a test case. (And sorry for the late bugs - I'm just now writing the article.) ------------------------------------------------------------------ java.lang.NullPointerException at org.aspectj.weaver.patterns.WildAnnotationTypePattern.matches(WildAnnotationTypePattern.java:61) at org.aspectj.weaver.patterns.SignaturePattern.matchesAnnotations(SignaturePattern.java:321) at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:169) at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:131) at org.aspectj.weaver.patterns.WithincodePointcut.matchInternal(WithincodePointcut.java:73) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:143) at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:55) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:143) at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:55) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:143) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:64) at org.aspectj.weaver.Advice.match(Advice.java:109) at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:97) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:1749) at org.aspectj.weaver.bcel.BcelClassWeaver.matchInvokeInstruction(BcelClassWeaver.java:1736) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:1533) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:1359) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:382) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:98) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1478) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1443) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1217) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1021) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:759) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:225) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:151) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in: public class com.isberg.articles.aop7.bean.ABeanTest$APlus extends java.lang.Object: TypeMungers: [(BcelTypeMunger ResolvedTypeMunger(Method, java.lang.String com.isberg.articles.aop7.bean.ABeanTest$CPlus.propertyName(java.lang.String)))] declares: [declare parents: com.isberg.articles.aop7.bean.ABeanTest$CPlus extends (com.isberg.articles.aop7.bean.ABean$IBean);] private static Throwable ajc$initFailureCause public static final com.isberg.articles.aop7.bean.ABeanTest$APlus ajc$perSingletonInstance static void <clinit>(): staticinitialization(void com.isberg.articles.aop7.bean.ABeanTest$APlus.<clinit>()) | catch java.lang.Throwable -> E0 | | INVOKESTATIC com.isberg.articles.aop7.bean.ABeanTest$APlus.ajc$postClinit ()V (line 125) | catch java.lang.Throwable -> E0 | GOTO L0 | E0: ASTORE_0 | ALOAD_0 | PUTSTATIC com.isberg.articles.aop7.bean.ABeanTest$APlus.ajc$initFailureCause Ljava/lang/Throwable; | L0: RETURN staticinitialization(void com.isberg.articles.aop7.bean.ABeanTest$APlus.<clinit>()) end static void <clinit>() void <init>(): ALOAD_0 // com.isberg.articles.aop7.bean.ABeanTest$APlus this (line 125) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void com.isberg.articles.aop7.bean.ABeanTest$APlus.<init>()) | RETURN constructor-execution(void com.isberg.articles.aop7.bean.ABeanTest$APlus.<init>()) end void <init>() void ajc$declare_parents_1() org.aspectj.weaver.MethodDeclarationLineNumber: 127:3678 : RETURN (line 127) end void ajc$declare_parents_1() public static String ajc$interMethod$com_isberg_articles_aop7_bean_ABeanTest$APlus$com_isberg_articles_aop7_bean_ABeanTest$CPlus$propertyName(com.isberg.articles.aop7.bean.ABeanTest$CPlus, String) EffectiveSignatureAttribute(java.lang.String com.isberg.articles.aop7.bean.ABeanTest$CPlus.propertyName(java.lang.String), method-execution) : method-execution(java.lang.String com.isberg.articles.aop7.bean.ABeanTest$CPlus.propertyName(java.lang.String)) | ALOAD_0 // com.isberg.articles.aop7.bean.ABeanTest$CPlus ajc$this_ (line 132) | ALOAD_1 // java.lang.String methodName | INVOKESTATIC com.isberg.articles.aop7.bean.ABean.ajc$interMethod$com_isberg_articles_aop7_bean_ABean$com_isberg_articles_aop7_bean_ABean$IBean$propertyName (Lcom/isberg/articles/aop7/bean/ABean$IBean;Ljava/lang/String;)Ljava/lang/String; | ASTORE_2 | LDC """"something"""" (line 133) | ALOAD_2 // java.lang.String result | method-call(boolean java.lang.String.equals(java.lang.Object)) | | INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z | method-call(boolean java.lang.String.equals(java.lang.Object)) | IFEQ L0 | LDC """"a"""" (line 134) | ASTORE_2 // java.lang.String result | L0: ALOAD_2 // java.lang.String result (line 136) | ARETURN method-execution(java.lang.String com.isberg.articles.aop7.bean.ABeanTest$CPlus.propertyName(java.lang.String)) end public static String ajc$interMethod$com_isberg_articles_aop7_bean_ABeanTest$APlus$com_isberg_articles_aop7_bean_ABeanTest$CPlus$propertyName(com.isberg.articles.aop7.bean.ABeanTest$CPlus, String) public static String ajc$interMethodDispatch1$com_isberg_articles_aop7_bean_ABeanTest$APlus$com_isberg_articles_aop7_bean_ABeanTest$CPlus$propertyName(com.isberg.articles.aop7.bean.ABeanTest$CPlus, String) EffectiveSignatureAttribute(java.lang.String com.isberg.articles.aop7.bean.ABeanTest$CPlus.propertyName(java.lang.String), method-call) : ALOAD_0 ALOAD_1 INVOKEVIRTUAL com.isberg.articles.aop7.bean.ABeanTest$CPlus.propertyName (Ljava/lang/String;)Ljava/lang/String; ARETURN end public static String ajc$interMethodDispatch1$com_isberg_articles_aop7_bean_ABeanTest$APlus$com_isberg_articles_aop7_bean_ABeanTest$CPlus$propertyName(com.isberg.articles.aop7.bean.ABeanTest$CPlus, String) public static com.isberg.articles.aop7.bean.ABeanTest$APlus aspectOf() org.aspectj.weaver.AjAttribute$AjSynthetic@591171 : GETSTATIC com.isberg.articles.aop7.bean.ABeanTest$APlus.ajc$perSingletonInstance Lcom/isberg/articles/aop7/bean/ABeanTest$APlus; IFNONNULL L0 NEW org.aspectj.lang.NoAspectBoundException DUP LDC """"com_isberg_articles_aop7_bean_ABeanTest$APlus"""" GETSTATIC com.isberg.articles.aop7.bean.ABeanTest$APlus.ajc$initFailureCause Ljava/lang/Throwable; INVOKESPECIAL org.aspectj.lang.NoAspectBoundException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V ATHROW L0: GETSTATIC com.isberg.articles.aop7.bean.ABeanTest$APlus.ajc$perSingletonInstance Lcom/isberg/articles/aop7/bean/ABeanTest$APlus; ARETURN end public static com.isberg.articles.aop7.bean.ABeanTest$APlus aspectOf() public static boolean hasAspect() org.aspectj.weaver.AjAttribute$AjSynthetic@16e3eb3 : GETSTATIC com.isberg.articles.aop7.bean.ABeanTest$APlus.ajc$perSingletonInstance Lcom/isberg/articles/aop7/bean/ABeanTest$APlus; IFNULL L0 ICONST_1 IRETURN L0: ICONST_0 IRETURN end public static boolean hasAspect() private static void ajc$postClinit() org.aspectj.weaver.AjAttribute$AjSynthetic@d7cf62 : NEW com.isberg.articles.aop7.bean.ABeanTest$APlus DUP INVOKESPECIAL com.isberg.articles.aop7.bean.ABeanTest$APlus.<init> ()V PUTSTATIC com.isberg.articles.aop7.bean.ABeanTest$APlus.ajc$perSingletonInstance Lcom/isberg/articles/aop7/bean/ABeanTest$APlus; RETURN end private static void ajc$postClinit() end public class com.isberg.articles.aop7.bean.ABeanTest$APlus when matching pointcut ((withincode(@(Parallel) * *(..)) && call(void *(..))) && percflow(com.isberg.articles.aop7.concurrent.ParallelMethodImpl on execution(@(Parallel) * *(..)))) when matching shadow method-call(boolean java.lang.String.equals(java.lang.Object)) when weaving type com.isberg.articles.aop7.bean.ABeanTest$APlus when weaving aspects when weaving when batch building BuildConfig[c:\home\ws\main-31\.metadata\.plugins\org.eclipse.ajdt.core\devworks-fall.generated.lst] #Files=70""",2005-11-05 06:03:26,557f5b4,['weaver/src/org/aspectj/weaver/patterns/557f5b4 WildAnnotationTypePattern.java']
115235,Bug 115235 StackOverflowError on circular pointcut iff aspect parameterized,The code below overflows when concretizing a circular pointcut from a parameterized aspect. Not true when the aspect is not parameterized. --------------------------------------------- public class SelfPC { public static void main(String[] args) { new C().foo(); } static class C { pointcut doit() : C.doit(); // CE expected void foo() {} } // ------------ pertarget<T> static abstract aspect PT_PARM<T> pertarget(pc()) { abstract protected pointcut pc(); before() : pc() {} } static aspect CPT_PARM extends PT_PARM<C> { protected pointcut pc() : C.doit(); } // // ------------ issingleton<T> // static abstract aspect IS_PARM<T> { // abstract protected pointcut pc(); // before() : pc() {} // } // static aspect CIS_PARM extends IS_PARM<C> { // protected pointcut pc() : C.doit(); // } // // ------------ pertarget // static abstract aspect PT pertarget(pc()) { // abstract protected pointcut pc(); // before() : pc() {} // } // static aspect CPT extends PT{ // protected pointcut pc() : C.doit(); // } // // ------------ issingleton // static abstract aspect SIS { // abstract protected pointcut pc(); // before() : pc() {} // } // static aspect CSIS extends SIS { // protected pointcut pc() : C.doit(); // } } --------------------------------------------- java.lang.StackOverflowError at java.lang.StringBuffer.append(StringBuffer.java:225) at org.aspectj.weaver.UnresolvedType.nameToSignature(UnresolvedType.java:734) at org.aspectj.weaver.UnresolvedType.forName(UnresolvedType.java:308) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromBinding(EclipseFactory.java:302) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromEclipse(EclipseFactory.java:129) at org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.getSuperclass(EclipseSourceType.java:119) at org.aspectj.weaver.ReferenceType.getSuperclass(ReferenceType.java:481) at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:65) at org.aspectj.weaver.ResolvedType$6.get(ResolvedType.java:447) at org.aspectj.weaver.Iterators$4.next(Iterators.java:148) at org.aspectj.weaver.Iterators$3$1.hasNext(Iterators.java:117) at org.aspectj.weaver.Iterators$3.hasNext(Iterators.java:128) at org.aspectj.weaver.ResolvedType.findPointcut(ResolvedType.java:466) at org.aspectj.weaver.patterns.ReferencePointcut.concretize1(ReferencePointcut.java:269) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:229) at org.aspectj.weaver.patterns.ReferencePointcut.concretize1(ReferencePointcut.java:326) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:229) ... ---------------------------------------------,2005-11-06 07:26:57,4b8bed7,"['tests/src/org/aspectj/systemtest/ajc150/4b8bed7 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/4b8bed7 Pointcut.java', 'weaver/src/org/aspectj/weaver/patterns/4b8bed7 ReferencePointcut.java']"
115607,Bug 115607 Incorrect structure model for simple declare @type program?,"""This program: ---8<----- @interface I {} class Simple {} public aspect C { declare @type: Simple : @I; } ---8<----- (all in a file called C.java, open with the AJ editor) when built shows incorrect gutter markers, it shows a double headed arrow on Simple implying that it annotates itself - rather than something outgoing from the declare statement and something incoming on the Simple type.""",2005-11-09 04:35:59,9ed75a1,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/9ed75a1 EclipseSourceLocation.java', 'tests/bugs150/9ed75a1 pr115607.java', 'tests/src/org/aspectj/systemtest/ajc150/9ed75a1 Ajc150Tests.java']"
116254,Bug 116254 AjTypeSystem interface cannot be used in LTW environment,,2005-11-14 11:16:55,81e6b60,"['aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/81e6b60 DeclareSoftImpl.java', 'aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/81e6b60 StringToType.java']"
116255,Bug 116255 XML Linkage Error with LTW,"""I am trying out a recent dev build of AspectJ and am now seeing a new linkage error when I load a Web app that contains an XML deployment descriptor. I'm trying to narrow down the date when this error first appeared. If I build and run with the Sept. 23 dev build all works properly. If I build and run with the Nov. 14 dev build it fails like this ... Here's the output: SEVERE: Error deploying configuration descriptor jpetstore.xml java.lang.LinkageError: org/apache/xerces/jaxp/SAXParserFactoryImpl : already defined in loader at java.lang.ClassLoader.defineClass(Ljava.lang.String; [BIILjava.security.ProtectionDomain;)Ljava.lang.Class;(Unknown Source ) at java.security.SecureClassLoader.defineClass (SecureClassLoader.java:124) at org.apache.catalina.loader.WebappClassLoader.findClassInternal (WebappClassLoader.java:1629) at org.apache.catalina.loader.WebappClassLoader.findClass (WebappClassLoader.java:850) at org.apache.catalina.loader.WebappClassLoader.loadClass (WebappClassLoader.java:1299) at org.apache.catalina.loader.WebappClassLoader.loadClass (WebappClassLoader.java:1181) at javax.xml.parsers.FactoryFinder.newInstance(FactoryFinder.java:88) at javax.xml.parsers.FactoryFinder.findJarServiceProvider (FactoryFinder.java:278) at javax.xml.parsers.FactoryFinder.find(FactoryFinder.java:185) at javax.xml.parsers.SAXParserFactory.newInstance (SAXParserFactory.java:107) at org.apache.tomcat.util.digester.Digester.getFactory (Digester.java:486) at org.apache.tomcat.util.digester.Digester.getParser(Digester.java:691) at org.apache.tomcat.util.digester.Digester.getXMLReader (Digester.java:899) at org.apache.tomcat.util.digester.Digester.parse(Digester.java:1561) at org.apache.catalina.startup.TldConfig.tldScanStream (TldConfig.java:513) at org.apache.catalina.startup.TldConfig.tldScanTld(TldConfig.java:545) at org.apache.catalina.startup.TldConfig.execute(TldConfig.java:300) at org.apache.catalina.core.StandardContext.processTlds (StandardContext.java:4193) at org.apache.catalina.core.StandardContext.start (StandardContext.java:4049) at org.apache.catalina.core.ContainerBase.addChildInternal (ContainerBase.java:759) at org.apache.catalina.core.ContainerBase.addChild (ContainerBase.java:739) at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524) at org.apache.catalina.startup.HostConfig.deployDescriptor (HostConfig.java:589) at org.apache.catalina.startup.HostConfig.deployDescriptors (HostConfig.java:536) at org.apache.catalina.startup.HostConfig.deployApps (HostConfig.java:471) at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1102) at org.apache.catalina.startup.HostConfig.lifecycleEvent (HostConfig.java:311) at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent (LifecycleSupport.java:119) at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1020) at org.apache.catalina.core.StandardHost.start(StandardHost.java:718) at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012) error can't determine implemented interfaces of missing type javax.xml.rpc.Call when matching pointcut ((((within(*) && call(public * javax.xml.rpc.Call.invoke* (..))) && target(BindingTypePattern(java.lang.Object , 0))) && if(boolean glassbox.inspector.monitor.resource.RemoteCallMonitor.ajc$if_12())) && persingleton(glassbox.inspector.monitor. resource.RemoteCallMonitor)) when matching shadow method-call(boolean org.apache.crimson.parser.ContentModel.empty()) when weaving type org.apache.crimson.parser.ContentModel when weaving classes when weaving abort trouble in: final class org.apache.crimson.parser.ContentModel extends java.lang.Object: public char type public Object content public org.apache.crimson.parser.ContentModel next private org.apache.crimson.parser.SimpleHashtable cache public void <init>(String): ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 116) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void org.apache.crimson.parser.ContentModel.<init> (java.lang.String)) | ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 110) | NEW org.apache.crimson.parser.SimpleHashtable | DUP | constructor-call(void org.apache.crimson.parser.SimpleHashtable.<init>()) | | INVOKESPECIAL org.apache.crimson.parser.SimpleHashtable.<init> ()V | constructor-call(void org.apache.crimson.parser.SimpleHashtable.<init>()) | PUTFIELD org.apache.crimson.parser.ContentModel.cache Lorg/apache/crimson/parser/SimpleHashtable; | ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 117) | ICONST_0 | PUTFIELD org.apache.crimson.parser.ContentModel.type C | ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 118) | ALOAD_1 // java.lang.String element | PUTFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; | RETURN (line 119) constructor-execution(void org.apache.crimson.parser.ContentModel.<init> (java.lang.String)) end public void <init>(String) public void <init>(char, org.apache.crimson.parser.ContentModel): ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 125) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void org.apache.crimson.parser.ContentModel.<init> (char, org.apache.crimson.parser.ContentModel)) | ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 110) | NEW org.apache.crimson.parser.SimpleHashtable | DUP | constructor-call(void org.apache.crimson.parser.SimpleHashtable.<init>()) | | INVOKESPECIAL org.apache.crimson.parser.SimpleHashtable.<init> ()V | constructor-call(void org.apache.crimson.parser.SimpleHashtable.<init>()) | PUTFIELD org.apache.crimson.parser.ContentModel.cache Lorg/apache/crimson/parser/SimpleHashtable; | ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 126) | ILOAD_1 // char type | PUTFIELD org.apache.crimson.parser.ContentModel.type C | ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 127) | ALOAD_2 // org.apache.crimson.parser.ContentModel content | PUTFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; | RETURN (line 128) constructor-execution(void org.apache.crimson.parser.ContentModel.<init> (char, org.apache.crimson.parser.ContentModel)) end public void <init>(char, org.apache.crimson.parser.ContentModel) public boolean empty(): method-execution(boolean org.apache.crimson.parser.ContentModel.empty()) | ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 137) | GETFIELD org.apache.crimson.parser.ContentModel.type C | LOOKUPSWITCH | 0: L1 | 42: L0 | 43: L1 | 44: L7 | 63: L0 | 124: L2 | default: L13 | L0: ICONST_1 (line 140) | IRETURN | L1: ICONST_0 (line 144) | IRETURN | L2: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 147) | GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; | INSTANCEOF org.apache.crimson.parser.ContentModel | IFEQ L3 | ALOAD_0 // org.apache.crimson.parser.ContentModel this | GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; | CHECKCAST org.apache.crimson.parser.ContentModel | method-call(boolean org.apache.crimson.parser.ContentModel.empty()) | | INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.empty ()Z | method-call(boolean org.apache.crimson.parser.ContentModel.empty()) | IFEQ L3 | ICONST_1 (line 149) | IRETURN | L3: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 151) | GETFIELD org.apache.crimson.parser.ContentModel.next Lorg/apache/crimson/parser/ContentModel; | ASTORE_1 | GOTO L6 | L4: ALOAD_1 // org.apache.crimson.parser.ContentModel m (line 154) | INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.empty ()Z | IFEQ L5 | ICONST_1 (line 155) | IRETURN | L5: ALOAD_1 // org.apache.crimson.parser.ContentModel m (line 153) | GETFIELD org.apache.crimson.parser.ContentModel.next Lorg/apache/crimson/parser/ContentModel; | ASTORE_1 // org.apache.crimson.parser.ContentModel m | L6: ALOAD_1 // org.apache.crimson.parser.ContentModel m (line 152) | IFNONNULL L4 | ICONST_0 (line 157) | IRETURN | L7: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 160) | GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; | INSTANCEOF org.apache.crimson.parser.ContentModel | IFEQ L8 | ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 161) | GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; | CHECKCAST org.apache.crimson.parser.ContentModel | INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.empty ()Z | IFNE L9 | ICONST_0 (line 162) | IRETURN | L8: ICONST_0 (line 165) | IRETURN | L9: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 167) | GETFIELD org.apache.crimson.parser.ContentModel.next Lorg/apache/crimson/parser/ContentModel; | ASTORE_2 | GOTO L12 | L10: ALOAD_2 // org.apache.crimson.parser.ContentModel m (line 170) | INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.empty ()Z | IFNE L11 | ICONST_0 (line 171) | IRETURN | L11: ALOAD_2 // org.apache.crimson.parser.ContentModel m (line 169) | GETFIELD org.apache.crimson.parser.ContentModel.next Lorg/apache/crimson/parser/ContentModel; | ASTORE_2 // org.apache.crimson.parser.ContentModel m | L12: ALOAD_2 // org.apache.crimson.parser.ContentModel m (line 168) | IFNONNULL L10 | ICONST_1 (line 173) | IRETURN | L13: NEW java.lang.InternalError (line 176) | DUP | INVOKESPECIAL java.lang.InternalError.<init> ()V | ATHROW method-execution(boolean org.apache.crimson.parser.ContentModel.empty()) end public boolean empty() public boolean first(String): ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 186) GETFIELD org.apache.crimson.parser.ContentModel.cache Lorg/apache/crimson/parser/SimpleHashtable; ALOAD_1 // java.lang.String token INVOKEVIRTUAL org.apache.crimson.parser.SimpleHashtable.get (Ljava/lang/String;)Ljava/lang/Object; CHECKCAST java.lang.Boolean ASTORE_2 ALOAD_2 // java.lang.Boolean b (line 189) IFNULL L0 ALOAD_2 // java.lang.Boolean b (line 190) INVOKEVIRTUAL java.lang.Boolean.booleanValue ()Z IRETURN L0: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 193) GETFIELD org.apache.crimson.parser.ContentModel.type C LOOKUPSWITCH 0: L1 42: L1 43: L1 44: L5 63: L1 124: L12 default: L16 L1: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 198) GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; INSTANCEOF java.lang.String IFEQ L4 ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 199) GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; ALOAD_1 // java.lang.String token IF_ACMPNE L2 ICONST_1 GOTO L3 L2: ICONST_0 L3: ISTORE_3 GOTO L17 L4: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 201) GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; CHECKCAST org.apache.crimson.parser.ContentModel ALOAD_1 // java.lang.String token INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.first (Ljava/lang/String;)Z ISTORE_3 // boolean retval GOTO L17 (line 202) L5: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 205) GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; INSTANCEOF java.lang.String IFEQ L8 ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 206) GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; ALOAD_1 // java.lang.String token IF_ACMPNE L6 ICONST_1 GOTO L7 L6: ICONST_0 L7: ISTORE_3 // boolean retval GOTO L17 L8: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 207) GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; CHECKCAST org.apache.crimson.parser.ContentModel ALOAD_1 // java.lang.String token INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.first (Ljava/lang/String;)Z IFEQ L9 ICONST_1 (line 208) ISTORE_3 // boolean retval GOTO L17 L9: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 209) GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; CHECKCAST org.apache.crimson.parser.ContentModel INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.empty ()Z IFNE L10 ICONST_0 (line 210) ISTORE_3 // boolean retval GOTO L17 L10: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 211) GETFIELD org.apache.crimson.parser.ContentModel.next Lorg/apache/crimson/parser/ContentModel; IFNULL L11 ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 212) GETFIELD org.apache.crimson.parser.ContentModel.next Lorg/apache/crimson/parser/ContentModel; ALOAD_1 // java.lang.String token INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.first (Ljava/lang/String;)Z ISTORE_3 // boolean retval GOTO L17 L11: ICONST_0 (line 214) ISTORE_3 // boolean retval GOTO L17 (line 215) L12: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 218) GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; INSTANCEOF java.lang.String IFEQ L13 ALOAD_0 // org.apache.crimson.parser.ContentModel this GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; ALOAD_1 // java.lang.String token IF_ACMPNE L13 ICONST_1 (line 219) ISTORE_3 // boolean retval GOTO L17 L13: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 220) GETFIELD org.apache.crimson.parser.ContentModel.content Ljava/lang/Object; CHECKCAST org.apache.crimson.parser.ContentModel ALOAD_1 // java.lang.String token INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.first (Ljava/lang/String;)Z IFEQ L14 ICONST_1 (line 221) ISTORE_3 // boolean retval GOTO L17 L14: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 222) GETFIELD org.apache.crimson.parser.ContentModel.next Lorg/apache/crimson/parser/ContentModel; IFNULL L15 ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 223) GETFIELD org.apache.crimson.parser.ContentModel.next Lorg/apache/crimson/parser/ContentModel; ALOAD_1 // java.lang.String token INVOKEVIRTUAL org.apache.crimson.parser.ContentModel.first (Ljava/lang/String;)Z ISTORE_3 // boolean retval GOTO L17 L15: ICONST_0 (line 225) ISTORE_3 // boolean retval GOTO L17 (line 226) L16: NEW java.lang.InternalError (line 229) DUP INVOKESPECIAL java.lang.InternalError.<init> ()V ATHROW L17: ILOAD_3 // boolean retval (line 233) IFEQ L18 ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 234) GETFIELD org.apache.crimson.parser.ContentModel.cache Lorg/apache/crimson/parser/SimpleHashtable; ALOAD_1 // java.lang.String token GETSTATIC java.lang.Boolean.TRUE Ljava/lang/Boolean; INVOKEVIRTUAL org.apache.crimson.parser.SimpleHashtable.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Obj ect; POP GOTO L19 L18: ALOAD_0 // org.apache.crimson.parser.ContentModel this (line 236) GETFIELD org.apache.crimson.parser.ContentModel.cache Lorg/apache/crimson/parser/SimpleHashtable; ALOAD_1 // java.lang.String token GETSTATIC java.lang.Boolean.FALSE Ljava/lang/Boolean; INVOKEVIRTUAL org.apache.crimson.parser.SimpleHashtable.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Obj ect; POP L19: ILOAD_3 // boolean retval (line 238) IRETURN end public boolean first(String) end final class org.apache.crimson.parser.ContentModel""",2005-11-14 11:17:02,fabf159,['loadtime/src/org/aspectj/weaver/loadtime/definition/fabf159 DocumentParser.java']
116305,Bug 116305 Unexpected error: can't determine implemented interfaces of missing type,"""I have reusable library code that imports a type (a JAX-RPC Call in this case) for use in two ways: 1) matching in a method signature. 2) casting and use in an advice body It used to work properly when I used it in a load-time weaving configuration without the (Call) type being available on the classpath (I think it broke in the last week). However, I am now getting an abort error """"can't determine implemented interfaces of missing type"""" when weaving this aspect into another type when the imported (Call) type isnt visible in a classloader. I tried changing the code to remove the import and to use a fully qualified name in the pointcut (and a reflective invocation in the advice body). However, this still fails in the same way. These pointcuts are presumably causing the error: public abstract aspect AbstractRequestMonitor { protected pointcut scope() : within(*);//if(true); protected pointcut monitorEnabled() : isMonitorEnabled() && scope(); protected abstract pointcut isMonitorEnabled(); ... } public abstract aspect AbstractResourceMonitor extends AbstractRequestMonitor { ... } public aspect RemoteCallMonitor extends AbstractResourceMonitor { protected pointcut isMonitorEnabled() : if(aspectOf().isEnabled()); public pointcut jaxRpcClientCall(Object wsCallObj) : call(public * javax.xml.rpc.Call.invoke*(..)) && target(wsCallObj); Object around(final Object wsCallObj) : jaxRpcClientCall(wsCallObj) && monitorEnabled() { ... Here is the output: org.aspectj.bridge.AbortException: can't determine implemented interfaces of missing type javax.xml.rpc.Call when matching pointcut ((((within(*) && call(public * javax.xml.rpc.Call.invoke* (..))) && target(BindingTypePattern(java.lang.Object, 0))) && if(boolean glassbox.inspector.monitor.resource.RemoteCallMonitor.ajc$if_12())) && persingleton(glassbox.inspector.monitor.resource.RemoteCallMonitor)) when matching shadow method-call(java.util.Locale java.util.Locale.getDefault()) when weaving type org.apache.struts.action.ActionServlet when weaving classes when weaving at org.aspectj.weaver.tools.WeavingAdaptor$WeavingAdaptorMessageHandler.handleMessa ge(WeavingAdaptor.java:364) at org.aspectj.bridge.MessageUtil.error(MessageUtil.java:81) at org.aspectj.weaver.MissingResolvedTypeWithKnownSignature.raiseCantFindType (MissingResolvedTypeWithKnownSignature.java:195) at org.aspectj.weaver.MissingResolvedTypeWithKnownSignature.getDeclaredInterfaces (MissingResolvedTypeWithKnownSignature.java:77) at org.aspectj.weaver.ResolvedType.getDirectSupertypes (ResolvedType.java:64) at org.aspectj.weaver.ReferenceType.isAssignableFrom (ReferenceType.java:312) at org.aspectj.weaver.ReferenceType.isAssignableFrom (ReferenceType.java:236) at org.aspectj.weaver.patterns.KindedPointcut.warnOnConfusingSig (KindedPointcut.java:151) at org.aspectj.weaver.patterns.KindedPointcut.matchInternal (KindedPointcut.java:108) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:145) at org.aspectj.weaver.patterns.AndPointcut.matchInternal (AndPointcut.java:57) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:145) at org.aspectj.weaver.patterns.AndPointcut.matchInternal (AndPointcut.java:55) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:145) at org.aspectj.weaver.patterns.AndPointcut.matchInternal (AndPointcut.java:55) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:145) at org.aspectj.weaver.patterns.AndPointcut.matchInternal (AndPointcut.java:55) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:145) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:64) at org.aspectj.weaver.Advice.match(Advice.java:109) at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:98) at org.aspectj.weaver.bcel.BcelClassWeaver.match (BcelClassWeaver.java:2098) at org.aspectj.weaver.bcel.BcelClassWeaver.matchInvokeInstruction (BcelClassWeaver.java:2085) at org.aspectj.weaver.bcel.BcelClassWeaver.match (BcelClassWeaver.java:1867) at org.aspectj.weaver.bcel.BcelClassWeaver.matchInit (BcelClassWeaver.java:1731) at org.aspectj.weaver.bcel.BcelClassWeaver.match (BcelClassWeaver.java:1660) at org.aspectj.weaver.bcel.BcelClassWeaver.weave (BcelClassWeaver.java:445) at org.aspectj.weaver.bcel.BcelClassWeaver.weave (BcelClassWeaver.java:101) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1531) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump (BcelWeaver.java:1485) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify (BcelWeaver.java:1266) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1088) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes (WeavingAdaptor.java:266) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass (WeavingAdaptor.java:198) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:67) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform (ClassPreProcessorAgentAdapter.java:52) ...""",2005-11-14 14:16:01,676aa08,['weaver/src/org/aspectj/weaver/patterns/676aa08 KindedPointcut.java']
116626,Bug 116626 Load-time weaving - exception from the weaver,"""Hi again :-) I'm trying to use loadtime weaving and getting an exception. Please look at the testcase: Java code: ========== public class Test<T> { Set<T> intsSet; public Test() { this.intsSet = new HashSet<T>(); } public <T> T[] getObjs(T[] a) { return intsSet.toArray(a); } public static void main(String[] args) { System.out.println(""""AAA :-)""""); new TTT().foo(); } } class TTT { public void foo() { Test<Object> mt = new Test<Object>(); Object[] arr = mt.getObjs(new Object[]{}); } } Aspect: ======= public privileged aspect TestAspect { pointcut TestToArray(Test mt) : target(mt) && !within(TestAspect); Object[] around(Test mt, Object[] objs) : TestToArray(mt) && args(objs) && execution(Object[] com.mprv.secsph.Test.getObjs(Object[])) { objs = proceed(mt, objs); System.out.println(""""GO Aspects!""""); return objs; } } aop.xml ======= <aspectj> <aspects> <aspect name=""""com.mprv.secsph.TestAspect""""/> </aspects> <weaver options=""""-verbose -XlazyTjp -showWeaveInfo""""> <include within=""""com.mprv.*""""/> </weaver> </aspectj> Program output: ============== AAA :-) info weaving 'com/mprv/secsph/TestAspect' java.lang.NullPointerException at org.aspectj.weaver.tools.WeavingAdaptor$WeavingClassFileProvider.getBytes (WeavingAdaptor.java:390) at org.aspectj.weaver.tools.WeavingAdaptor.getAtAspectJAspectBytes (WeavingAdaptor.java:259) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass (WeavingAdaptor.java:181) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:66) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform (ClassPreProcessorAgentAdapter.java:52) at sun.instrument.TransformerManager.transform (TransformerManager.java:122) at sun.instrument.InstrumentationImpl.transform (InstrumentationImpl.java:155) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:620) at java.security.SecureClassLoader.defineClass (SecureClassLoader.java:124) at java.net.URLClassLoader.defineClass(URLClassLoader.java:260) at java.net.URLClassLoader.access$100(URLClassLoader.java:56) at java.net.URLClassLoader$1.run(URLClassLoader.java:195) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:188) at java.lang.ClassLoader.loadClass(ClassLoader.java:306) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268) at java.lang.ClassLoader.loadClass(ClassLoader.java:251) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) at com.mprv.secsph.Test.getObjs(Test.java:1) at com.mprv.secsph.TTT.foo(Test.java:34) at com.mprv.secsph.Test.main(Test.java:27) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at com.intellij.rt.execution.application.AppMain.main(AppMain.java:86) GO Aspects! ==== This exception doesn't happen all the time ... but if you will try a few times, you will probably get it. May you can understand what is the problem event without running the test case. Anyway, I took a look at your code, and have a guess (but it's only the guess) - My aspect is in the application classpath. Actually it's in the same package, so may be you are trying to weave the aspect with itself somehow ... Thanks! Misha.""",2005-11-16 03:54:11,c760895,"['tests/bugs150/pr116626/com/foo/bar/c760895 Test.java', 'tests/src/org/aspectj/systemtest/ajc150/c760895 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/tools/c760895 WeavingAdaptor.java']"
116755,Bug 116755 PointcutParser is not configurable,"""I'm testing the reflection and weaver tools APIs. When I using following code: PointcutParser parse = new PointcutParser(); String expr = """"call(public * main.hello(..)""""; PointcutExpression pex = parse.parsePointcutExpression(expr); Whenever I use a full qualified class name in pointcut expression, an exception is throwed out: java.lang.IllegalArgumentException: warning no match for this type name: obj [Xlint:invalidAbsoluteTypeName] I try to turn off this Lint exception. But it seems I must access to world field of PointcutParser. This is inconvenient because world field is not exposed by PointcutParser. The existing PointcutParser interface implicitly creates a World and does not allow any configuration including classpath or lint. But developers may need this kind of control.""",2005-11-16 20:19:54,522911e,"['tests/java5/ataspectj/annotationGen/522911e RuntimePointcuts.java', 'tests/java5/reflection/522911e ReflectOnAjcCompiledPointcuts.java', 'tests/src/org/aspectj/systemtest/ajc150/522911e Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/522911e BcelWorld.java', 'weaver/src/org/aspectj/weaver/internal/tools/522911e TypePatternMatcherImpl.java', 'weaver/src/org/aspectj/weaver/ltw/522911e LTWWorld.java', 'weaver/src/org/aspectj/weaver/ltw/522911e LTWeaver.java', 'weaver/src/org/aspectj/weaver/reflect/522911e AnnotationFinder.java', 'weaver/src/org/aspectj/weaver/reflect/522911e ReflectionBasedReferenceTypeDelegate.java', 'weaver/src/org/aspectj/weaver/reflect/522911e ReflectionBasedReferenceTypeDelegateFactory.java', 'weaver/src/org/aspectj/weaver/reflect/522911e ReflectionBasedResolvedMemberImpl.java', 'weaver/src/org/aspectj/weaver/reflect/522911e ReflectionShadow.java', 'weaver/src/org/aspectj/weaver/reflect/522911e ReflectionVar.java', 'weaver/src/org/aspectj/weaver/reflect/522911e ReflectionWorld.java', 'weaver/src/org/aspectj/weaver/tools/522911e PointcutParser.java', 'weaver/src/org/aspectj/weaver/tools/522911e TypePatternMatcher.java', 'weaver/testsrc/org/aspectj/weaver/tools/522911e PointcutParserTest.java', 'weaver/testsrc/org/aspectj/weaver/tools/522911e ToolsTests.java', 'weaver/testsrc/org/aspectj/weaver/tools/522911e TypePatternMatcherTest.java', 'weaver5/java5-src/org/aspectj/weaver/reflect/522911e Java15AnnotationFinder.java', 'weaver5/java5-src/org/aspectj/weaver/reflect/522911e Java15ReflectionBasedReferenceTypeDelegate.java']"
116899,Bug 116899 Using -verbose in aop.xml does not yield info messages,"""The interpretation of the -verbose option for LTW is not consistent with other uses in AspectJ e.g. ajc, iajc. It should allow info as well as warining and error messages to be output. The option parser and testcase need to be updated.""",2005-11-17 12:31:22,76d7e83,"['loadtime/src/org/aspectj/weaver/loadtime/76d7e83 Options.java', 'tests/java5/ataspectj/ataspectj/ltwlog/76d7e83 Main.java', 'tests/java5/ataspectj/ataspectj/ltwlog/76d7e83 MessageHolder.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/76d7e83 AtAjLTWTests.java']"
116949,Bug 116949 [waitingOnAJDTdrop]Exception thrown from AspectJ compiler,"""java.lang.ClassCastException at org.aspectj.weaver.bcel.BcelClassWeaver.checkForOverride (BcelClassWeaver.java:607) at org.aspectj.weaver.bcel.BcelClassWeaver.calculateAnyRequiredBridgeMethods (BcelClassWeaver.java:676) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1537) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1485) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1266) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1088) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave (AjCompilerAdapter.java:300) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling (AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspect j_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile (Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation (AjBuildManager.java:809) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:254) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild (AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:191) trouble in: public class ts.simul.client.AbstractClient$OptionSetter extends ts.util.CmdLineProgram$OptionSetterBase: final ts.simul.client.AbstractClient this$0 private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0 public void <init>(ts.simul.client.AbstractClient) org.aspectj.weaver.MethodDeclarationLineNumber: 59:1411 : ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this (line 60) ALOAD_1 PUTFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 Lts/simul/client/AbstractClient; ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this (line 59) ALOAD_1 INVOKESPECIAL ts.util.CmdLineProgram$OptionSetterBase.<init> (Lts/util/CmdLineProgram;)V constructor-execution(void ts.simul.client.AbstractClient$OptionSetter.<init> (ts.simul.client.AbstractClient)) | RETURN constructor-execution(void ts.simul.client.AbstractClient$OptionSetter.<init> (ts.simul.client.AbstractClient)) end public void <init>(ts.simul.client.AbstractClient) public boolean setOption_file(String) throws ts.util.IllegalProgramArgumentException org.aspectj.weaver.MethodDeclarationLineNumber: 62:1469 : method-execution(boolean ts.simul.client.AbstractClient$OptionSetter.setOption_file(java.lang.String)) | ALOAD_1 // java.lang.String optParam (line 65) | method-call(int java.lang.String.length()) | | INVOKEVIRTUAL java.lang.String.length ()I | method-call(int java.lang.String.length()) | IFLE L1 | ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this (line 66) | GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 Lts/simul/client/AbstractClient; | ALOAD_1 // java.lang.String optParam | PUTFIELD ts.simul.client.AbstractClient.fileName Ljava/lang/String; | NEW java.io.File (line 67) | DUP | ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this | GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 Lts/simul/client/AbstractClient; | GETFIELD ts.simul.client.AbstractClient.fileName Ljava/lang/String; | constructor-call(void java.io.File.<init>(java.lang.String)) | | INVOKESPECIAL java.io.File.<init> (Ljava/lang/String;)V | constructor-call(void java.io.File.<init>(java.lang.String)) | ASTORE_2 | ALOAD_2 // java.io.File file (line 68) | method-call(boolean java.io.File.exists()) | | INVOKEVIRTUAL java.io.File.exists ()Z | method-call(boolean java.io.File.exists()) | IFNE L0 | NEW ts.util.IllegalProgramArgumentException (line 69) | DUP | NEW java.lang.StringBuilder | DUP | LDC """"Cannot find file: ["""" | constructor-call(void java.lang.StringBuilder.<init>(java.lang.String)) | | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | constructor-call(void java.lang.StringBuilder.<init>(java.lang.String)) | ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this | GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 Lts/simul/client/AbstractClient; | GETFIELD ts.simul.client.AbstractClient.fileName Ljava/lang/String; | method-call(java.lang.StringBuilder java.lang.StringBuilder.append (java.lang.String)) | | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | method-call(java.lang.StringBuilder java.lang.StringBuilder.append (java.lang.String)) | LDC """"]"""" | method-call(java.lang.StringBuilder java.lang.StringBuilder.append (java.lang.String)) | | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | method-call(java.lang.StringBuilder java.lang.StringBuilder.append (java.lang.String)) | method-call(java.lang.String java.lang.StringBuilder.toString()) | | INVOKEVIRTUAL java.lang.StringBuilder.toString () Ljava/lang/String; | method-call(java.lang.String java.lang.StringBuilder.toString()) | constructor-call(void ts.util.IllegalProgramArgumentException.<init> (java.lang.String)) | | INVOKESPECIAL ts.util.IllegalProgramArgumentException.<init> (Ljava/lang/String;)V | constructor-call(void ts.util.IllegalProgramArgumentException.<init> (java.lang.String)) | ATHROW | L0: ICONST_1 (line 70) | IRETURN | L1: ICONST_0 (line 73) | IRETURN method-execution(boolean ts.simul.client.AbstractClient$OptionSetter.setOption_file(java.lang.String)) end public boolean setOption_file(String) throws ts.util.IllegalProgramArgumentException public boolean setOption_class(String) throws ts.util.IllegalProgramArgumentException org.aspectj.weaver.MethodDeclarationLineNumber: 76:1971 : method-execution(boolean ts.simul.client.AbstractClient$OptionSetter.setOption_class(java.lang.String)) | ALOAD_1 // java.lang.String optParam (line 79) | method-call(int java.lang.String.length()) | | INVOKEVIRTUAL java.lang.String.length ()I | method-call(int java.lang.String.length()) | IFLE L1 | ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this (line 80) | GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 Lts/simul/client/AbstractClient; | ALOAD_1 // java.lang.String optParam | PUTFIELD ts.simul.client.AbstractClient.className Ljava/lang/String; | catch ts.simul.SimulationException -> E0 | | ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this (line 82) | | GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 Lts/simul/client/AbstractClient; | | ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this | | GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 Lts/simul/client/AbstractClient; | | GETFIELD ts.simul.client.AbstractClient.className Ljava/lang/String; | | method-call(java.lang.Class ts.simul.SceneFactory.getSceneClass (java.lang.String)) | | | INVOKESTATIC ts.simul.SceneFactory.getSceneClass (Ljava/lang/String;)Ljava/lang/Class; | | method-call(java.lang.Class ts.simul.SceneFactory.getSceneClass (java.lang.String)) | | PUTFIELD ts.simul.client.AbstractClient.sceneClass Ljava/lang/Class; | | ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this (line 83) | | GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 Lts/simul/client/AbstractClient; | | method-call(void ts.simul.client.AbstractClient.setBeanInfoSearchPath()) | | | INVOKESTATIC ts.simul.Architecture.aspectOf () Lts/simul/Architecture; | | | GETSTATIC ts.simul.client.AbstractClient$OptionSetter.ajc$tjp_0 Lorg/aspectj/lang/JoinPoint$StaticPart; | | | INVOKEVIRTUAL ts.simul.Architecture.ajc$before$ts_simul_Architecture$1$ae285a4d (Lorg/aspectj/lang/JoinPoint$StaticPart;)V | | | INVOKEVIRTUAL ts.simul.client.AbstractClient.setBeanInfoSearchPath ()V | | method-call(void ts.simul.client.AbstractClient.setBeanInfoSearchPath()) | | GOTO L0 | catch ts.simul.SimulationException -> E0 | E0: ASTORE_2 (line 85) | NEW ts.util.IllegalProgramArgumentException (line 86) | DUP | ALOAD_2 // ts.simul.SimulationException e | method-call(java.lang.String ts.simul.SimulationException.getMessage()) | | INVOKEVIRTUAL ts.simul.SimulationException.getMessage () Ljava/lang/String; | method-call(java.lang.String ts.simul.SimulationException.getMessage()) | constructor-call(void ts.util.IllegalProgramArgumentException.<init> (java.lang.String)) | | INVOKESPECIAL ts.util.IllegalProgramArgumentException.<init> (Ljava/lang/String;)V | constructor-call(void ts.util.IllegalProgramArgumentException.<init> (java.lang.String)) | ATHROW | L0: ICONST_1 (line 88) | IRETURN | L1: ICONST_0 (line 91) | IRETURN method-execution(boolean ts.simul.client.AbstractClient$OptionSetter.setOption_class(java.lang.String)) end public boolean setOption_class(String) throws ts.util.IllegalProgramArgumentException public boolean setOption_name(String) org.aspectj.weaver.MethodDeclarationLineNumber: 94:2593 : method-execution(boolean ts.simul.client.AbstractClient$OptionSetter.setOption_name(java.lang.String)) | ALOAD_0 // ts.simul.client.AbstractClient$OptionSetter this (line 96) | GETFIELD ts.simul.client.AbstractClient$OptionSetter.this$0 Lts/simul/client/AbstractClient; | ALOAD_1 // java.lang.String optParam | PUTFIELD ts.simul.client.AbstractClient.sceneName Ljava/lang/String; | ICONST_1 (line 97) | IRETURN method-execution(boolean ts.simul.client.AbstractClient$OptionSetter.setOption_name(java.lang.String)) end public boolean setOption_name(String) public boolean setOption_actors(String) org.aspectj.weaver.MethodDeclarationLineNumber: 100:2739 : method-execution(boolean ts.simul.client.AbstractClient$OptionSetter.setOption_actors(java.lang.String)) | catch java.lang.NumberFormatException -> E0 | | ALOAD_1 // java.lang.String optParam (line 103) | | method-call(int java.lang.Integer.parseInt(java.lang.String)) | | | INVOKESTATIC java.lang.Integer.parseInt (Ljava/lang/String;) I | | method-call(int java.lang.Integer.parseInt(java.lang.String)) | | ISTORE_2 | | GOTO L0 | catch java.lang.NumberFormatException -> E0 | E0: ASTORE_2 // int n (line 105) | ICONST_0 (line 106) | IRETURN | L0: ICONST_1 (line 108) | IRETURN method-execution(boolean ts.simul.client.AbstractClient$OptionSetter.setOption_actors(java.lang.String)) end public boolean setOption_actors(String) end public class ts.simul.client.AbstractClient$OptionSetter when weaving type ts.simul.client.AbstractClient$OptionSetter when weaving classes when weaving when incrementally building BuildConfig [c:\Projects\eclipse\.metadata\.plugins\org.eclipse.ajdt.core\TS.generated.lst] #Files=79""",2005-11-17 17:09:48,dd9a9b2,['weaver/src/org/aspectj/weaver/bcel/dd9a9b2 BcelClassWeaver.java']
117189,Bug 117189 Contribution: reduce overhead when no aspects define,This patch to the ClassLoaderWeavingAdaptor adds two optimizations when enabled is false for the adaptor: it immediately returns false for accept and it also avoids the overhead of constructing a weaver or world. It also contains commented out code that was letting me improve performance by loading reflective proxies instead of creating BCEL objects for a resolution loader (which is currently broken since reflective proxies now require a ReflectionWorld...),2005-11-19 13:05:59,a5ac5af,"['loadtime/src/org/aspectj/weaver/loadtime/a5ac5af ClassLoaderWeavingAdaptor.java', 'weaver/src/org/aspectj/weaver/tools/a5ac5af WeavingAdaptor.java']"
117209,"""Bug 117209 Runtime error - Stack size too large, Bug#69706 related.""",,2005-11-20 01:07:23,551b9ca,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/551b9ca AjBuildConfig.java', 'tests/multiIncremental/pr117209/base/src/551b9ca Aspect.java', 'tests/multiIncremental/pr117209/base/src/551b9ca Broken.java', 'tests/multiIncremental/pr117209/base/src/551b9ca DefaultInterfaceImplementationRecipe.java', 'tests/multiIncremental/pr117209/base/src/551b9ca MyClass_ch16.java', 'tests/multiIncremental/pr117209/base/src/551b9ca MyInterface_ch16.java', 'tests/multiIncremental/pr117209/base/src/551b9ca P.java', 'tests/src/org/aspectj/systemtest/incremental/tools/551b9ca AjdeInteractionTestbed.java', 'tests/src/org/aspectj/systemtest/incremental/tools/551b9ca MultiProjectIncrementalTests.java']"
117614,Bug 117614 ajc crashes on common-logging-1.0.4.jar,"""--- Dump Properties --- Dump file: ajcore.20051122.152749.326.txt Dump reason: org.aspectj.weaver.BCException Dump on exception: true Dump at exit condition: abort ---- Exception Information --- org.aspectj.weaver.BCException: bad resolve of void org.apache.log4j.Category.log(java.lang.String, org.apache.log4j.Level, java.lang.Object, java.lang.Throwable) at org.aspectj.weaver.World.getModifiers(World.java:216) at org.aspectj.weaver.Member.getModifiers(Member.java:406) at org.aspectj.weaver.patterns.KindedPointcut.warnOnConfusingSig(KindedPointcut.java:109) at org.aspectj.weaver.patterns.KindedPointcut.match(KindedPointcut.java:69) at org.aspectj.weaver.patterns.OrPointcut.match(OrPointcut.java:44) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:43) at org.aspectj.weaver.patterns.AndPointcut.match(AndPointcut.java:43) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:62) at org.aspectj.weaver.Advice.match(Advice.java:91) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:1126) at org.aspectj.weaver.bcel.BcelClassWeaver.matchInvokeInstruction(BcelClassWeaver.java:1115) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:987) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:827) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:348) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:83) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:742) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:707) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:634) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:577) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:243) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:118) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:383) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:680) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:168) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:109) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) at org.aspectj.tools.ajc.Main.run(Main.java:291)""",2005-11-22 20:57:51,6eb77c5,"['tests/src/org/aspectj/systemtest/ajc150/6eb77c5 GenericsTests.java', 'weaver/src/org/aspectj/weaver/6eb77c5 Lint.java', 'weaver/src/org/aspectj/weaver/6eb77c5 MissingResolvedTypeWithKnownSignature.java', 'weaver/src/org/aspectj/weaver/6eb77c5 World.java', 'weaver/src/org/aspectj/weaver/bcel/6eb77c5 BcelAdvice.java', 'weaver/src/org/aspectj/weaver/bcel/6eb77c5 BcelShadow.java', 'weaver/src/org/aspectj/weaver/patterns/6eb77c5 ArgsAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/6eb77c5 ArgsPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/6eb77c5 KindedPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/6eb77c5 WithinAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/6eb77c5 WithinPointcut.java']"
117681,Bug 117681 VerifyError when using annotations to define inter-type annotation,"""Using Sun JDK1.5.0_04 Audit.java public interface Audit { public String getLastUpdatedBy(); public void setLastUpdatedBy(String un); } AuditImpl.java public class AuditImpl implements Audit { private String lastUpdatedBy; public String getLastUpdatedBy() { return lastUpdatedBy; } public void setLastUpdatedBy(String un) { lastUpdatedBy = un; } } TestAspect.java import org.aspectj.lang.annotation.*; Test.java @Aspect public class TestAspect { @DeclareParents(""""Test"""") public static Audit introduced = new AuditImpl(); } public class Test { public static void main(String[] args) { Test t = new Test(); Audit a = (Audit)t; a.setLastUpdatedBy(""""username""""); System.out.println(""""Username =""""+a.getLastUpdatedBy()); } } files.lst Audit.java AuditImpl.java TestAspect.java Test.java Compiled using the following command d:\aspectj1.5\bin\ajc -classpath """"d:\aspectj1.5\lib\aspectjrt.jar"""" -argfi le files.lst -1.5 d:\aspectj1.5\bin\aj5 Test Exception in thread """"main"""" java.lang.VerifyError: (class: Test, method: setLastUpdatedBy signature: (Ljava/lang/String;)V) Incompatible argument to function d:\aspectj1.5\bin\aj5 -noverify Test Username=""",2005-11-23 04:27:13,11ab99f,"['tests/bugs150/pr117681/11ab99f Audit.java', 'tests/bugs150/pr117681/11ab99f AuditImpl.java', 'tests/bugs150/pr117681/11ab99f MoodIndicator.java', 'tests/bugs150/pr117681/11ab99f Test.java', 'tests/bugs150/pr117681/11ab99f TestAspect.java', 'tests/src/org/aspectj/systemtest/ajc150/11ab99f Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/11ab99f BcelTypeMunger.java']"
118149,Bug 118149 AspectJ compiler crahses possibly due to poincut context binding issue,"""I am using the latest version of AJDT (1.3.0.20051125115230). The reason is not entirely clear, but I have a pointcut of form public pointcut realPC(Common entity) : pc1(entity) || pc2(entity); Just a few hours back, I used to get an error regarding incompatible binding of entity in the || poincut. When I got that error, Eclipse was frozen to the point that clicking """"Details"""" on exception report made Eclipse hang and had to kill it using the task manager. So I modified the program to avoid || expression in pointcut, after unsuccessfully trying various ways to express the pointcut. It was an ugly thing to do, since I essentially had to duplicate the advice for both pointcuts. Anyway... Then I tried to reproduce on a smaller project to provide a minimal program to reproduced the bug. However, it worked just fine on that project (and I couldn't see any material difference in the pointcuts or the classes involved). Encouraged by this, I retried the or-ed version of the pointcut on the real project. This time, I get the crash and can acccess the stack trace. java.lang.NullPointerException at org.aspectj.weaver.ast.Test.makeInstanceof(Test.java:78) at org.aspectj.weaver.patterns.IfPointcut.findResidueInternal(IfPointcut.java:181) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:97) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:97) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.OrPointcut.findResidueInternal(OrPointcut.java:99) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.OrPointcut.findResidueInternal(OrPointcut.java:99) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.bcel.BcelAdvice.specializeOn(BcelAdvice.java:133) at org.aspectj.weaver.bcel.BcelShadow.prepareForMungers(BcelShadow.java:308) at org.aspectj.weaver.Shadow.implement(Shadow.java:404) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2146) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:467) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:102) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1534) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1485) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1266) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1088) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:809) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:230) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:156) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in: public abstract class com.aspectivity.mgmt.web.entity.ManageEntity extends com.aspectivity.mgmt.web.TemplatePage: public void <init>(com.aspectivity.mgmt.model.Entity, boolean, String, String, String, String, String) org.aspectj.weaver.MethodDeclarationLineNumber: 19:557 : ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 19) INVOKESPECIAL com.aspectivity.mgmt.web.TemplatePage.<init> ()V ALOAD_1 ASTORE 9 ILOAD_2 ISTORE 10 ALOAD_3 ASTORE 11 ALOAD 4 ASTORE 12 ALOAD 5 ASTORE 13 ALOAD 6 ASTORE 14 ALOAD 7 ASTORE 15 constructor-execution(void com.aspectivity.mgmt.web.entity.ManageEntity.<init>(com.aspectivity.mgmt.model.Entity, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)) | ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 23) | ALOAD_3 // java.lang.String pageTitle | INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.setPageTitle (Ljava/lang/String;)V | ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 25) | ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this | ALOAD_1 // com.aspectivity.mgmt.model.Entity entity | ALOAD 5 // java.lang.String addEntityLinkText | INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.getEntitiesListView (Lcom/aspectivity/mgmt/model/Entity;Ljava/lang/String;)Lwicket/markup/html/list/ListView; | INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.add (Lwicket/Component;)Lwicket/MarkupContainer; | POP | ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 27) | LDC """"addEntityLink"""" | ACONST_NULL | INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.getEditLink (Ljava/lang/String;Lcom/aspectivity/mgmt/model/Entity;)Lwicket/markup/html/link/Link; | ASTORE 8 | ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 28) | ALOAD 8 // wicket.markup.html.link.Link addEntityLink | INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.add (Lwicket/Component;)Lwicket/MarkupContainer; | POP | ALOAD 8 // wicket.markup.html.link.Link addEntityLink (line 29) | NEW wicket.markup.html.basic.Label | DUP | LDC """"addEntityLinkText"""" | ALOAD 5 // java.lang.String addEntityLinkText | INVOKESPECIAL wicket.markup.html.basic.Label.<init> (Ljava/lang/String;Ljava/lang/String;)V | INVOKEVIRTUAL wicket.markup.html.link.Link.add (Lwicket/Component;)Lwicket/MarkupContainer; | POP | ILOAD_2 // boolean isInitialView (line 31) | IFEQ L0 | ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 32) | NEW wicket.markup.html.basic.Label | DUP | LDC """"editEntity"""" | LDC """""""" | INVOKESPECIAL wicket.markup.html.basic.Label.<init> (Ljava/lang/String;Ljava/lang/String;)V | INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.add (Lwicket/Component;)Lwicket/MarkupContainer; | POP | GOTO L1 | L0: ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 34) | ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this | ALOAD_1 // com.aspectivity.mgmt.model.Entity entity | ILOAD_2 // boolean isInitialView | ALOAD 6 // java.lang.String addPanelTtile | ALOAD 7 // java.lang.String editPanelTitle | INVOKESPECIAL com.aspectivity.mgmt.web.entity.ManageEntity.getEditPanel (Lcom/aspectivity/mgmt/model/Entity;ZLjava/lang/String;Ljava/lang/String;)Lwicket/Component; | INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.add (Lwicket/Component;)Lwicket/MarkupContainer; | POP | L1: ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 37) | NEW wicket.markup.html.basic.Label | DUP | LDC """"listViewTitle"""" | ALOAD 4 // java.lang.String listViewTitle | INVOKESPECIAL wicket.markup.html.basic.Label.<init> (Ljava/lang/String;Ljava/lang/String;)V | INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.add (Lwicket/Component;)Lwicket/MarkupContainer; | POP | RETURN (line 38) constructor-execution(void com.aspectivity.mgmt.web.entity.ManageEntity.<init>(com.aspectivity.mgmt.model.Entity, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)) end public void <init>(com.aspectivity.mgmt.model.Entity, boolean, String, String, String, String, String) protected abstract com.aspectivity.mgmt.model.Entity createNewEntity() org.aspectj.weaver.MethodDeclarationLineNumber: 40:1233 ; protected abstract void removeEntity(com.aspectivity.mgmt.model.Entity) org.aspectj.weaver.MethodDeclarationLineNumber: 41:1278 ; protected abstract java.util.List getAllEntities() org.aspectj.weaver.MethodDeclarationLineNumber: 42:1351 ; protected abstract com.aspectivity.mgmt.web.entity.ManageEntity createNewPage(com.aspectivity.mgmt.model.Entity, boolean) org.aspectj.weaver.MethodDeclarationLineNumber: 44:1406 ; protected abstract wicket.Component createEditPanel(String, String, com.aspectivity.mgmt.model.Entity) org.aspectj.weaver.MethodDeclarationLineNumber: 45:1490 ; protected wicket.markup.html.list.ListView getEntitiesListView(com.aspectivity.mgmt.model.Entity, String) org.aspectj.weaver.MethodDeclarationLineNumber: 47:1581 : NEW com.aspectivity.mgmt.web.entity.EntityListView (line 48) DUP ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this LDC """"entityList"""" ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.getAllEntities ()Ljava/util/List; ALOAD_1 // com.aspectivity.mgmt.model.Entity entity INVOKESPECIAL com.aspectivity.mgmt.web.entity.EntityListView.<init> (Lcom/aspectivity/mgmt/web/entity/ManageEntity;Ljava/lang/String;Ljava/util/List;Lcom/aspectivity/mgmt/model/Entity;)V ARETURN end protected wicket.markup.html.list.ListView getEntitiesListView(com.aspectivity.mgmt.model.Entity, String) protected wicket.markup.html.link.Link getEditLink(String, com.aspectivity.mgmt.model.Entity) org.aspectj.weaver.MethodDeclarationLineNumber: 51:1743 : NEW wicket.markup.html.link.PageLink (line 52) DUP ALOAD_1 // java.lang.String name NEW com.aspectivity.mgmt.web.entity.ManageEntity$1 DUP ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this ALOAD_2 // com.aspectivity.mgmt.model.Entity entity INVOKESPECIAL com.aspectivity.mgmt.web.entity.ManageEntity$1.<init> (Lcom/aspectivity/mgmt/web/entity/ManageEntity;Lcom/aspectivity/mgmt/model/Entity;)V INVOKESPECIAL wicket.markup.html.link.PageLink.<init> (Ljava/lang/String;Lwicket/markup/html/link/IPageLink;)V ARETURN end protected wicket.markup.html.link.Link getEditLink(String, com.aspectivity.mgmt.model.Entity) protected wicket.markup.html.link.Link getRemoveLink(String, wicket.markup.html.list.ListItem) org.aspectj.weaver.MethodDeclarationLineNumber: 63:2013 : NEW com.aspectivity.mgmt.web.entity.ManageEntity$2 (line 64) DUP ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this ALOAD_1 // java.lang.String id ALOAD_2 // wicket.markup.html.list.ListItem item INVOKESPECIAL com.aspectivity.mgmt.web.entity.ManageEntity$2.<init> (Lcom/aspectivity/mgmt/web/entity/ManageEntity;Ljava/lang/String;Lwicket/markup/html/list/ListItem;)V ARETURN end protected wicket.markup.html.link.Link getRemoveLink(String, wicket.markup.html.list.ListItem) private wicket.Component getEditPanel(com.aspectivity.mgmt.model.Entity, boolean, String, String) org.aspectj.weaver.MethodDeclarationLineNumber: 75:2376 : ALOAD_1 // com.aspectivity.mgmt.model.Entity entity (line 77) IFNONNULL L0 ALOAD_3 // java.lang.String addPanelTtile GOTO L1 L0: ALOAD 4 // java.lang.String editPanelTitle L1: ASTORE 5 ALOAD_1 // com.aspectivity.mgmt.model.Entity entity (line 78) IFNONNULL L2 ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 79) INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.createNewEntity ()Lcom/aspectivity/mgmt/model/Entity; ASTORE_1 // com.aspectivity.mgmt.model.Entity entity L2: ALOAD_0 // com.aspectivity.mgmt.web.entity.ManageEntity this (line 81) LDC """"editEntity"""" ALOAD 5 // java.lang.String panelTitle ALOAD_1 // com.aspectivity.mgmt.model.Entity entity INVOKEVIRTUAL com.aspectivity.mgmt.web.entity.ManageEntity.createEditPanel (Ljava/lang/String;Ljava/lang/String;Lcom/aspectivity/mgmt/model/Entity;)Lwicket/Component; ARETURN end private wicket.Component getEditPanel(com.aspectivity.mgmt.model.Entity, boolean, String, String) end public abstract class com.aspectivity.mgmt.web.entity.ManageEntity when implementing on shadow constructor-execution(void com.aspectivity.mgmt.web.entity.ManageEntity.<init>(com.aspectivity.mgmt.model.Entity, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)) when weaving type com.aspectivity.mgmt.web.entity.ManageEntity when weaving classes when weaving when batch building BuildConfig[C:\work\projects\workspace\.metadata\.plugins\org.eclipse.ajdt.core\Aspectivity.generated.lst] #Files=87""",2005-11-27 01:01:55,d43e74b,"['tests/src/org/aspectj/systemtest/ajc150/d43e74b Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/patterns/d43e74b IfPointcut.java']"
118337,Bug 118337 Use weaver's ClassLoader not the usingClassLoader in 1.5 factory,"""In ReflectionBasedReferenceTypeDelegateFactory this line (44) of code is breaking my use of the weaver for looking up bootstrap classes (where the classloader is null and the AspectJ weaver isn't accessible to the bootstrap loader). The commented out code works just fine for me. Is there a real need to resolve the AspectJ runtime from a different classloader than the one that was already used to load this class from the AspectJ runtime? Class delegateClass = Class.forName(""""org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate"""",false,usingClassLoader);//ReflectionBasedReferenceTypeDelegate.class.getClassLoader());""",2005-11-28 20:24:36,d1a295c,['weaver/src/org/aspectj/weaver/reflect/d1a295c ReflectionBasedReferenceTypeDelegateFactory.java']
118698,Bug 118698 Not Allowing Access to Private ITD inside Nested Type,"""AspectJ is failing to allow access to a private ITD field from a type nested inside the aspect, which is inconsistent with Java's access rules. Here is the source. See also the follow up patch to tests that integrates it into the ajc150 test suite. public aspect prUnknown { private static interface Marker {} private class Foo implements Marker { public Foo() { bar = null; // allowed listener = null; // should also be allowed this.listener = null; // so should this Marker.this.listener = null; // and this ((Marker)this).listener = null; // and this } } private Object Marker.listener; private Object bar; }""",2005-11-30 15:18:31,6d94d09,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/6d94d09 InterTypeFieldBinding.java', 'tests/src/org/aspectj/systemtest/ajc150/6d94d09 Ajc150Tests.java']"
118715,Bug 118715 Load Time Weaving wipes out Xlint files if no Xlint values,"""In ClassLoaderWeavingAdaptor if weaverOption.lint is null, then a loaded Xlint properties file gets overwritten by the default Xlint properties. See attached patch to fix this problem.""",2005-11-30 16:53:40,1e1bbb3,"['loadtime/src/org/aspectj/weaver/loadtime/1e1bbb3 ClassLoaderWeavingAdaptor.java', 'testing/newsrc/org/aspectj/testing/1e1bbb3 OutputSpec.java', 'testing/newsrc/org/aspectj/testing/1e1bbb3 RunSpec.java', 'testing/newsrc/org/aspectj/testing/1e1bbb3 XMLBasedAjcTestCase.java', 'tests/src/org/aspectj/systemtest/ajc150/ltw/1e1bbb3 LTWTests.java', 'weaver/src/org/aspectj/weaver/tools/1e1bbb3 WeavingAdaptor.java', 'weaver5/java5-src/org/aspectj/weaver/reflect/1e1bbb3 Java15ReflectionBasedReferenceTypeDelegate.java']"
118781,Bug 118781 [waiting-on-build]VerifyError in AspectJ,"""I'm fairly new to AspectJ, so this is probably not going to be well explained. I've started working on a project that was working fine. Then I added methods to classes that take a 2-dimensional string array parameter and suddenly I'm getting a VerifyError exception. java.lang.VerifyError: (class: com/drkw/cpds/obligor/facades/version_1_00/ObligorDetailFacade_1_00, method: searchForObligorSummariesByGroup_aroundBody24 signature: (Lcom/drkw/cpds/obligor/facades/version_1_00/ObligorDetailFacade_1_00;[[[Ljava/lang/String;Ljava/lang/String;LjavaA(&#130; at com.drkw.cpds.obligor.facades.version_1_00.obligor.ObligorManager.<clinit>(ObligorManager.java:48) at com.drkw.cpds.obligor.integration.version_1_00.obligor.GetObligorDetailsGroupingTest.testGetObligorDetailsUsingGroups(GetObligorDetailsGroupingTest.java:45) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)""",2005-12-01 03:43:53,a75b7fa,"['tests/bugs150/pr118781/a75b7fa MyAspect.java', 'tests/bugs150/pr118781/a75b7fa MyClass.java', 'tests/bugs150/pr118781/a75b7fa MyMain.java', 'tests/src/org/aspectj/systemtest/ajc150/a75b7fa Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/a75b7fa World.java']"
119352,Bug 119352 AjType.getSupertype breaks for null,I ran into this while using reflection proxies with LTW... See attached patches for these test cases and my fix: public void testObjectSupertype() { AjType<?> objectSuper = AjTypeSystem.getAjType(Object.class).getSupertype(); assertNull(objectSuper); } public void testInterfaceSupertype() { AjType<?> serializableSuper = AjTypeSystem.getAjType(Serializable.class).getSupertype(); assertNull(serializableSuper); } public AjType<? super T> getSupertype() { Class<? super T> superclass = clazz.getSuperclass(); return superclass==null ? null : (AjType<? super T>) new AjTypeImpl(superclass); },2005-12-05 23:04:42,6e8bf52,"['aspectj5rt/java5-src/org/aspectj/internal/lang/reflect/6e8bf52 AjTypeImpl.java', 'aspectj5rt/java5-testsrc/org/aspectj/internal/lang/reflect/6e8bf52 AjTypeTests.java']"
119353,Bug 119353 Inconsistent Implementations of ReferenceType.getDeclaredMethods(),"""I am running into a problem in load-time weaving when I use reflection delegates because the weaver is generating an incorrect bridge method when I perform an inter-type declaration on Struts.ActionServlet for the init method. On investigation, the BCEL world is recognizing this as an overriding method, because its version of getDeclaredMethods is returning the declared methods for all ancestor superclasses. However, the reflection world is returning only the declared methods for this one class. It therefore appears that the weaver expects getDeclaredMethods to return all of them (making the name quite misleading). I think previously the method was being implemented inconsistently between 1.5 reflection and <1.5 reflection delegates. But it looks like it needs to be handled consistently to include all superclass methods. However, I dont know what other places (e.g., the MAP) are really expecting getDeclaredMethods and its siblings to behave like Java reflection's version... I started work on adding a getAllDeclaredMethods method to ReferenceType and delegates, as an alternative to provide the weaver the ability to check method overriding as in this case, but it's a little bit involved and I wanted to flag the issue first. Here's a test that fails and illustrates the issue: Index: ReflectionBasedReferenceTypeDelegateTest.java =================================================================== RCS file: /home/technology/org.aspectj/modules/weaver/testsrc/org/aspectj/weaver/reflect/ReflectionBasedReferenceTypeDelegateTest.java,v retrieving revision 1.5 diff -u -r1.5 ReflectionBasedReferenceTypeDelegateTest.java --- ReflectionBasedReferenceTypeDelegateTest.java 28 Nov 2005 17:44:40 -0000 1.5 +++ ReflectionBasedReferenceTypeDelegateTest.java 6 Dec 2005 04:11:41 -0000 @@ -238,6 +238,18 @@ assertTrue(""""Superclass for Map generic type should be Object but was """"+rt2,rt2.equals(UnresolvedType.OBJECT)); } + public void testCompareSubclassDelegates() { + world.setBehaveInJava5Way(true); + + BcelWorld bcelWorld = new BcelWorld(); + bcelWorld.setBehaveInJava5Way(true); + UnresolvedType javaUtilHashMap = UnresolvedType.forName(""""java.util.HashMap""""); + ReferenceType rawType = (ReferenceType)bcelWorld.resolve(javaUtilHashMap ); + + ReferenceType rawReflectType = (ReferenceType)world.resolve(javaUtilHashMap ); + assertEquals(rawType.getDelegate().getDeclaredMethods().length, rawReflectType.getDelegate().getDeclaredMethods().length); + } + // todo: array of int protected void setUp() throws Exception { This results in: junit.framework.AssertionFailedError: expected:<41> but was:<29> at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.failNotEquals(Assert.java:282) at junit.framework.Assert.assertEquals(Assert.java:64) at junit.framework.Assert.assertEquals(Assert.java:201) at junit.framework.Assert.assertEquals(Assert.java:207) at org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateTest.testCompareSubclassDelegates(ReflectionBasedReferenceTypeDelegateTest.java:250) at java.lang.reflect.Method.invoke(Native Method) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)""",2005-12-05 23:11:15,b52515f,"['weaver/src/org/aspectj/weaver/reflect/b52515f ReflectionBasedReferenceTypeDelegateFactory.java', 'weaver/testsrc/org/aspectj/weaver/reflect/b52515f ReflectionBasedReferenceTypeDelegateTest.java', 'weaver5/java5-src/org/aspectj/weaver/reflect/b52515f Java15ReflectionBasedReferenceTypeDelegate.java']"
119451,Bug 119451 AJDoc produces incorrect warning for package accessed aspects,,2005-12-06 12:39:40,5f8d2cd,"['ajde/testsrc/org/aspectj/ajde/5f8d2cd AsmDeclarationsTest.java', 'ajdoc/src/org/aspectj/tools/ajdoc/5f8d2cd StubFileGenerator.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/5f8d2cd AspectDeclaration.java']"
119882,Bug 119882 BCException when deleting a java-source-file,"""org.aspectj.weaver.BCException at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1087) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:254) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) BCException thrown: Can't find bcel delegate for training.casino.Konto type=class org.aspectj.weaver.ReferenceType when weaving classes when weaving when incrementally building BuildConfig[C:\Documents and Settings\mheidt\workspace 3.1.1\.metadata\.plugins\org.eclipse.ajdt.core\AspJTraining.generated.lst] #Files=11 deleted a java-source-file before (but not the class-file), possibly pointed by a LogAspect. Created a new source file. Error occurs after saving the new file.""",2005-12-08 10:53:59,0b39aa5,"['tests/multiIncremental/PR119882/base/src/pack/0b39aa5 C1.java', 'tests/multiIncremental/PR119882/base/src/pack/0b39aa5 C2.java', 'tests/multiIncremental/PR119882/inc1/src/pack/0b39aa5 C1.java', 'tests/src/org/aspectj/systemtest/incremental/tools/0b39aa5 MultiProjectIncrementalTests.java', 'weaver/src/org/aspectj/weaver/bcel/0b39aa5 BcelWeaver.java']"
120351,"""Bug 120351 cflowbelow issue when binding, in @AJ""",,2005-12-12 05:17:15,979124d,"['tests/java5/ataspectj/ataspectj/bugs/979124d CflowBelowStackTest.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/979124d AtAjLTWTests.java', 'weaver/src/org/aspectj/weaver/bcel/979124d BcelAdvice.java', 'weaver/src/org/aspectj/weaver/bcel/979124d BcelShadow.java']"
120356,Bug 120356 @AJ decl err/warn does not show cross structure view,"""Perhaps an issue in the ASM struct for DEOW since cross struct. is empty in AJDT , despite error / warning gutter and message is ok.""",2005-12-12 07:07:55,f743fb2,"['tests/bugs151/pr120356/f743fb2 A.java', 'tests/bugs151/pr120356/f743fb2 C.java', 'tests/src/org/aspectj/systemtest/ajc151/f743fb2 Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/bcel/f743fb2 AtAjAttributes.java']"
120363,Bug 120363 LTW weaver include and exclude does not behave correctly,,2005-12-12 08:42:34,9edb4b6,"['loadtime/src/org/aspectj/weaver/loadtime/9edb4b6 ClassLoaderWeavingAdaptor.java', 'tests/java5/ataspectj/ataspectj/9edb4b6 Test$$EnhancerByCGLIB$$12345.java', 'tests/java5/ataspectj/com/foo/bar/9edb4b6 Test$$EnhancerByCGLIB$$12345.java', 'tests/java5/ataspectj/com/foo/bar/9edb4b6 Test.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/9edb4b6 AtAjLTWTests.java']"
120375,Bug 120375 Support Load-Time Weaving and HotSwap,,2005-12-12 10:43:11,19355dd,['loadtime5/java5-src/org/aspectj/weaver/loadtime/19355dd ClassPreProcessorAgentAdapter.java']
120401,Bug 120401 add signature to UnresolvedType.parameterize(..) exception,"""I keep getting UnresolvedType UnsupportedOperationException unhelpful message """"resolve this type first,"""" so I'm adding the signature to the message (without permission, hence the bug as notice). throw new UnsupportedOperationException(""""unable to parameterize unresolved type: """" + signature); ------------------------------- java.lang.UnsupportedOperationException at org.aspectj.weaver.UnresolvedType.parameterize(UnresolvedType.java:218) at org.aspectj.weaver.patterns.ExactTypePattern.parameterizeWith(ExactTypePattern.java:242) at org.aspectj.weaver.patterns.TypePatternList.parameterizeWith(TypePatternList.java:195) at org.aspectj.weaver.patterns.DeclareParents.parameterizeWith(DeclareParents.java:77) at org.aspectj.weaver.ReferenceType.getDeclares(ReferenceType.java:484) at org.aspectj.weaver.ResolvedType.collectDeclares(ResolvedType.java:523) at org.aspectj.weaver.ResolvedType.collectCrosscuttingMembers(ResolvedType.java:488) at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect(CrosscuttingMembersSet.java:60) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.addCrosscuttingStructures(AjLookupEnvironment.java:378) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.addCrosscuttingStructures(AjLookupEnvironment.java:388) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.collectAllITDsAndDeclares(AjLookupEnvironment.java:314) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:168) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:301) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:315) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:230) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:185) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) UnsupportedOperationException thrown: resolve this type first""",2005-12-12 12:11:27,3ac4627,['weaver/src/org/aspectj/weaver/3ac4627 UnresolvedType.java']
120521,Bug 120521 named pointcut not resolved in pertarget pointcut,"""Get incorrect error """"can't find pointcut ..."""" when declaring pertarget pointcut using pointcut declared outside the aspect. True of HEAD right now. Not true of pointcuts declared inside the aspect or issingleton aspects. I thought this was reported and fixed, but I couldn't find the bug. Sorry if it is a duplicate. ------------------------------------------------- package bugs; public class PerTargetSubaspectError { public static void main(String[] args) { C.run(); } static class C { static void run() {} } pointcut doit() : execution(void C.run()); // no error if not pertarget static aspect CPT pertarget(pc()){ // no error if doit() defined in CPT protected pointcut pc() : doit(); // unexpected CE before() : doit() {} // no CE } }""",2005-12-13 03:18:43,ae500c6,"['tests/bugs150/pr120521/ae500c6 PerTargetSubaspectError.java', 'tests/src/org/aspectj/systemtest/ajc150/ae500c6 Ajc150Tests.java']"
120543,Bug 120543 Issue version message during load-time weaving,"""It would be very useful to know exactly which version of the weaver is being used for LTW. An informational message could be issued when each WeavingAdaptor instance is created (it is possible to have multiple versions of AspectJ in a system). This message could be similar to the that issued by """"ajc -version"""".""",2005-12-13 06:40:30,9d32b76,['weaver/src/org/aspectj/weaver/tools/9d32b76 WeavingAdaptor.java']
120693,Bug 120693 Contribution: More Efficient Lint Warnings: ~15% Performance Increase,"""In profiling a load-time weaving configuration from HEAD, I found that 9% of total time (over 10% of weaving time) is spent in org.aspectj.weaver.Lint.clearSuppressions(), mostly from use inside BcelClassWeaver.match I made a small change in the parts of BcelAdvice that clear suppressions to save the list that was cleared and to only clear these. This alone saves about 15% of total CPU time in start up on my sample configuration.""",2005-12-13 15:03:54,bdafe31,"['weaver/src/org/aspectj/weaver/bdafe31 Lint.java', 'weaver/src/org/aspectj/weaver/bcel/bdafe31 BcelAdvice.java']"
120739,Bug 120739 LTW Optimization: Disable World if it has No Aspects,This optimization disables weaving for a ClassLoader where there are no aspects defined. This is actually useful if you have aspect exclusions that exclude all the aspects defined in a parent class loader. It is also helpful in the trivial/rare case where there is an aop.xml definition with no aspect definitions.,2005-12-13 16:10:55,4513e92,"['loadtime/src/org/aspectj/weaver/loadtime/4513e92 ClassLoaderWeavingAdaptor.java', 'tests/java5/ataspectj/ataspectj/ltwreweavable/4513e92 EmptyAtAspect.java', 'tests/src/org/aspectj/systemtest/ajc152/4513e92 Ajc152Tests.java']"
120743,Bug 120743 Improvements to define new server wizard page,"""On the panel where the server location and button to install the server is shown, a couple of usability improvements could be made... (1) If I choose browse and choose a location. Then hit install server, the fs browser should not be brought back up since I have already hitten browse and selected a location. (2) If (1) and the location chosen contains no server, and the server is downlodable, classpath validation errors should not show, but a message stating that no server is found but can be installed by selecting the install server button.""",2005-12-13 16:15:50,588e7b9,['loadtime/src/org/aspectj/weaver/loadtime/588e7b9 Aj.java']
120909,Bug 120909 Test failures using IBM Java 5,1. ReflectionBasedReferenceTypeDelegateTest.testCompareSubclassDelegates() junit.framework.AssertionFailedError: Errors:Couldn't find void java.util.HashMap.onEntry() in the bcel set Couldn't find void java.util.HashMap.onExit() in the bcel set Couldn't find void java.util.HashMap.transfer0(java.util.HashMap$Entry[]) in the bcel set at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateTest.testCompareSubclassDelegates(ReflectionBasedReferenceTypeDelegateTest.java:278) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:615) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196) This failure occures because when we compare BeclWorld with ReflectionWorld we are still picking up the default (Sun) version of HashMap in JRE15_LIB for BCEL. The solution is to create both worlds with the same class loader. 2. Ajc150Tests.testModifierOverrides() junit.framework.AssertionFailedError: Expecting output: execution(void pr119749.C.m()): execMe[@pr119749$Me()] execution(void pr119749.C.m()): execEx But found output: execution(void pr119749.C.m()): execMe[@pr119749.Me()] execution(void pr119749.C.m()): execEx First difference is on line 1 at junit.framework.Assert.fail(Assert.java:47) at org.aspectj.testing.OutputSpec.matchAgainst(OutputSpec.java:58) at org.aspectj.testing.RunSpec.execute(RunSpec.java:61) at org.aspectj.testing.AjcTest.runTest(AjcTest.java:68) at org.aspectj.testing.XMLBasedAjcTestCase.runTest(XMLBasedAjcTestCase.java:111) at org.aspectj.systemtest.ajc150.Ajc150Tests.testModifierOverrides(Ajc150Tests.java:852) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:615) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22) at junit.extensions.TestSetup$1.protect(TestSetup.java:19) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.extensions.TestSetup.run(TestSetup.java:23) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196) This failure is due a difference between JDKs in the implementation of toString() for annotations.,2005-12-14 11:58:04,9abfc40,"['loadtime/src/org/aspectj/weaver/loadtime/9abfc40 DefaultWeavingContext.java', 'weaver/src/org/aspectj/weaver/reflect/9abfc40 ReflectionWorld.java', 'weaver/testsrc/org/aspectj/weaver/reflect/9abfc40 ReflectionBasedReferenceTypeDelegateTest.java', 'weaver/testsrc/org/aspectj/weaver/reflect/9abfc40 ReflectionWorldTest.java']"
121312,Bug 121312 [performance]Contribution: Refactoring to Support LTW World with Reflection Delegates for Bootstrap Types,"""This patch adds an IReflectionWorld interface, changes the various places in code where casts are made to ReflectionWorld to use that interface, creates some common methods and creates an LTWWorld that implements this interface, and sets up the ClassLoaderWeavingAdaptor to use it. It's important that the LTWWorld have just one type map for performance and memory efficiency.""",2005-12-17 02:53:28,cafdecb,"['weaver/src/org/aspectj/weaver/ltw/cafdecb LTWWorld.java', 'weaver/src/org/aspectj/weaver/reflect/cafdecb IReflectionWorld.java', 'weaver/src/org/aspectj/weaver/reflect/cafdecb ReflectionBasedReferenceTypeDelegateFactory.java', 'weaver/src/org/aspectj/weaver/reflect/cafdecb ReflectionShadow.java', 'weaver/src/org/aspectj/weaver/reflect/cafdecb ReflectionWorld.java', 'weaver/testsrc/org/aspectj/weaver/reflect/cafdecb ReflectionWorldTest.java']"
121385,Bug 121385 around advice does not work when LTW,"""I defined a aop.xml and a aspect, I have already copy aspectjweaver.jar D:\work\BTM\lib\aspectjweaver.jar, and added -javaagent:D:\work\BTM\lib\aspectjweaver.jar option to the JVM in Eclipse, it works fine if there are before and after advice in aspect, but it will be wrong once I used around advice. if I use compile-time weaving, this around advice works fine. my Eclipse env: eclipse 3.0.2 + AJDT 1.2.1 RC1 release + Sun JDK 1.5.0. aspect file: import org.aspectj.lang.Signature; import org.aspectj.lang.JoinPoint; public abstract aspect World { //private Object result; pointcut greeting() : execution(* Hello.sayWorld(..)); Object around(): greeting() { System.out.println(""""around start!""""); Object result = proceed(); System.out.println(""""around end!""""); return result; } // before() : greeting() { // Signature signature = thisJoinPoint.getSignature(); // System.out.println(""""before """" + signature.getName()); // } // after() returning () : greeting() { // Signature signature = thisJoinPoint.getSignature(); // System.out.println(""""after """" + signature.getName()); // } } aop.xml file: <?xml version=""""1.0"""" encoding=""""UTF-8""""?> <aspectj> <aspects> <aspect name=""""World""""/> <concrete-aspect name=""""World1"""" extends=""""World""""> <pointcut name=""""greeting"""" expression=""""execution(* Hello.sayWorld(..)) || execution(* Hello.sayHello(..))""""/> </concrete-aspect> </aspects> <weaver options=""""-Xreweavable -verbose -XlazyTjp -showWeaveInfo""""> <include within=""""Hello""""/> </weaver> </aspectj> around advice error message in eclipse console as below: info register aspect World info generating class 'World1' info weaving 'Hello' info weaver operating in reweavable mode. Need to verify any required types exist. abort trouble in: public class Hello extends java.lang.Object: public void <init>(): ALOAD_0 // Hello this (line 2) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void Hello.<init>()) | RETURN constructor-execution(void Hello.<init>()) end public void <init>() public static void main(String[]) org.aspectj.weaver.MethodDeclarationLineNumber: 7:75 : INVOKESTATIC Hello.sayHello ()V (line 9) RETURN (line 10) end public static void main(String[]) public static void sayHello() org.aspectj.weaver.MethodDeclarationLineNumber: 12:180 : end public static void sayHello() public static int sayWorld() org.aspectj.weaver.MethodDeclarationLineNumber: 17:268 : method-execution(int Hello.sayWorld()) | GETSTATIC java.lang.System.out Ljava/io/PrintStream; (line 18) | LDC """"World"""" | INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V | ICONST_0 (line 19) | IRETURN method-execution(int Hello.sayWorld()) end public static int sayWorld() static final void sayHello_aroundBody0(): GETSTATIC java.lang.System.out Ljava/io/PrintStream; (line 13) LDC """"Hello"""" INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V INVOKESTATIC Hello.sayWorld ()I (line 14) POP RETURN (line 15) end static final void sayHello_aroundBody0() end public class Hello public class Hello$AjcClosure1 extends org.aspectj.runtime.internal.AroundClosure: public void <init>(Object[]): ALOAD_0 ALOAD_1 INVOKESPECIAL org.aspectj.runtime.internal.AroundClosure.<init> ([Ljava/lang/Object;)V RETURN end public void <init>(Object[]) public Object run(Object[]): ALOAD_0 GETFIELD org.aspectj.runtime.internal.AroundClosure.state [Ljava/lang/Object; ASTORE_2 INVOKESTATIC Hello.sayHello_aroundBody0 ()V ACONST_NULL ARETURN end public Object run(Object[]) end public class Hello$AjcClosure1 -- (NullPointerException) null null java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelAdvice.getAdviceArgSetup(BcelAdvice.java:457) at org.aspectj.weaver.bcel.BcelShadow.weaveAroundClosure(BcelShadow.java:2685) at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:230) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:588) at org.aspectj.weaver.Shadow.implement(Shadow.java:405) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2146) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:467) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:102) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1543) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1494) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1275) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1097) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:263) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:196) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:65) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:52) at sun.instrument.TransformerManager.transform(TransformerManager.java:122) at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:155) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:620) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124) at java.net.URLClassLoader.defineClass(URLClassLoader.java:260) at java.net.URLClassLoader.access$100(URLClassLoader.java:56) at java.net.URLClassLoader$1.run(URLClassLoader.java:195) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:188) at java.lang.ClassLoader.loadClass(ClassLoader.java:306) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268) at java.lang.ClassLoader.loadClass(ClassLoader.java:251) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) Message: abort trouble in: public class Hello extends java.lang.Object: public void <init>(): ALOAD_0 // Hello this (line 2) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void Hello.<init>()) | RETURN constructor-execution(void Hello.<init>()) end public void <init>() public static void main(String[]) org.aspectj.weaver.MethodDeclarationLineNumber: 7:75 : INVOKESTATIC Hello.sayHello ()V (line 9) RETURN (line 10) end public static void main(String[]) public static void sayHello() org.aspectj.weaver.MethodDeclarationLineNumber: 12:180 : end public static void sayHello() public static int sayWorld() org.aspectj.weaver.MethodDeclarationLineNumber: 17:268 : method-execution(int Hello.sayWorld()) | GETSTATIC java.lang.System.out Ljava/io/PrintStream; (line 18) | LDC """"World"""" | INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V | ICONST_0 (line 19) | IRETURN method-execution(int Hello.sayWorld()) end public static int sayWorld() static final void sayHello_aroundBody0(): GETSTATIC java.lang.System.out Ljava/io/PrintStream; (line 13) LDC """"Hello"""" INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V INVOKESTATIC Hello.sayWorld ()I (line 14) POP RETURN (line 15) end static final void sayHello_aroundBody0() end public class Hello public class Hello$AjcClosure1 extends org.aspectj.runtime.internal.AroundClosure: public void <init>(Object[]): ALOAD_0 ALOAD_1 INVOKESPECIAL org.aspectj.runtime.internal.AroundClosure.<init> ([Ljava/lang/Object;)V RETURN end public void <init>(Object[]) public Object run(Object[]): ALOAD_0 GETFIELD org.aspectj.runtime.internal.AroundClosure.state [Ljava/lang/Object; ASTORE_2 INVOKESTATIC Hello.sayHello_aroundBody0 ()V ACONST_NULL ARETURN end public Object run(Object[]) end public class Hello$AjcClosure1 -- (NullPointerException) null null java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelAdvice.getAdviceArgSetup(BcelAdvice.java:457) at org.aspectj.weaver.bcel.BcelShadow.weaveAroundClosure(BcelShadow.java:2685) at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:230) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:588) at org.aspectj.weaver.Shadow.implement(Shadow.java:405) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2146) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:467) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:102) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1543) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1494) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1275) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1097) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:263) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:196) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:65) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:52) at sun.instrument.TransformerManager.transform(TransformerManager.java:122) at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:155) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:620) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124) at java.net.URLClassLoader.defineClass(URLClassLoader.java:260) at java.net.URLClassLoader.access$100(URLClassLoader.java:56) at java.net.URLClassLoader$1.run(URLClassLoader.java:195) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:188) at java.lang.ClassLoader.loadClass(ClassLoader.java:306) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268) at java.lang.ClassLoader.loadClass(ClassLoader.java:251) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) org.aspectj.bridge.AbortException: trouble in: public class Hello extends java.lang.Object: public void <init>(): ALOAD_0 // Hello this (line 2) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void Hello.<init>()) | RETURN constructor-execution(void Hello.<init>()) end public void <init>() public static void main(String[]) org.aspectj.weaver.MethodDeclarationLineNumber: 7:75 : INVOKESTATIC Hello.sayHello ()V (line 9) RETURN (line 10) end public static void main(String[]) public static void sayHello() org.aspectj.weaver.MethodDeclarationLineNumber: 12:180 : end public static void sayHello() public static int sayWorld() org.aspectj.weaver.MethodDeclarationLineNumber: 17:268 : method-execution(int Hello.sayWorld()) | GETSTATIC java.lang.System.out Ljava/io/PrintStream; (line 18) | LDC """"World"""" | INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V | ICONST_0 (line 19) | IRETURN method-execution(int Hello.sayWorld()) end public static int sayWorld() static final void sayHello_aroundBody0(): GETSTATIC java.lang.System.out Ljava/io/PrintStream; (line 13) LDC """"Hello"""" INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V INVOKESTATIC Hello.sayWorld ()I (line 14) POP RETURN (line 15) end static final void sayHello_aroundBody0() end public class Hello public class Hello$AjcClosure1 extends org.aspectj.runtime.internal.AroundClosure: public void <init>(Object[]): ALOAD_0 ALOAD_1 INVOKESPECIAL org.aspectj.runtime.internal.AroundClosure.<init> ([Ljava/lang/Object;)V RETURN end public void <init>(Object[]) public Object run(Object[]): ALOAD_0 GETFIELD org.aspectj.runtime.internal.AroundClosure.state [Ljava/lang/Object; ASTORE_2 INVOKESTATIC Hello.sayHello_aroundBody0 ()V ACONST_NULL ARETURN end public Object run(Object[]) end public class Hello$AjcClosure1 at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:47) at org.aspectj.weaver.tools.WeavingAdaptor$WeavingAdaptorMessageHandler.handleMessage(WeavingAdaptor.java:395) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1554) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1494) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1275) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1097) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:263) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:196) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:65) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:52) at sun.instrument.TransformerManager.transform(TransformerManager.java:122) at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:155) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:620) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124) at java.net.URLClassLoader.defineClass(URLClassLoader.java:260) at java.net.URLClassLoader.access$100(URLClassLoader.java:56) at java.net.URLClassLoader$1.run(URLClassLoader.java:195) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:188) at java.lang.ClassLoader.loadClass(ClassLoader.java:306) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268) at java.lang.ClassLoader.loadClass(ClassLoader.java:251) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) Hello World""",2005-12-19 05:32:32,a778ac4,"['tests/bugs150/pr121385/a778ac4 A.java', 'tests/bugs150/pr121385/a778ac4 Hello.java', 'tests/bugs150/pr121385/a778ac4 WorldAt.java', 'tests/src/org/aspectj/systemtest/ajc150/a778ac4 Ajc150Tests.java', 'weaver/src/org/aspectj/weaver/bcel/a778ac4 BcelAdvice.java', 'weaver/src/org/aspectj/weaver/bcel/a778ac4 BcelShadow.java']"
121395,Bug 121395 invalid aspectj path throws filenotfoundexception,An invalid aspectj path (missing jar file) throws an filenotfoundexception: java.io.FileNotFoundException at java.io.FileInputStream.open(Native Method) at java.io.FileInputStream.<init>(FileInputStream.java:106) at org.aspectj.weaver.bcel.BcelWeaver.addAspectsFromJarFile(BcelWeaver.java:202) at org.aspectj.weaver.bcel.BcelWeaver.addLibraryJarFile(BcelWeaver.java:192) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.initBcelWorld(AjBuildManager.java:623) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:209) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:185) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) FileNotFoundException thrown: /Users/frankstolle/Documents/workspace/lib_aspects/deploy/lib_aspects.jar (No such file or directory) should generate an problem entry in the problems-list.,2005-12-19 06:28:40,551b446,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/551b446 AjBuildManager.java', 'tests/src/org/aspectj/systemtest/incremental/tools/551b446 AjdeInteractionTestbed.java', 'tests/src/org/aspectj/systemtest/incremental/tools/551b446 MultiProjectIncrementalTests.java']"
121616,Bug 121616 [@AspectJ]Lacking import for JoinPoint crahes the compiler,,2005-12-20 14:58:14,d4219e1,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/d4219e1 ValidateAtAspectJAnnotationsVisitor.java', 'tests/bugs151/d4219e1 pr121616.java', 'tests/src/org/aspectj/systemtest/ajc151/d4219e1 Ajc151Tests.java']"
122248,Bug 122248 BUG for ajdt_1.3_for_eclipse_3.1.zip,Hi !! I use ajdt_1.3_for_eclipse_3.1.zip with eclipse 3.1.1 and fick this error when the eclipse try to make the workbrench: java.lang.IllegalStateException at org.aspectj.weaver.TypeFactory.createParameterizedType(TypeFactory.java:42) at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:82) at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:42) at org.aspectj.weaver.bcel.BcelObjectType.unpackGenericSignature(BcelObjectType.java:657) at org.aspectj.weaver.bcel.BcelObjectType.getSuperclass(BcelObjectType.java:181) at org.aspectj.weaver.ReferenceType.getSuperclass(ReferenceType.java:514) at org.aspectj.weaver.bcel.BcelWeaver.weaveParentsFor(BcelWeaver.java:1192) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1047) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:230) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:156) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) IllegalStateException thrown: Expecting raw type,2005-12-28 09:35:06,3f77e75,"['weaver/src/org/aspectj/weaver/bcel/3f77e75 BcelField.java', 'weaver/src/org/aspectj/weaver/bcel/3f77e75 BcelMethod.java', 'weaver/src/org/aspectj/weaver/bcel/3f77e75 BcelObjectType.java', 'weaver/testsrc/org/aspectj/weaver/3f77e75 MemberTestCase15.java']"
122347,Bug 122347 Contribution: Memory Efficient Expendable Type Map,"""Here is a patch for a single file (weaver/src/org/aspectj/weaver/World) that significantly improves the memory footprint of weaves (see details below). I would like help in resolving the one bug that this hit in the AspectJ weaver tests. It does the following: * Keeps Weak References to the values in the expendable map to allow evicting them (whereas the Weak Hash Map keeps weak references only to the keys) * Allows configuring the expendable map to keep hard references to up to N types with -Dorg.aspectj.weaver.World.cacheRetention=number (the current default is 0). It's a nice tuning option so projects can use a bit more memory to avoid evicting types. * Moves the isExpendible check from the typeMap to the world, to allow different worlds (such as the LTWWorld) to change what's evictable (this lets the LTWWorld not keep references to already defined classes) This change breaks 3 tests in the """"run these tests before checking in code"""" suite, all of them an NPE in the same line of ReferenceType.getTypeVariables for generic signatures. Presumably this code is implicitly relying on """"expendable"""" types never being evicted. I have attached the error output for all 3 cases. My initial tests have shown a relatively small performance loss in return for significant memory footprint gains. E.g., using the AspectJ in CVS HEAD with the standard BcelWorld implementation (not LTWWorld) as the world, in Tomcat with the Glassbox Inspector & 4 web apps the AspectJ overhead with this optimization is 48 million heap bytes (of 60 million total heap bytes) versus 61 million bytes using CVS HEAD. The optimization has limited benefit for a BcelWorld where almost all the code is exposed to the weaver (since few types are expendible). However, Martin Lippert tried a version of this in his AJEER Eclipse load-time weaving environment and reported a reduction from 230 MB of heap to 30 MB heap used at a cost of a 25% increase in start up time. Likewise, this facility is the major contributor to enabling my other LTW optimizations that can reduce the heap overhead in my test case to 9 million heap bytes (principally having the LTW world allow evicting types that are already woven and using reflective proxies). I see similar start up times when using this expendable map in my tests. The ability to increase the number of hard references in cache should provide users an ability to allocate more memory to speed up performance. Note that the only hard reference to the keys (the signatures) is from the values (at least I haven't noticed any cases in my load-time weaving tests), so the weak hash map is compacting itself properly: when the reference type is weakly reachable, the key is then weakly reachable and the map ultimately purges theses entries.""",2005-12-29 18:49:19,04067a6,"['weaver/src/org/aspectj/weaver/04067a6 World.java', 'weaver/src/org/aspectj/weaver/bcel/04067a6 BcelWorld.java']"
122370,Bug 122370 [@AspectJ] @DeclareParents/declare parents not equivalent,"""Adding a setter to the Moody example makes it clear that the annotation style (@DeclareParents) results in different behavior than the classic (declare parents) style. Calling the setter in a """"declare parents""""-advised object behaves as one would expect. However, calling the setter with a """"@DeclareParents""""-advised object has no effect -- that is, you can call the setter (and see that it's been called) and immediately call the getter, only to find that the value didn't change. The following examples (all in """"package moody;"""") illustrate: public enum Mood { HAPPY, JOLLY } Classic style: ------------- public aspect ClassicMoodIndicator { public interface Moody { Mood getMood(); void setMood(Mood mood); } private Mood Moody.mood = Mood.HAPPY; public Mood Moody.getMood() { return mood; } public void Moody.setMood(Mood mood) { this.mood = mood; } declare parents : moody.ClassicMoodImplementor implements Moody; } public class ClassicMoodImplementor { } Annotation style: ---------------- import org.aspectj.lang.annotation.Aspect; import org.aspectj.lang.annotation.DeclareParents; @Aspect public class AnnotationMoodIndicator { public interface Moody { Mood getMood(); void setMood(Mood mood); } public static class MoodyImpl implements Moody { private Mood mood = Mood.HAPPY; public Mood getMood() { return mood; } public void setMood(Mood mood) { this.mood = mood; } } @DeclareParents(value=""""moody.AnnotationMoodImplementor"""",defaultImpl=MoodyImpl.class) private Moody implementedInterface; } public class AnnotationMoodImplementor { } JUnit TestCase: -------------- import junit.framework.TestCase; public class MoodTester extends TestCase { public MoodTester(String name) { super(name); } public void testClassic() { ClassicMoodImplementor cmi0 = new ClassicMoodImplementor(); ClassicMoodImplementor cmi1 = new ClassicMoodImplementor(); assertEquals(""""cmi0 should be HAPPY"""", Mood.HAPPY, cmi0.getMood()); cmi1.setMood(Mood.JOLLY); assertEquals(""""cmi1 should be JOLLY"""", Mood.JOLLY, cmi1.getMood()); assertEquals(""""cmi0 should be *still* be HAPPY"""", Mood.HAPPY, cmi0.getMood()); } public void testAnnotation() { AnnotationMoodImplementor ami0 = new AnnotationMoodImplementor(); AnnotationMoodImplementor ami1 = new AnnotationMoodImplementor(); assertEquals(""""ami0 should be HAPPY"""", Mood.HAPPY, ((AnnotationMoodIndicator.Moody) ami0).getMood()); ((AnnotationMoodIndicator.Moody) ami1).setMood(Mood.JOLLY); assertEquals(""""ami1 should be JOLLY"""", Mood.JOLLY, ((AnnotationMoodIndicator.Moody) ami1).getMood()); assertEquals(""""ami0 should be *still* be HAPPY"""", Mood.HAPPY, ((AnnotationMoodIndicator.Moody) ami0).getMood()); } } Result: ------ The test run is as follows: ..F Time: 0.021 There was 1 failure: 1) testAnnotation(moody.MoodTester)junit.framework.AssertionFailedError: ami1 should be JOLLY expected:<JOLLY> but was:<HAPPY> at moody.MoodTester.testAnnotation(MoodTester.java:27) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at moody.MoodTester.main(MoodTester.java:7) FAILURES!!! Tests run: 2, Failures: 1, Errors: 0 For classic, you can see that cmi1.setMood was successful and cmi0/cmi1 are decoupled (that is, calling setMood on cmi1 has no impact on cmi0). The annotation style, however, fails because ami1.setMood appears to have done nothing. The result should have been that ami1 is JOLLY and ami0 HAPPY (I include the second assert because both ami0 & ami1 ended up JOLLY in RC1). The current behavior makes @DeclareParents unusable for retaining field state (near as I can tell, it retains state throughout the method invocation, but not beyond it, like it is creating and discarding a backing object with each method invocation).""",2005-12-30 00:54:07,e874581,"['tests/bugs151/pr122370/moody/e874581 AnnotationMoodImplementor.java', 'tests/bugs151/pr122370/moody/e874581 AnnotationMoodIndicator.java', 'tests/bugs151/pr122370/moody/e874581 MainClass.java', 'tests/bugs151/pr122370/moody/e874581 Mood.java', 'tests/src/org/aspectj/systemtest/ajc151/e874581 Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/bcel/e874581 BcelTypeMunger.java']"
122417,Bug 122417 [waiting-on-website-doc-refresh] Typo in org.aspectj.lang.JoinPoint String constant symbolic name,"""Methinks the n_a_m_e of the preinitialization constant is misspelled JoinPoint.PREINTIALIZATION is lacking an """"I"""" between the N and the T JoinPoint.PREINITIALIZATION might be the correct version Note: The value of the constant (""""preinitialization"""") is spelled correctly. Sorry for the inconvenience. Harald""",2005-12-31 05:11:31,a9ef1b0,"['runtime/src/org/aspectj/lang/a9ef1b0 JoinPoint.java', 'weaver/src/org/aspectj/weaver/a9ef1b0 Shadow.java']"
122458,Bug 122458 java.lang.StringIndexOutOfBoundsException when compiling (build no.: 20051220093604),"""This exception occurs using the ajdt eclipse plugin when compiling a project the first time I add the ajdt nature. There are no aspects defined in the project. I suppose the exception occurs when compiling a class (sorry I can't post the entire source code) with this signature: public class FixedWidthParser<T> extends TabularDataParser<T> The only noticeable things about this class are the presence of an inherited type parameter (and redefined with same name) some custom annotations on methods and a varags on a method parameter, but all of this things are present on other classes in the same project that AspectJ apprently compiles well (I'm not sure about the fact it compiles them). Hope I helped you with this clues, here's the complete stacktrace. java.lang.StringIndexOutOfBoundsException at java.lang.String.substring(Unknown Source) at org.aspectj.weaver.TypeFactory.createTypeFromSignature(TypeFactory.java:86) at org.aspectj.weaver.TypeFactory.createTypeFromSignature(TypeFactory.java:116) at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:430) at org.aspectj.weaver.UnresolvedType.makeArray(UnresolvedType.java:286) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromBinding(EclipseFactory.java:214) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeResolvedMember(EclipseFactory.java:516) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeResolvedMember(EclipseFactory.java:494) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeResolvedMember(EclipseFactory.java:451) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.genBytecodeInfo(AsmHierarchyBuilder.java:525) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.visit(AsmHierarchyBuilder.java:400) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:185) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1195) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:339) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.internalBuild(AsmHierarchyBuilder.java:142) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.buildStructureForCompilationUnit(AsmHierarchyBuilder.java:82) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.finishedCompilationUnit(EclipseFactory.java:926) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing(AjCompilerAdapter.java:195) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184(CompilerAdapter.aj:89) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:528) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:230) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:156) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) StringIndexOutOfBoundsException thrown: String index out of range: -2""",2006-01-02 12:16:49,24a785f,['weaver/src/org/aspectj/weaver/24a785f TypeFactory.java']
122580,Bug 122580 Fix & Bug: Circularity Failure for Verbose Loading on JRockit 1.4.2_08 Agent,"""Here is a stack trace I am getting when I try to use AspectJ 1.5.0 final release's load-time weaving with JRockIt 1.4.2_08 using -Xmanagement:class=org.aspectj.weaver.loadtime.JRockitAgent to load Weblogic Server 8.1 SP2. I debugged the code in Eclipse and discovered that the weaver was being initialized while loading IMessage$Kind, so the JRockIt VM simply hasn't run staticinitialization yet, making IMessage.INFO null. I was able to fix this stack trace by hoisting the check for loading AspectJ code up BEFORE initializing a weaving adaptor i.e., changing line 55 of Aj.java to be if (loader == null || className == null || className.startsWith(""""org/aspectj/"""")) { I then commented out line 251 of WeavingAdaptor to avoid a duplicate check: private boolean shouldWeaveName (String name) { return !((/*(name.startsWith(""""org.apache.bcel."""")||//FIXME AV why ? bcel is wrapped in org.aspectj. name.startsWith(""""org.aspectj."""")||*/ // now checked earlier, to avoid circularity issues in initialization name.startsWith(""""java."""") || name.startsWith(""""javax."""")) //|| name.startsWith(""""$Proxy"""")//JDK proxies//FIXME AV is that 1.3 proxy ? fe. ataspect.$Proxy0 is a java5 proxy... || name.startsWith(""""sun.reflect.""""));//JDK reflect } Note that this bug does NOT occur when using a JRockIt 1.5.0 VM, even with the -Xmanagement command line argument. Stack Trace: java.lang.IllegalArgumentException: null kind at org.aspectj.bridge.Message.<init>(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/bridge/IMessage$Kind;Lorg/aspectj/bridge/ISourceLocation;Ljava/lang/Throwable;[Lorg/aspectj/bridge/ISourceLocation;ZIII)V(Message.java:89) at org.aspectj.bridge.Message.<init>(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/bridge/IMessage$Kind;Lorg/aspectj/bridge/ISourceLocation;Ljava/lang/Throwable;[Lorg/aspectj/bridge/ISourceLocation;)V(Message.java:67) at org.aspectj.bridge.Message.<init>(Ljava/lang/String;Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/Throwable;Lorg/aspectj/bridge/ISourceLocation;)V(Message.java:110) at org.aspectj.bridge.MessageUtil.info(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;(MessageUtil.java:211) at org.aspectj.bridge.MessageUtil.info(Lorg/aspectj/bridge/IMessageHandler;Ljava/lang/String;)Z(MessageUtil.java:98) at org.aspectj.weaver.tools.WeavingAdaptor.info(Ljava/lang/String;)Z(WeavingAdaptor.java:343) at org.aspectj.weaver.tools.WeavingAdaptor.createMessageHandler()V(WeavingAdaptor.java:168) at org.aspectj.weaver.tools.WeavingAdaptor.<init>()V(WeavingAdaptor.java:80) at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.<init>(Ljava/lang/ClassLoader;Lorg/aspectj/weaver/loadtime/IWeavingContext;)V(ClassLoaderWeavingAdaptor.java:70) at org.aspectj.weaver.loadtime.Aj$WeaverContainer.getWeaver(Ljava/lang/ClassLoader;Lorg/aspectj/weaver/loadtime/IWeavingContext;)Lorg/aspectj/weaver/tools/WeavingAdaptor;(Aj.java:94) at org.aspectj.weaver.loadtime.Aj.preProcess(Ljava/lang/String;[BLjava/lang/ClassLoader;)[B(Aj.java:61) at org.aspectj.weaver.loadtime.JRockitAgent.preProcess(Ljava/lang/ClassLoader;Ljava/lang/String;[B)[B(JRockitAgent.java:74) at jrockit.vm.ClassPreProcessorManager.notifyClassPreProcessor(ILjava/lang/String;[B)[B(Unknown Source) at jrockit.vm.Classes.defineClass0(ILjava/lang/String;[BII)I(Unknown Source) at jrockit.vm.Classes.defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;(Unknown Source) at java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;(Unknown Source) at java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class;(SecureClassLoader.java:123) at java.net.URLClassLoader.defineClass(Ljava/lang/String;Lsun/misc/Resource;)Ljava/lang/Class;(URLClassLoader.java:251) at java.net.URLClassLoader.access$100(Ljava/net/URLClassLoader;Ljava/lang/String;Lsun/misc/Resource;)Ljava/lang/Class;(URLClassLoader.java:55) at java.net.URLClassLoader$1.run()Ljava/lang/Object;(URLClassLoader.java:194) at jrockit.vm.AccessController.do_privileged_exc(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;I)Ljava/lang/Object;(Unknown Source) at jrockit.vm.AccessController.doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;(Unknown Source) at java.net.URLClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;(URLClassLoader.java:187) at java.lang.ClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class;(Unknown Source) at sun.misc.Launcher$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class;(Launcher.java:274) at java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;(Unknown Source) at java.lang.ClassLoader.loadClassFromNative(II)Ljava/lang/Class;(Unknown Source) at jrockit.vm.RNI.getRunnableCode(I)I(Unknown Source) at jrockit.vm.RNI.trampoline()V(Unknown Source) at org.aspectj.bridge.MessageUtil.info(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;(MessageUtil.java:???) at org.aspectj.bridge.MessageUtil.info(Lorg/aspectj/bridge/IMessageHandler;Ljava/lang/String;)Z(MessageUtil.java:98) at org.aspectj.weaver.tools.WeavingAdaptor.info(Ljava/lang/String;)Z(WeavingAdaptor.java:343) java.lang.IllegalArgumentException: null kind at org.aspectj.bridge.Message.<init>(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/bridge/IMessage$Kind;Lorg/aspectj/bridge/ISourceLocation;Ljava/lang/Throwable;[Lorg/aspectj/bridge/ISourceLocation;ZIII)V(Message.java:89) at org.aspectj.bridge.Message.<init>(Ljava/lang/String;Ljava/lang/String;Lorg/aspectj/bridge/IMessage$Kind;Lorg/aspectj/bridge/ISourceLocation;Ljava/lang/Throwable;[Lorg/aspectj/bridge/ISourceLocation;)V(Message.java:67) at org.aspectj.bridge.Message.<init>(Ljava/lang/String;Lorg/aspectj/bridge/IMessage$Kind;Ljava/lang/Throwable;Lorg/aspectj/bridge/ISourceLocation;)V(Message.java:110) at org.aspectj.bridge.MessageUtil.info(Ljava/lang/String;)Lorg/aspectj/bridge/IMessage;(MessageUtil.java:211) at org.aspectj.bridge.MessageUtil.info(Lorg/aspectj/bridge/IMessageHandler;Ljava/lang/String;)Z(MessageUtil.java:98) at org.aspectj.weaver.tools.WeavingAdaptor.info(Ljava/lang/String;)Z(WeavingAdaptor.java:343) at org.aspectj.weaver.tools.WeavingAdaptor.createMessageHandler()V(WeavingAdaptor.java:168) at org.aspectj.weaver.tools.WeavingAdaptor.<init>()V(WeavingAdaptor.java:80) at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.<init>(Ljava/lang/ClassLoader;Lorg/aspectj/weaver/loadtime/IWeavingContext;)V(ClassLoaderWeavingAdaptor.java:70) at org.aspectj.weaver.loadtime.Aj$WeaverContainer.getWeaver(Ljava/lang/ClassLoader;Lorg/aspectj/weaver/loadtime/IWeavingContext;)Lorg/aspectj/weaver/tools/WeavingAdaptor;(Aj.java:94) at org.aspectj.weaver.loadtime.Aj.preProcess(Ljava/lang/String;[BLjava/lang/ClassLoader;)[B(Aj.java:61) at org.aspectj.weaver.loadtime.JRockitAgent.preProcess(Ljava/lang/ClassLoader;Ljava/lang/String;[B)[B(JRockitAgent.java:74) at jrockit.vm.ClassPreProcessorManager.notifyClassPreProcessor(ILjava/lang/String;[B)[B(Unknown Source) at jrockit.vm.Classes.defineClass0(ILjava/lang/String;[BII)I(Unknown Source) at jrockit.vm.Classes.defineClass(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;(Unknown Source) at java.lang.ClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;(Unknown Source) at java.security.SecureClassLoader.defineClass(Ljava/lang/String;[BIILjava/security/CodeSource;)Ljava/lang/Class;(SecureClassLoader.java:123) at java.net.URLClassLoader.defineClass(Ljava/lang/String;Lsun/misc/Resource;)Ljava/lang/Class;(URLClassLoader.java:251) at java.net.URLClassLoader.access$100(Ljava/net/URLClassLoader;Ljava/lang/String;Lsun/misc/Resource;)Ljava/lang/Class;(URLClassLoader.java:55) at java.net.URLClassLoader$1.run()Ljava/lang/Object;(URLClassLoader.java:194) at jrockit.vm.AccessController.do_privileged_exc(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;I)Ljava/lang/Object;(Unknown Source) at jrockit.vm.AccessController.doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;(Unknown Source) at java.net.URLClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;(URLClassLoader.java:187) at java.lang.ClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class;(Unknown Source) at sun.misc.Launcher$AppClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class;(Launcher.java:274) at java.lang.ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;(Unknown Source) at java.lang.ClassLoader.loadClassFromNative(II)Ljava/lang/Class;(Unknown Source) at jrockit.vm.RNI.getRunnableCode(I)I(Unknown Source) at jrockit.vm.RNI.trampoline()V(Unknown Source) at org.aspectj.bridge.MessageUtil.info(Lorg/aspectj/bridge/IMessageHandler;Ljava/lang/String;)Z(MessageUtil.java:???) at org.aspectj.weaver.tools.WeavingAdaptor.info(Ljava/lang/String;)Z(WeavingAdaptor.java:343) at org.aspectj.weaver.tools.WeavingAdaptor.createMessageHandler()V(WeavingAdaptor.java:168)""",2006-01-03 20:19:46,75afb31,"['loadtime/src/org/aspectj/weaver/loadtime/75afb31 Aj.java', 'loadtime/src/org/aspectj/weaver/loadtime/75afb31 JRockitAgent.java', 'loadtime/testsrc/75afb31 LoadtimeModuleTests.java', 'loadtime/testsrc/org/aspectj/bea/jvm/75afb31 ClassLibraryImpl.java', 'loadtime/testsrc/org/aspectj/bea/jvm/75afb31 JVMImpl.java', 'loadtime/testsrc/org/aspectj/weaver/loadtime/75afb31 JRockitAgentTest.java']"
122728,Bug 122728 ajdoc crashes,,2006-01-05 03:21:00,d69ce9a,"['ajdoc/src/org/aspectj/tools/ajdoc/d69ce9a StubFileGenerator.java', 'ajdoc/testdata/pr122728/src/pack/d69ce9a ClassWithInnerEnum.java', 'ajdoc/testdata/pr122728/src/pack/d69ce9a EnumWithMethods.java', 'ajdoc/testdata/pr122728/src/pack/d69ce9a MyEnum.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/d69ce9a AjdocTests.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/d69ce9a EnumTest.java']"
122742,Bug 122742 [@AspectJ] VerifyError with @AfterThrowing/@AfterReturning and extra JoinPoint argument,"""If an @AspectJ aspect advises itself using after throwing advice that itself throws an exception running the resulting program causes a VerifyError: java.lang.VerifyError: (class: A, method: stop signature: ()V) catch_type not a subclass of Throwable at java.lang.Class.getDeclaredMethods0(Native Method) at java.lang.Class.privateGetDeclaredMethods(Class.java:2365) at java.lang.Class.getMethod0(Class.java:2611) at java.lang.Class.getMethod(Class.java:1579) at org.aspectj.tools.ajc.AjcTestCase.run(AjcTestCase.java:608) at org.aspectj.testing.RunSpec.execute(RunSpec.java:56) at org.aspectj.testing.AjcTest.runTest(AjcTest.java:68) at org.aspectj.testing.XMLBasedAjcTestCase.runTest(XMLBasedAjcTestCase.java:111) at org.aspectj.systemtest.ajc150.Ajc150Tests.testError(Ajc150Tests.java:877) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)""",2006-01-05 06:31:44,3fa1bdd,"['tests/bugs151/pr122742/3fa1bdd AfterReturningTest.java', 'tests/bugs151/pr122742/3fa1bdd AfterThrowingTest.java', 'tests/src/org/aspectj/systemtest/ajc151/3fa1bdd Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/3fa1bdd Advice.java']"
123212,Bug 123212 Skip subversion resources when copying files from input to output folders,Exception when compile a project under svn. java.io.FileNotFoundException at java.io.FileOutputStream.open(Native Method) at java.io.FileOutputStream.<init>(FileOutputStream.java:179) at java.io.FileOutputStream.<init>(FileOutputStream.java:131) at org.aspectj.util.FileUtil.makeOutputStream(FileUtil.java:1258) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.writeResource(AjBuildManager.java:466) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.copyResourcesFromFile(AjBuildManager.java:444) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.copyResourcesToDestination(AjBuildManager.java:386) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:298) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:185) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) FileNotFoundException thrown: /home/chomats/Fede/svn/fede-repos/Tool.Product.ProductServer/classes/.svn/format (Permission non accordee),2006-01-10 04:12:29,d856e4f,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/d856e4f AjBuildManager.java']
123553,Bug 123553 Can't use named pointcut in advice decl. in generic aspect,"""When defining a generic aspect with a paramterized PC, using that PC in an advice declaration causes an 'incompatible type' error. Example: public abstract aspect GenericAspect<Par1> { abstract pointcut checkpoint(Par1 par1); // advice declaration causes error after(Par1 par1): checkpoint(par1) {// do something} } Using 1.3.0.20051220093604 and AspectJ 1.5.0, the compiler complains: """"incompatible type, expected java.lang.Object found BindingTypePattern(TPar1;, 0). Check the type specified in your pointcut"""" Since it is possible to paramterize a named PC in subaspects: public abstract aspect GenericAspect<Par1> { abstract pointcut checkpoint(Par1 par1); } public aspect SubAspect1 extends GenericAspect<Main>{ pointcut checkpoint(Main main): call(void Main.test()) && target(main); after (Main main): checkpoint(main) { System.out.println(""""Caught by 1.""""); } } public aspect SubAspect2 extends GenericAspect<Main2>{ pointcut checkpoint(Main2 main): call(void Main2.test()) && target(main); after (Main2 main): checkpoint(main) { System.out.println(""""Caught by 2.""""); } } ... and since it is possible to use generic PC utilizing unnamed PCs in a generic aspect: public abstract aspect GenericAspect<Par1> { // works after(Par1 par1): call(void Par1.test()) && target(par1) {// something } } ... it seems that this is a bug.""",2006-01-12 00:56:24,1f1ace1,"['tests/bugs151/pr123553/1f1ace1 A.java', 'tests/src/org/aspectj/systemtest/ajc151/1f1ace1 Ajc151Tests.java']"
123612,Bug 123612 ArrayIndexOutOfBoundsException with incremental and declare @type,"""Given the following code: ------------------------------------------------- public aspect A { declare @type : C : @MyAnnotation; } @interface MyAnnotation { } class C { } ------------------------------------------------- if you comment out the declare @type statement and do an incremental build, then the following ArrayIndexOutOfBoundsException occurs: java.lang.ArrayIndexOutOfBoundsException: 0 at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.doDeclareAnnotations(AjLookupEnvironment.java:754) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:571) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIntertypes(AjLookupEnvironment.java:357) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:209) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:301) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:315) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:254) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) This is against the latest code in HEAD.""",2006-01-12 11:08:45,ab2f89b,"['tests/src/org/aspectj/systemtest/incremental/tools/ab2f89b MultiProjectIncrementalTests.java', 'weaver/src/org/aspectj/weaver/ab2f89b CrosscuttingMembersSet.java']"
123901,Bug 123901 NPE in AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:105),java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:105) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.traverse(QualifiedNameReference.java(Compiled Code)) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java(Compiled Code)) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java(Compiled Code)) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java(Compiled Code)) at org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:172) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java(Compiled Code)) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java(Compiled Code)) at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:115) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java(Inlined Compiled Code)) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java(Compiled Code)) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:514) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java(Compiled Code)) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:230) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:185) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null,2006-01-15 08:39:40,693945f,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/693945f AccessForInlineVisitor.java', 'tests/bugs151/pr123901/693945f A.java', 'tests/bugs151/pr123901/693945f B.java', 'tests/bugs151/pr125475/693945f TestEmptyPointcutAtAspect.java', 'tests/src/org/aspectj/systemtest/ajc151/693945f Ajc151Tests.java']"
124399,Bug 124399 AJDT AspectJ Internal Compiler Error,"""In Eclipse 3.1.1 with AJDT 1.3 (the December 20th 2005 release) I got this message in an error dialog: org.aspectj.weaver.BCException at org.aspectj.weaver.bcel.LazyClassGen.getLazyMethodGen(LazyClassGen.java:1216) at org.aspectj.weaver.bcel.LazyClassGen.getLazyMethodGen(LazyClassGen.java:1201) at org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline(BcelShadow.java:2048) at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:232) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:588) at org.aspectj.weaver.Shadow.implement(Shadow.java:405) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2146) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:467) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:102) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1543) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1494) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1275) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1097) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:254) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in: public class edu.ucsd.aosd.MyApplication extends java.lang.Object: public void <init>(): ALOAD_0 // edu.ucsd.aosd.MyApplication this (line 5) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void edu.ucsd.aosd.MyApplication.<init>()) | RETURN constructor-execution(void edu.ucsd.aosd.MyApplication.<init>()) end public void <init>() public static void main(String[]) org.aspectj.weaver.MethodDeclarationLineNumber: 8:124 : method-execution(void edu.ucsd.aosd.MyApplication.main(java.lang.String[])) | ALOAD_0 // java.lang.String[] args (line 9) | ASTORE 4 | ICONST_0 | ISTORE_2 | ALOAD 4 | ARRAYLENGTH | ISTORE_3 | GOTO L1 | L0: ALOAD 4 | ILOAD_2 | AALOAD | ASTORE_1 | GETSTATIC java.lang.System.out Ljava/io/PrintStream; (line 10) | NEW java.lang.StringBuilder | DUP | LDC """"got: """" | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | ALOAD_1 // java.lang.String arg | method-call(java.lang.StringBuilder java.lang.StringBuilder.append(java.lang.String)) | | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | method-call(java.lang.StringBuilder java.lang.StringBuilder.append(java.lang.String)) | method-call(java.lang.String java.lang.StringBuilder.toString()) | | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | method-call(java.lang.String java.lang.StringBuilder.toString()) | ASTORE 5 | ASTORE 6 | method-call(void java.io.PrintStream.println(java.lang.String)) | | ALOAD 6 | | ALOAD 5 | | INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V | method-call(void java.io.PrintStream.println(java.lang.String)) | GETSTATIC java.lang.System.out Ljava/io/PrintStream; (line 11) | LDC """"got: %s\n"""" | ICONST_1 | ANEWARRAY java.lang.Object | DUP | ICONST_0 | ALOAD_1 // java.lang.String arg | AASTORE | method-call(java.io.PrintStream java.io.PrintStream.printf(java.lang.String, java.lang.Object[])) | | INVOKEVIRTUAL java.io.PrintStream.printf (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream; | method-call(java.io.PrintStream java.io.PrintStream.printf(java.lang.String, java.lang.Object[])) | POP | IINC 2 1 (line 9) | L1: ILOAD_2 | ILOAD_3 | IF_ICMPLT L0 | RETURN (line 13) method-execution(void edu.ucsd.aosd.MyApplication.main(java.lang.String[])) end public static void main(String[]) end public class edu.ucsd.aosd.MyApplication when implementing on shadow method-call(void java.io.PrintStream.println(java.lang.String)) when weaving type edu.ucsd.aosd.MyApplication when weaving classes when weaving when incrementally building BuildConfig[C:\EclipseWorkspace\.metadata\.plugins\org.eclipse.ajdt.core\AspectJSemanticsTest.generated.lst] #Files=2 It occured when I editing this file, in an AspectJ project with an recently renamed .aj extension: package edu.ucsd.aosd; import java.io.PrintStream; public class MyApplication { // main public static void main(String[] args) { for (String arg : args) { System.out.println(""""got: """" + arg); System.out.printf(""""got: %s\n"""", arg); } } } aspect Printing { pointcut printlnCalls(PrintStream ps, String out): call(* PrintStream+.println(String)) && target(ps) && args(out); Object around(PrintStream ps, String out): printlnCalls(ps, out) && !adviceexecution() { return proceed(ps, out); } pointcut printfCalls(PrintStream ps, String fmt, Object[] objs): call(* PrintStream+.printf(String, Object...#####)) && target(ps) && args(fmt, objs); } Where """"#####"""" is where my cursor was when I saved. My previously saved version didn't have the printfCalls pointcut nor the call to printf in the main. (Thus, you might want to try the println version first, save it, and then make the new additions. Though, I hope the debug information is enough.)""",2006-01-18 16:59:18,d916002,['tests/src/org/aspectj/systemtest/incremental/tools/d916002 MultiProjectIncrementalTests.java']
124654,Bug 124654 Capture method annotation in generic aspect does not compile,,2006-01-20 10:32:07,28f8c69,"['tests/bugs151/pr124654/28f8c69 GenericAnnotation.java', 'tests/bugs151/pr124654/28f8c69 TestSubAspect.java', 'tests/src/org/aspectj/systemtest/ajc151/28f8c69 Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/patterns/28f8c69 ReferencePointcut.java']"
124803,Bug 124803 [generics] mixing and matching numbers of type variables/parameters in a hierarchy,"""Hi guys! I didn't talk to you for a while, but I've found several new issues related to generics. Here is the first and the most annoying one: 1) Just compile the testcase with iajc and you will get """"java.lang.IllegalStateException: Wrong number of type parameters supplied"""" Java Code: ========= public interface Generic1<T extends Number> { public void foo(T p); } public interface Generic2<T extends Number, Y extends Number> extends Generic1<T> { public void foo2(Y p); } public class Test<Y extends Number> implements Generic2<Y,Y>{ public void foo2(Y p) { } public void foo(Y p) { } } Aspect: ======= public privileged aspect TestAspect { pointcut TestInheritance(Test test) : target(test) && execution (* com.mprv.secsph.Generic1.*(..)); after (Test test) : TestInheritance(test) { System.out.println(""""GO Aspects!""""); } } Exception: ========== iajc abort trouble in: public class com.mprv.secsph.Test extends java.lang.Object implements com.mprv.secsph.Generic2: public void <init>(): ALOAD_0 // com.mprv.secsph.Test this (line 10) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void com.mprv.secsph.Test.<init>()) | RETURN constructor-execution(void com.mprv.secsph.Test.<init>()) end public void <init>() public void foo2(Number) org.aspectj.weaver.MethodDeclarationLineNumber: 11:259 : RETURN (line 12) end public void foo2(Number) public void foo(Number) org.aspectj.weaver.MethodDeclarationLineNumber: 13:287 : RETURN (line 14) end public void foo(Number) end public class com.mprv.secsph.Test -- (IllegalStateException) Wrong number of type parameters supplied Wrong number of type parameters supplied java.lang.IllegalStateException: Wrong number of type parameters supplied at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:609) at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:590) at org.aspectj.weaver.ReferenceType.getDeclaredMethods(ReferenceType.java:472) at org.aspectj.weaver.ResolvedType.addAndRecurse(ResolvedType.java:262) at org.aspectj.weaver.ResolvedType.addAndRecurse(ResolvedType.java:301) at org.aspectj.weaver.ResolvedType.getMethodsWithoutIterator(ResolvedType.java:257) at org.aspectj.weaver.ResolvedType.lookupResolvedMember(ResolvedType.java:375) at org.aspectj.weaver.JoinPointSignatureIterator.findSignaturesFromSupertypes(JoinPointSignatureIterator.java:177) at org.aspectj.weaver.JoinPointSignatureIterator.hasNext(JoinPointSignatureIterator.java:68) at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:286) at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:106) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:145) at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:55) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:145) at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:55) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:145) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:64) at org.aspectj.weaver.Advice.match(Advice.java:109) at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:104) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2149) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:1716) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:458) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:105) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1543) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1494) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1275) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1097) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:819) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:234) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:157) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) at org.aspectj.tools.ajc.Main.run(Main.java:326) at org.aspectj.tools.ajc.Main.runMain(Main.java:240) at org.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTask.java:1254) at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:1048) at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275) at org.apache.tools.ant.Task.perform(Task.java:364) at org.apache.tools.ant.Target.execute(Target.java:341) at org.apache.tools.ant.Target.performTasks(Target.java:369) at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216) at org.apache.tools.ant.Project.executeTarget(Project.java:1185) at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40) at org.apache.tools.ant.Project.executeTargets(Project.java:1068) at org.apache.tools.ant.Main.runBuild(Main.java:668) at org.apache.tools.ant.Main.startAnt(Main.java:187) at org.apache.tools.ant.launch.Launcher.run(Launcher.java:246) at org.apache.tools.ant.launch.Launcher.main(Launcher.java:67) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at com.intellij.rt.ant.execution.AntMain2.main(AntMain2.java:16) warning at after (Test test) : TestInheritance(test) { ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /root/IdeaProjects/aspectsTest/src/com/mprv/secsph/TestAspect.aj:44:0::0 advice defined in com.mprv.secsph.TestAspect has not been applied [Xlint:adviceDidNotMatch]""",2006-01-22 09:50:51,8676df9,"['tests/bugs151/pr124803/8676df9 Test.java', 'tests/bugs151/pr124803/8676df9 Test2.java', 'tests/bugs151/pr124803/8676df9 TestAspect.java', 'tests/bugs151/pr124803/8676df9 TestAspect2.java', 'tests/src/org/aspectj/systemtest/ajc151/8676df9 Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/8676df9 ReferenceType.java']"
124808,Bug 124808 [generics] detecting field-get of field of parameterized type.,"""Hi, Here is the second generics issue: Java code: ========== public class Test<T extends Integer> { Set<T> ints = new HashSet<T>(); public Set<T> foo() { return ints; } public static void main(String[] args) { Test<Integer> t = new Test<Integer>(); Set<Integer> ints = t.foo(); } } Aspect: ======= public privileged aspect TestAspect { pointcut gettingMemberCollection(Test t) : target(t) && get(!public Set<Number+> com.mprv.secsph.*.*) && !within(TestAspect); after (Test test) : gettingMemberCollection(test) { System.out.println(""""GO Aspects!""""); } } Compiler output: ================ warning at after (Test test) : gettingMemberCollection(test) { ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /root/IdeaProjects/aspectsTest/src/com/mprv/secsph/TestAspect.aj:19:0::0 advice defined in com.mprv.secsph.TestAspect has not been applied [Xlint:adviceDidNotMatch] I would expect """"gettingMemberCollection"""" to catch access to """"ints"""" member of """"Test"""" ... Thanks a lot! Misha.""",2006-01-22 11:12:27,01a8b2e,"['tests/bugs151/pr124808/01a8b2e Test.java', 'tests/bugs151/pr124808/01a8b2e TestAspect.java', 'tests/src/org/aspectj/systemtest/ajc151/01a8b2e Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/patterns/01a8b2e ExactTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/01a8b2e TypePattern.java']"
124999,Bug 124999 [generics] Incorrect call to generic inherited method in around advice,,2006-01-24 08:41:13,a4bd19d,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/a4bd19d AccessForInlineVisitor.java', 'tests/src/org/aspectj/systemtest/ajc151/a4bd19d Ajc151Tests.java']"
125101,Bug 125101 StackOverFlow in ReferenceType.isAssignableFrom(),"""Hi. I am weaving two aspects into a jar file """"jar-to-jar"""". ajc 1.5.0 gives me a huge error message (see attachement). Would be great if I could get any recommendations on this. Thanks! Eric""",2006-01-24 19:40:36,efb20c5,['weaver/src/org/aspectj/weaver/bcel/efb20c5 BcelWorld.java']
125295,Bug 125295 fix for bug 58520 caused AJDT test failures,,2006-01-26 04:12:48,7e40a60,"['asm/src/org/aspectj/asm/7e40a60 IProgramElement.java', 'asm/src/org/aspectj/asm/internal/7e40a60 ProgramElement.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/7e40a60 AsmElementFormatter.java', 'tests/bugs151/pr125295/pkg/7e40a60 C.java', 'tests/src/org/aspectj/systemtest/ajc151/7e40a60 Ajc151Tests.java']"
125657,Bug 125657 NullPointerException from BcelShadow.java:1313,"""From within Eclipse 3.0 (RAD 6.0.1) I get an error with the (partial) details listed below. My aspect looks like this: public aspect AAwtEventDispatcherThreadProtection { pointcut awtComponentMethod(java.awt.Component component): target(component) && call(* *.*(..)); before(java.awt.Component component): awtComponentMethod(component) { if (!SwingUtilities.isEventDispatchThread() && component.isDisplayable()) { System.err.println(""""AWT Component method called from another Thread than the AWT-EventDispatchThread! source: """" + thisJoinPoint.getSourceLocation() + """", target: """" + thisJoinPoint.toLongString()); } } } ---------------- DETAILS (shortened because the size exceeded the 65k limit): java.lang.NullPointerException at at org.aspectj.weaver.bcel.BcelShadow.ensureTargetTypeIsCorrect(BcelShadow.java:1313) at at org.aspectj.weaver.bcel.BcelShadow.initializeTargetVar(BcelShadow.java:1274) at at org.aspectj.weaver.bcel.BcelShadow.getTargetVar(BcelShadow.java:968) at at org.aspectj.weaver.patterns.ThisOrTargetPointcut.findResidueInternal(ThisOrTargetPointcut.java:185) at at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:268) at at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:97) at at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:268) at at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:97) at at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:268) at at org.aspectj.weaver.bcel.BcelAdvice.specializeOn(BcelAdvice.java:132) at at org.aspectj.weaver.bcel.BcelShadow.prepareForMungers(BcelShadow.java:313) at at org.aspectj.weaver.Shadow.implement(Shadow.java:404) at at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2146) at at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:467) at at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:102) at at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1543) at at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1494) at at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1275) at at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1097) at at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300) at at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:230) at at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:156) at at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in: public class com.sun.imageio.plugins.gif.GIFImageMetadata extends javax.imageio.metadata.IIOMetadata:""",2006-01-29 18:45:17,4934132,['weaver/src/org/aspectj/weaver/bcel/4934132 BcelShadow.java']
125809,Bug 125809 AjTypeDeclaration in the dom shouldn't have the properties of it's subtype AspectDeclaration,The AjTypeDeclaration should not have the properties 'privileged' and 'perClause' which it's subtype AspectDeclaration has. This was shown up whilst building an aspectj for ajdt and a failure in one of the visitor tests.,2006-01-31 06:23:53,eec4990,"['org.aspectj.ajdt.core/src/org/aspectj/org/eclipse/jdt/core/dom/eec4990 AjTypeDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/org/eclipse/jdt/core/dom/eec4990 AspectDeclaration.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/tools/ajc/eec4990 AjASTTest.java']"
128237,Bug 128237 [@AspectJ] NPE on @AJ code with pointcut which contains logical OR operation.,,2006-02-16 11:21:26,ba42a09,"['tests/bugs151/ba42a09 pr128237.java', 'tests/src/org/aspectj/systemtest/ajc151/ba42a09 Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/bcel/ba42a09 BcelWeaver.java']"
128618,Bug 128618 [incremental] XLint warnings in the wrong place with incremental compilation,"""The zip file I am about to attach contains two AspectJ project, one depending on the other. If you make a small change to MainClass.java in 'Test Project' and save you will see a strange warning in that class - """"advice defined in ras.FFDC has not been applied [Xlint:adviceDidNotMatch]"""". If you do a full build the warning goes away. Note that the error would be on line 36 if there were 36 lines in the class, which relates to a line in the FFDC aspect that contains advice.""",2006-02-20 06:36:46,89d66dc,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/89d66dc WeaverMessageHandler.java', 'tests/multiIncremental/PR128618_2/base/mainpackage/89d66dc MainClass.java', 'tests/multiIncremental/PR128618_2/inc1/mainpackage/89d66dc MainClass.java', 'tests/src/org/aspectj/systemtest/incremental/tools/89d66dc MultiProjectIncrementalTests.java']"
128699,"""Bug 128699 Incorrect error on """"declare"""" statements""","""The error associated with the declare construct is incorrect. The current message is: """"expected one of error, warning, parents, soft, dominates"""" dominates should be changed to """"precendence"""" and new annotation related declararions should be mentioned. Here is a suggestion: """"expected one of error, warning, parents, soft, precedence, @type, @method, @constructor, @field""""""",2006-02-20 13:08:17,f95d2c9,['weaver/src/org/aspectj/weaver/patterns/f95d2c9 PatternParser.java']
128744,Bug 128744 LTW doesn't work using JRE1.4 in Eclipse,"""LTW doesn't work using JRE1.4 in Eclipse now I want to support JRE1.4 when LTW. I defined a aop.xml file in application META-INF path, it works fine using JRE1.4 in command-line, aop.xml file is used when LTW, the command as below: """"D:\work\BTM\eclipse 3.1.1\eclipse-SDK-3.1.1-win32\eclipse-1.4.2\jre\bin\java"""" -classpath """"C:\aspectj1.5\lib\aspectjweaver.jar"""" """"-Djava.system.class.loader=org.aspectj.weaver.loadtime.WeavingURLClassLoader"""" """"-Daj.class.path=D:\work\BTM\eclipse 3.1.1\jre1.4.2\myTest;C:\aspectj1.5\doc\examples\armtest\jar\btm-deps-e3.1.jar;C:\aspectj1.5\doc\examples\armtest\jar\btm-rt.jar"""" Hello but it doesn't work in Eclipse, I added upper command to VM arguments, it can't find aop.xml, because if I changed aop.xml to be wrong, there is no any error when execute the application in Eclipse , but there will be error when execute it in command-line, based on this point, I think that aop.xml didn't be used in Eclipse, I also tried to add """"-Daj.aspect.path=D:\work\BTM\eclipse 3.1.1\jre1.4.2\myTest"""", but it is still. so I want to confirm if AspectJ only supports command-line for JRE1.4? doesn't support Eclipse for JRE1.4? BTW, my Eclipse env: eclipse 3.1.1 + ajdt_1.3_for_eclipse_3.1 + Sun JDK 1.4.2. I also tried to use eclipse 3.1.2, but this problem is still existed.""",2006-02-20 23:38:48,7a2087e,"['loadtime/src/org/aspectj/weaver/loadtime/7a2087e ConcreteAspectCodeGen.java', 'tests/bugs151/pr128744/7a2087e Hello.java', 'tests/bugs151/pr128744/7a2087e World.java', 'tests/src/org/aspectj/systemtest/ajc151/7a2087e Ajc151Tests.java']"
129298,Bug 129298 Contribution: Remove Memory Consuming Declared Signature,The code for weaver.Member#getDeclaredSignature() is never used in the weaver. My memory analysis showed this can pin several megabytes of memory in a large system. This patch removes it. YAGNI :-),2006-02-24 03:45:34,a116142,"['weaver/src/org/aspectj/weaver/a116142 JoinPointSignature.java', 'weaver/src/org/aspectj/weaver/a116142 Member.java', 'weaver/src/org/aspectj/weaver/a116142 MemberImpl.java']"
129525,Bug 129525 Don't Dump Bytecodes to Syserr in LTW,"""The load-time weaving system can produce truly massive quantities of output when there's a weaving error, since the system dumps the bytecode to syserr. It would be much better to produce an ajcore file and just point to it, or use some other log.""",2006-02-27 03:18:33,04fa1dc,"['loadtime/src/org/aspectj/weaver/loadtime/04fa1dc ClassLoaderWeavingAdaptor.java', 'loadtime/src/org/aspectj/weaver/loadtime/04fa1dc WeavingURLClassLoader.java', 'tests/src/org/aspectj/systemtest/ajc153/04fa1dc Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/tools/04fa1dc WeavingAdaptor.java']"
129704,Bug 129704 BCException,"""org.aspectj.weaver.BCException at org.aspectj.weaver.bcel.BcelShadow.initializeKindedAnnotationVars(BcelShadow.java:1553) at org.aspectj.weaver.bcel.BcelShadow.getKindedAnnotationVar(BcelShadow.java:995) at org.aspectj.weaver.patterns.AnnotationPointcut.findResidueInternal(AnnotationPointcut.java:196) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:268) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:97) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:268) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:97) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:268) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:97) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:268) at org.aspectj.weaver.bcel.BcelAdvice.specializeOn(BcelAdvice.java:132) at org.aspectj.weaver.bcel.BcelShadow.prepareForMungers(BcelShadow.java:313) at org.aspectj.weaver.Shadow.implement(Shadow.java:404) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2146) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:467) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:102) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1543) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1494) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1275) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1097) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:300) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:230) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:156) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in: public class com.ytg.bilette.client.core.providers.DomainContentProvider extends java.lang.Object implements com.ytg.bilette.client.core.providers.IRefreshableStructuredContentProvider: private java.util.HashSet listeners [Signature(Ljava/util/HashSet<Lcom/ytg/bilette/client/core/providers/IDomainObjectChangeListener<TT;>;>;)] private com.ytg.bilette.client.core.providers.DomainContentProvider$State state [Signature(Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State;)] private Class clazz [Signature(Ljava/lang/Class<+Lcom/ytg/bilette/model/GenericDomainObject;>;)] private boolean deletable private java.util.List summaries [Signature(Ljava/util/List<TT;>;)] static Class class$0 public void <init>(Class) org.aspectj.weaver.MethodDeclarationLineNumber: 47:1136 : ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 47) &#304;NVOKESPEC&#304;AL java.lang.Object.<init> ()V constructor-execution(void com.ytg.bilette.client.core.providers.DomainContentProvider.<init>(java.lang.Class)) | ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 34) | NEW java.util.HashSet | DUP | &#304;NVOKESPEC&#304;AL java.util.HashSet.<init> ()V | PUTF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.listeners Ljava/util/HashSet; | ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 36) | GETSTAT&#304;C com.ytg.bilette.client.core.providers.DomainContentProvider$State.NOT_INITIALIZED Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; | PUTF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.state Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; | ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 40) | &#304;CONST_0 | PUTF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.deletable Z | ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 48) | ALOAD_1 // java.lang.Class clazz | PUTF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.clazz Ljava/lang/Class; | ALOAD_1 // java.lang.Class clazz (line 50) | &#304;NVOKEV&#304;RTUAL java.lang.Class.getInterfaces ()[Ljava/lang/Class; | ASTORE_2 | &#304;CONST_0 (line 51) | &#304;STORE_3 | GOTO L2 | L0: ALOAD_2 // java.lang.Class[] interfaces (line 52) | &#304;LOAD_3 // int i | AALOAD | LDC com.ytg.bilette.model.Deletable | &#304;NVOKEV&#304;RTUAL java.lang.Object.equals (Ljava/lang/Object;)Z | &#304;FEQ L1 | ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 53) | &#304;CONST_1 | PUTF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.deletable Z | GOTO L3 (line 54) | L1: &#304;&#304;NC 3 1 // int i (line 51) | L2: &#304;LOAD_3 // int i | ALOAD_2 // java.lang.Class[] interfaces | ARRAYLENGTH | &#304;F_&#304;CMPLT L0 | L3: RETURN (line 57) constructor-execution(void com.ytg.bilette.client.core.providers.DomainContentProvider.<init>(java.lang.Class)) end public void <init>(Class) public Object[] getElements(Object) org.aspectj.weaver.MethodDeclarationLineNumber: 65:1611 : ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 66) ALOAD_1 // java.lang.Object input &#304;NVOKESPEC&#304;AL com.ytg.bilette.client.core.providers.DomainContentProvider.checkInput (Ljava/lang/Object;)Z &#304;STORE_2 ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 68) &#304;LOAD_2 // boolean includeDeleted &#304;NVOKEV&#304;RTUAL com.ytg.bilette.client.core.providers.DomainContentProvider.getSummaries (Z)Ljava/util/List; &#304;NVOKE&#304;NTERFACE java.util.List.toArray ()[Ljava/lang/Object; ARETURN end public Object[] getElements(Object) private void checkInitialized(boolean) org.aspectj.weaver.MethodDeclarationLineNumber: 71:1759 : GETSTAT&#304;C com.ytg.bilette.client.core.providers.DomainContentProvider$State.NOT_INITIALIZED Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; (line 72) ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.state Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; &#304;NVOKEV&#304;RTUAL com.ytg.bilette.client.core.providers.DomainContentProvider$State.equals (Ljava/lang/Object;)Z &#304;FNE L0 GETSTAT&#304;C com.ytg.bilette.client.core.providers.DomainContentProvider$State.LIGHT_INITIALIZED Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; (line 73) ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.state Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; &#304;NVOKEV&#304;RTUAL com.ytg.bilette.client.core.providers.DomainContentProvider$State.equals (Ljava/lang/Object;)Z &#304;FEQ L1 &#304;LOAD_1 // boolean includeDeleted &#304;FEQ L1 L0: ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 74) ACONST_NULL ACONST_NULL &#304;LOAD_1 // boolean includeDeleted &#304;NVOKESPEC&#304;AL com.ytg.bilette.client.core.providers.DomainContentProvider.getData (Lcom/ytg/bilette/dao/SummaryDAO;Lorg/eclipse/core/runtime/IProgressMonitor;Z)V L1: RETURN (line 75) end private void checkInitialized(boolean) private boolean checkInput(Object) org.aspectj.weaver.MethodDeclarationLineNumber: 83:2060 : ALOAD_1 // java.lang.Object input (line 84) &#304;NSTANCEOF java.lang.Boolean LDC """"Input for generic content provider must be Boolean value"""" (line 85) &#304;NVOKESTAT&#304;C org.eclipse.jface.util.Assert.isTrue (ZLjava/lang/String;)Z (line 84) POP ALOAD_1 // java.lang.Object input (line 86) CHECKCAST java.lang.Boolean &#304;NVOKEV&#304;RTUAL java.lang.Boolean.booleanValue ()Z &#304;STORE_2 ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 87) GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.deletable Z &#304;FNE L1 ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 88) GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.deletable Z &#304;FNE L0 &#304;LOAD_2 // boolean includeDeleted &#304;FEQ L1 L0: &#304;CONST_0 GOTO L2 L1: &#304;CONST_1 L2: LDC """"Nondeletable object yet deleted flag!"""" (line 89) &#304;NVOKESTAT&#304;C org.eclipse.jface.util.Assert.isLegal (ZLjava/lang/String;)Z (line 87) POP &#304;LOAD_2 // boolean includeDeleted (line 91) &#304;RETURN end private boolean checkInput(Object) public void dispose() org.aspectj.weaver.MethodDeclarationLineNumber: 99:2522 : RETURN (line 101) end public void dispose() public void inputChanged(org.eclipse.jface.viewers.Viewer, Object, Object) org.aspectj.weaver.MethodDeclarationLineNumber: 109:2747 : RETURN (line 111) end public void inputChanged(org.eclipse.jface.viewers.Viewer, Object, Object) private void getData(com.ytg.bilette.dao.SummaryDAO, org.eclipse.core.runtime.IProgressMonitor, boolean) org.aspectj.weaver.MethodDeclarationLineNumber: 115:2954 : ALOAD_1 ASTORE 4 ALOAD_2 ASTORE 5 &#304;LOAD_3 &#304;STORE 6 method-execution(void com.ytg.bilette.client.core.providers.DomainContentProvider.getData(com.ytg.bilette.dao.SummaryDAO, org.eclipse.core.runtime.IProgressMonitor, boolean)) | ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 117) | ALOAD_1 // com.ytg.bilette.dao.SummaryDAO dao | ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this | GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.clazz Ljava/lang/Class; | &#304;LOAD_3 // boolean includeDeleted | &#304;NVOKE&#304;NTERFACE com.ytg.bilette.dao.SummaryDAO.getSummaries (Ljava/lang/Class;Z)Ljava/util/List; | PUTF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.summaries Ljava/util/List; | &#304;LOAD_3 // boolean includeDeleted (line 118) | &#304;FEQ L0 | ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 119) | GETSTAT&#304;C com.ytg.bilette.client.core.providers.DomainContentProvider$State.FULL_INITIALIZED Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; | PUTF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.state Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; | GOTO L1 | L0: ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 121) | GETSTAT&#304;C com.ytg.bilette.client.core.providers.DomainContentProvider$State.LIGHT_INITIALIZED Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; | PUTF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.state Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; | L1: RETURN (line 122) method-execution(void com.ytg.bilette.client.core.providers.DomainContentProvider.getData(com.ytg.bilette.dao.SummaryDAO, org.eclipse.core.runtime.IProgressMonitor, boolean)) end private void getData(com.ytg.bilette.dao.SummaryDAO, org.eclipse.core.runtime.IProgressMonitor, boolean) public java.util.List getSummaries(boolean) org.aspectj.weaver.MethodDeclarationLineNumber: 128:3308 : ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 129) &#304;LOAD_1 // boolean includeDeleted &#304;NVOKESPEC&#304;AL com.ytg.bilette.client.core.providers.DomainContentProvider.checkInitialized (Z)V &#304;LOAD_1 // boolean includeDeleted (line 131) &#304;FNE L0 GETSTAT&#304;C com.ytg.bilette.client.core.providers.DomainContentProvider$State.LIGHT_INITIALIZED Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.state Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; &#304;NVOKEV&#304;RTUAL com.ytg.bilette.client.core.providers.DomainContentProvider$State.equals (Ljava/lang/Object;)Z &#304;FEQ L1 L0: ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 132) GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.summaries Ljava/util/List; ARETURN L1: ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 134) GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.summaries Ljava/util/List; &#304;NVOKE&#304;NTERFACE java.util.List.iterator ()Ljava/util/Iterator; ASTORE_2 NEW java.util.ArrayList (line 135) DUP &#304;NVOKESPEC&#304;AL java.util.ArrayList.<init> ()V ASTORE_3 GOTO L3 (line 136) L2: ALOAD_2 // java.util.Iterator i (line 137) &#304;NVOKE&#304;NTERFACE java.util.Iterator.next ()Ljava/lang/Object; CHECKCAST com.ytg.bilette.model.Deletable CHECKCAST com.ytg.bilette.model.Deletable ASTORE 4 ALOAD 4 // com.ytg.bilette.model.Deletable object (line 138) &#304;NVOKE&#304;NTERFACE com.ytg.bilette.model.Deletable.isDeleted ()Z &#304;FNE L3 ALOAD_3 // java.util.ArrayList list (line 139) ALOAD 4 // com.ytg.bilette.model.Deletable object CHECKCAST com.ytg.bilette.model.GenericDomainObject &#304;NVOKEV&#304;RTUAL java.util.ArrayList.add (Ljava/lang/Object;)Z POP L3: ALOAD_2 // java.util.Iterator i (line 136) &#304;NVOKE&#304;NTERFACE java.util.Iterator.hasNext ()Z &#304;FNE L2 ALOAD_3 // java.util.ArrayList list (line 142) ARETURN end public java.util.List getSummaries(boolean) public synchronized void refresh() org.aspectj.weaver.MethodDeclarationLineNumber: 148:3783 : ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 149) GETSTAT&#304;C com.ytg.bilette.client.core.providers.DomainContentProvider$State.NOT_INITIALIZED Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; PUTF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.state Lcom/ytg/bilette/client/core/providers/DomainContentProvider$State; &#304;CONST_0 (line 150) &#304;STORE_1 ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 152) GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.deletable Z &#304;FEQ L2 ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 153) GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.listeners Ljava/util/HashSet; &#304;NVOKEV&#304;RTUAL java.util.HashSet.iterator ()Ljava/util/Iterator; ASTORE_2 GOTO L1 (line 154) L0: ALOAD_2 // java.util.Iterator i (line 155) &#304;NVOKE&#304;NTERFACE java.util.Iterator.next ()Ljava/lang/Object; CHECKCAST com.ytg.bilette.client.core.providers.IDomainObjectChangeListener ASTORE_3 ALOAD_3 // com.ytg.bilette.client.core.providers.IDomainObjectChangeListener listener (line 156) &#304;NVOKE&#304;NTERFACE com.ytg.bilette.client.core.providers.IDomainObjectChangeListener.isIncludeDeleted ()Z &#304;FEQ L1 &#304;CONST_1 (line 157) &#304;STORE_1 // boolean includeDeleted GOTO L2 (line 158) L1: ALOAD_2 // java.util.Iterator i (line 154) &#304;NVOKE&#304;NTERFACE java.util.Iterator.hasNext ()Z &#304;FNE L0 L2: ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 163) ACONST_NULL ACONST_NULL &#304;LOAD_1 // boolean includeDeleted &#304;NVOKESPEC&#304;AL com.ytg.bilette.client.core.providers.DomainContentProvider.getData (Lcom/ytg/bilette/dao/SummaryDAO;Lorg/eclipse/core/runtime/IProgressMonitor;Z)V ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 165) ACONST_NULL ACONST_NULL &#304;NVOKESPEC&#304;AL com.ytg.bilette.client.core.providers.DomainContentProvider.notifyAllListeners (Lcom/ytg/bilette/model/GenericDomainObject;Lcom/ytg/bilette/model/GenericDomainObject;)V RETURN (line 166) end public synchronized void refresh() private synchronized void notifyAllListeners(com.ytg.bilette.model.GenericDomainObject, com.ytg.bilette.model.GenericDomainObject) org.aspectj.weaver.MethodDeclarationLineNumber: 174:4356 : ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 175) GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.listeners Ljava/util/HashSet; &#304;NVOKEV&#304;RTUAL java.util.HashSet.iterator ()Ljava/util/Iterator; ASTORE_3 GOTO L2 (line 176) L0: ALOAD_3 // java.util.Iterator i (line 177) &#304;NVOKE&#304;NTERFACE java.util.Iterator.next ()Ljava/lang/Object; CHECKCAST com.ytg.bilette.client.core.providers.IDomainObjectChangeListener ASTORE 4 ALOAD_1 // com.ytg.bilette.model.GenericDomainObject oldObj (line 178) &#304;FNONNULL L1 ALOAD_2 // com.ytg.bilette.model.GenericDomainObject newObj &#304;FNONNULL L1 ALOAD 4 // com.ytg.bilette.client.core.providers.IDomainObjectChangeListener listener (line 179) &#304;NVOKE&#304;NTERFACE com.ytg.bilette.client.core.providers.IDomainObjectChangeListener.fullRefresh ()V GOTO L2 L1: ALOAD 4 // com.ytg.bilette.client.core.providers.IDomainObjectChangeListener listener (line 181) ALOAD_1 // com.ytg.bilette.model.GenericDomainObject oldObj ALOAD_2 // com.ytg.bilette.model.GenericDomainObject newObj &#304;NVOKE&#304;NTERFACE com.ytg.bilette.client.core.providers.IDomainObjectChangeListener.concessionChanged (Lcom/ytg/bilette/model/GenericDomainObject;Lcom/ytg/bilette/model/GenericDomainObject;)V L2: ALOAD_3 // java.util.Iterator i (line 176) &#304;NVOKE&#304;NTERFACE java.util.Iterator.hasNext ()Z &#304;FNE L0 RETURN (line 183) end private synchronized void notifyAllListeners(com.ytg.bilette.model.GenericDomainObject, com.ytg.bilette.model.GenericDomainObject) public synchronized void addListener(com.ytg.bilette.client.core.providers.IDomainObjectChangeListener) org.aspectj.weaver.MethodDeclarationLineNumber: 185:4715 : ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 186) GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.listeners Ljava/util/HashSet; ALOAD_1 // com.ytg.bilette.client.core.providers.IDomainObjectChangeListener listener &#304;NVOKEV&#304;RTUAL java.util.HashSet.add (Ljava/lang/Object;)Z POP RETURN (line 187) end public synchronized void addListener(com.ytg.bilette.client.core.providers.IDomainObjectChangeListener) public synchronized void removeListener(com.ytg.bilette.client.core.providers.IDomainObjectChangeListener) org.aspectj.weaver.MethodDeclarationLineNumber: 189:4831 : ALOAD_0 // com.ytg.bilette.client.core.providers.DomainContentProvider this (line 190) GETF&#304;ELD com.ytg.bilette.client.core.providers.DomainContentProvider.listeners Ljava/util/HashSet; ALOAD_1 // com.ytg.bilette.client.core.providers.IDomainObjectChangeListener listener &#304;NVOKEV&#304;RTUAL java.util.HashSet.remove (Ljava/lang/Object;)Z POP RETURN (line 191) end public synchronized void removeListener(com.ytg.bilette.client.core.providers.IDomainObjectChangeListener) end public class com.ytg.bilette.client.core.providers.DomainContentProvider when implementing on shadow method-execution(void com.ytg.bilette.client.core.providers.DomainContentProvider.getData(com.ytg.bilette.dao.SummaryDAO, org.eclipse.core.runtime.IProgressMonitor, boolean)) when weaving type com.ytg.bilette.client.core.providers.DomainContentProvider when weaving classes when weaving when batch building BuildConfig[F:\java\Bilette\.metadata\.plugins\org.eclipse.ajdt.core\com.ytg.bilette.client.core.generated.lst] #Files=22""",2006-02-27 20:32:19,3ca976f,"['tests/bugs152/pr129704/3ca976f A.java', 'tests/src/org/aspectj/systemtest/ajc152/3ca976f Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/bcel/3ca976f BcelShadow.java']"
130300,"""Bug 130300 Remove, hide or obfuscate -XnoWeave""",This option is redundant apart from use in AspectJ development and maintenance. It is confusing to users and is a source new problems for LTW.,2006-03-03 06:27:21,b225911,"['ajde/testsrc/org/aspectj/ajde/b225911 BuildConfigurationTests.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/b225911 BuildArgParser.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/core/b225911 AspectJCore.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/b225911 AjCompilerAdapter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b225911 AjBuildConfig.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b225911 AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b225911 AjCompilerOptions.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/compiler/batch/b225911 BcweaverJarMaker.java', 'org.aspectj.ajdt.core/testsrc/org/aspectj/ajdt/internal/core/builder/b225911 AjCompilerOptionsTest.java', 'taskdefs/src/org/aspectj/tools/ant/taskdefs/b225911 AjcTask.java', 'taskdefs/testsrc/org/aspectj/tools/ant/taskdefs/b225911 AjcTaskTest.java', 'testing/src/org/aspectj/testing/harness/bridge/b225911 CompilerRun.java', 'tests/src/org/aspectj/systemtest/ajc150/b225911 Ajc150Tests.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/b225911 AtAjLTWTests.java', 'tests/src/org/aspectj/systemtest/inpath/b225911 InPathTests.java']"
130722,Bug 130722 poincut references in percflow instantiation model aspects can not be resolved,Take these two aspects and this litte class: // source1 package test1; import test.Test; public aspect PointcutProvider { public pointcut test(): execution(* Test.*(..)); } // source2 package test; import test1.PointcutProvider; public aspect PointcutConsumer percflow(flow()) { // compiler issues the following line with // can not find pointcut test on test.PointcutConsumer pointcut mytest(): PointcutProvider.test(); // this also does not work with the same error message pointcut mytest(): test1.PointcutProvider.test(); pointcut flow(): mytest(); } // source3 package test; public class Test { public void foo() { } } Changing the consumer aspect to singleton instantiation model works.,2006-03-07 05:53:19,b166a7e,"['tests/bugs152/pr130722/test/b166a7e Test.java', 'tests/src/org/aspectj/systemtest/ajc150/b166a7e GenericITDsDesign.java', 'tests/src/org/aspectj/systemtest/ajc152/b166a7e Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/b166a7e CrosscuttingMembers.java', 'weaver/src/org/aspectj/weaver/b166a7e CrosscuttingMembersSet.java', 'weaver/src/org/aspectj/weaver/b166a7e ResolvedType.java', 'weaver/testsrc/org/aspectj/weaver/bcel/b166a7e NonstaticWeaveTestCase.java', 'weaver/testsrc/org/aspectj/weaver/bcel/b166a7e PointcutResidueTestCase.java', 'weaver/testsrc/org/aspectj/weaver/bcel/b166a7e WeaveOrderTestCase.java']"
130837,Bug 130837 Exception while trying to edit Annotation based Aspect Class (normal Java class),java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.ast.ValidateAtAspectJAnnotationsVisitor.buildFormalAdviceBindingsFrom(ValidateAtAspectJAnnotationsVisitor.java:417) at org.aspectj.ajdt.internal.compiler.ast.ValidateAtAspectJAnnotationsVisitor.resolveAndSetPointcut(ValidateAtAspectJAnnotationsVisitor.java:364) at org.aspectj.ajdt.internal.compiler.ast.ValidateAtAspectJAnnotationsVisitor.validateAdvice(ValidateAtAspectJAnnotationsVisitor.java:336) at org.aspectj.ajdt.internal.compiler.ast.ValidateAtAspectJAnnotationsVisitor.visit(ValidateAtAspectJAnnotationsVisitor.java:186) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:185) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1195) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:339) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.beforeAnalysing(AjCompilerAdapter.java:154) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$before$org_aspectj_ajdt_internal_compiler_CompilerAdapter$7$db78446d(CompilerAdapter.aj:101) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:517) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:824) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:234) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:189) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:164) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null,2006-03-07 19:52:08,41f1f3a,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/41f1f3a ValidateAtAspectJAnnotationsVisitor.java']
131505,Bug 131505 Generated aop.xml files contain aspects for all the projects ever built,Using the -outxml option in AJDT the generated aop.xml files are not correct after the first build and contain all the aspects that have ever been built (including those in different projects and duplicates if an aspect has been built twice). It seems that there is a global list of aspects (aspectNames in AjBuildManager) that is never cleared.,2006-03-13 05:37:45,b3cd01d,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b3cd01d AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b3cd01d AjState.java', 'tests/multiIncremental/PR131505/base/b3cd01d C.java', 'tests/multiIncremental/PR131505/inc2/b3cd01d C.java', 'tests/src/org/aspectj/systemtest/incremental/tools/b3cd01d MultiProjectIncrementalTests.java']"
131932,Bug 131932 structure model bug: generic method ITD,"""import java.util.List; public aspect Slide74 { public X Bar<X>.getFirst() { return lts.get(0); } static class Bar<T> { List<T> lts; } } in AJDT, this program incorrectly shows the relationship from the TYPE to the Bar class rather than from the ITD to the Bar class.""",2006-03-15 09:45:01,e2703cf,"['tests/src/org/aspectj/systemtest/ajc151/e2703cf Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/e2703cf NewConstructorTypeMunger.java', 'weaver/src/org/aspectj/weaver/e2703cf NewFieldTypeMunger.java', 'weaver/src/org/aspectj/weaver/e2703cf NewMethodTypeMunger.java']"
131933,Bug 131933 grotty ClassCastException on referring to pointcut in generic type,import java.util.List; public aspect Slide71 { before(): GenericType<String>.foo() {} before(): GenericType<MyList>.foo() {} //before(): GenericType.foo() {} } class GenericType<T> { public pointcut foo(): execution(* T.*(..)); } that programs gives: (because MyList is not a known type) java.lang.ClassCastException at org.aspectj.weaver.patterns.TypePattern.resolveExactType(TypePattern.java:193) at org.aspectj.weaver.patterns.ReferencePointcut.resolveBindings(ReferencePointcut.java:130) at org.aspectj.weaver.patterns.Pointcut.resolve(Pointcut.java:194) at org.aspectj.ajdt.internal.compiler.ast.PointcutDesignator.finishResolveTypes(PointcutDesignator.java:84) at org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:118) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:400) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1088) at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:116) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1137) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:305) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:514) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:843) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:268) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:170) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) ClassCastException thrown: org.aspectj.weaver.patterns.WildTypePattern,2006-03-15 09:46:31,f2cd94f,"['tests/src/org/aspectj/systemtest/ajc151/f2cd94f Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/patterns/f2cd94f TypePattern.java']"
132087,Bug 132087 NPE from unbound variable in advice,I get this error from having an unbound reference to a variable in an aspect. See attached AJDT project for an example. java.lang.NullPointerException at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.visit(AsmHierarchyBuilder.java:412) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:185) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1250) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.traverse(QualifiedAllocationExpression.java:392) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(LocalDeclaration.java:242) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:212) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1195) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:339) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.internalBuild(AsmHierarchyBuilder.java:143) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.buildStructureForCompilationUnit(AsmHierarchyBuilder.java:82) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.finishedCompilationUnit(EclipseFactory.java:927) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing(AjCompilerAdapter.java:201) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184(CompilerAdapter.aj:90) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:528) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:843) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:243) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null,2006-03-15 23:56:13,fa2ed1b,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/fa2ed1b AsmHierarchyBuilder.java']
132130,Bug 132130 Missing relationship for declare @method when annotating a co-located method,"""For this program (when all entered into *one* file) I don't see a marker from the declare to the annotated method. If the annotated method is in another file, I do... (not sure if fields/ctors/types are also a problem..) public aspect basic { declare @method: * debit(..): @Secured(role=""""supervisor""""); } class BankAccount { public void debit(long accId,long amount) { } } @interface Secured { String role(); }""",2006-03-16 06:24:40,9dca72e,"['ajde/testsrc/org/aspectj/ajde/9dca72e AsmDeclarationsTest.java', 'ajde/testsrc/org/aspectj/ajde/9dca72e AsmRelationshipsTest.java', 'ajdoc/testsrc/org/aspectj/tools/ajdoc/9dca72e CoverageTestCase.java', 'asm/src/org/aspectj/asm/internal/9dca72e ProgramElement.java', 'tests/src/org/aspectj/systemtest/ajc151/9dca72e Ajc151Tests.java']"
132160,Bug 132160 NPE in SingleTypeReference,I was C&P'ing the guts of another aspect into a new file (from another project that I'm porting over). There are a number of errors in the aspect (as most of the references point to the other project). I just changed an object from one type (in the other project) to a type in the project that the file is in. Eclipse SDK Version: 3.1.2 Build id: M20060118-1600 Version: 1.3.0 Build id: 20051220093604 AspectJ version: 1.5.0 ---------------------------------------------------------------- java.lang.NullPointerException at org.aspectj.org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding(SingleTypeReference.java:39) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.getTypeBindingPublic(TypeReference.java:98) at org.aspectj.ajdt.internal.core.builder.AsmElementFormatter.genLabelAndKind(AsmElementFormatter.java:230) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.visit(AsmHierarchyBuilder.java:399) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:185) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1250) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.traverse(QualifiedAllocationExpression.java:392) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(LocalDeclaration.java:242) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:212) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1195) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:339) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.internalBuild(AsmHierarchyBuilder.java:142) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.buildStructureForCompilationUnit(AsmHierarchyBuilder.java:82) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.finishedCompilationUnit(EclipseFactory.java:926) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing(AjCompilerAdapter.java:195) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184(CompilerAdapter.aj:89) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:528) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:230) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:185) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null,2006-03-16 09:52:40,91473b3,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/91473b3 AsmElementFormatter.java']
132591,Bug 132591 Duplicate exception with aop.xml file on aspectpath,,2006-03-20 15:51:21,319a0d1,"['ajde/testsrc/org/aspectj/ajde/319a0d1 NullIdeProperties.java', 'ajde/testsrc/org/aspectj/ajde/319a0d1 OutxmlTest.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/319a0d1 AjBuildManager.java']"
132926,Bug 132926 Compiler crashes processing annotations,"""Just upgraded to latest AJDT (Version: 1.3.1, Build id: 20060322082516 AspectJ version: 1.5.1.20060320075953) and the compiler crashed while rebulding the project (which used to work fine using using the March 16th version). Retrying with 'clean' build produced the same crash. java.lang.NullPointerException at org.aspectj.weaver.AnnotationX.ensureAtTargetInitialized(AnnotationX.java:158) at org.aspectj.weaver.AnnotationX.specifiesTarget(AnnotationX.java:98) at org.aspectj.weaver.bcel.BcelWeaver.verifyTargetIsOK(BcelWeaver.java:1450) at org.aspectj.weaver.bcel.BcelWeaver.applyDeclareAtType(BcelWeaver.java:1417) at org.aspectj.weaver.bcel.BcelWeaver.weaveParentTypeMungers(BcelWeaver.java:1366) at org.aspectj.weaver.bcel.BcelWeaver.weaveParentsFor(BcelWeaver.java:1223) at org.aspectj.weaver.bcel.BcelWeaver.weaveParentsFor(BcelWeaver.java:1211) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1058) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:311) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:183) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:845) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:241) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:161) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null""",2006-03-22 20:05:02,2fb86fe,"['tests/bugs151/Deca/2fb86fe DecA.java', 'tests/bugs151/pr132926/2fb86fe AffectedType.java', 'tests/bugs151/pr132926/2fb86fe InputAnnotation.java', 'tests/bugs151/pr132926/2fb86fe InputAnnotation2.java', 'tests/src/org/aspectj/systemtest/ajc151/2fb86fe Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/2fb86fe AnnotationX.java']"
133117,Bug 133117 Lots of warnings with noGuardForLazyTjp,"""When the noGuardForLazyTjp compiler option is set to warning or error and a piece of advice causes this warning to show up, you get one warning for every join point matched by the advice. I think just one would probably be enough...""",2006-03-24 04:47:58,3fa4d24,"['tests/src/org/aspectj/systemtest/incremental/tools/3fa4d24 MultiProjectIncrementalTests.java', 'weaver/src/org/aspectj/weaver/3fa4d24 Lint.java', 'weaver/src/org/aspectj/weaver/bcel/3fa4d24 BcelAdvice.java']"
133307,Bug 133307 declare parents implementing generic interface referencing same type,"""I have the following construct: public interface TestIF<T extends TestIF> {} public class TestClass {} public aspect TestAspect { declare parents: TestClass implements TestIF<TestClass>; } The later aspect does not compile, although public class TestClass implements TestIF<TestClass> { } is a valid class.""",2006-03-26 21:05:35,c9a60e5,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/c9a60e5 AjLookupEnvironment.java', 'tests/src/org/aspectj/systemtest/ajc151/c9a60e5 Ajc151Tests.java', 'weaver/src/org/aspectj/weaver/c9a60e5 CrosscuttingMembersSet.java', 'weaver/src/org/aspectj/weaver/patterns/c9a60e5 IVerificationRequired.java', 'weaver/src/org/aspectj/weaver/patterns/c9a60e5 WildTypePattern.java']"
134371,Bug 134371 ClassCastException in AjState.recordClassFile(),I got this exception while working on a static inner aspect. A full rebuild avoided the problem. java.lang.ClassCastException: org.aspectj.weaver.MissingResolvedTypeWithKnownSignature at org.aspectj.ajdt.internal.core.builder.AjState.recordClassFile(AjState.java:774) at org.aspectj.ajdt.internal.core.builder.AjState.noteResult(AjState.java:627) at org.aspectj.ajdt.internal.core.builder.AjBuildManager$3.acceptResult(AjBuildManager.java:867) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing(AjCompilerAdapter.java:206) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184(CompilerAdapter.aj:90) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:528) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:845) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:266) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:168) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191),2006-04-01 12:05:56,299c3a4,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/299c3a4 AspectDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/299c3a4 EclipseFactory.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/299c3a4 AjState.java', 'tests/src/org/aspectj/systemtest/incremental/tools/299c3a4 MultiProjectIncrementalTests.java']"
134541,Bug 134541 adviceDidNotMatch's line number doesn't keep up with line number of advice,"""When advice doesn't match in a 1.5.0 enabled project, there is an adviceDidNotMatch warning against the line number of the advice. If you insert a line before this advice and save then the warning stays associated with the original line and not the new one. Full building puts the warning against the new line. This is a regression and didn't happen in AJ 1.5.0.""",2006-04-03 12:03:09,94d8b82,"['tests/src/org/aspectj/systemtest/incremental/tools/94d8b82 MultiProjectIncrementalTests.java', 'weaver/src/org/aspectj/weaver/94d8b82 CrosscuttingMembers.java', 'weaver/src/org/aspectj/weaver/94d8b82 CrosscuttingMembersSet.java']"
135001,Bug 135001 NPE at at org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline,java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelShadow.weaveAroundInline(BcelShadow.java:2109) at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:232) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:639) at org.aspectj.weaver.Shadow.implement(Shadow.java:456) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2236) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:491) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:109) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1560) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1511) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1291) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1113) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:311) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:183) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:862) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:242) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:161) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191),2006-04-05 07:10:58,1a6f695,"['tests/bugs152/pr135001/1a6f695 AbstractAspect.java', 'tests/bugs152/pr135001/1a6f695 ConcreteAspect.java', 'tests/bugs152/pr135001/1a6f695 Foo.java', 'tests/src/org/aspectj/systemtest/1a6f695 AllTests15.java', 'tests/src/org/aspectj/systemtest/ajc152/1a6f695 Ajc152Tests.java', 'tests/src/org/aspectj/systemtest/ajc152/1a6f695 AllTestsAspectJ152.java', 'weaver/src/org/aspectj/weaver/bcel/1a6f695 BcelShadow.java', 'weaver/src/org/aspectj/weaver/bcel/1a6f695 BcelWorld.java', 'weaver/testsrc/org/aspectj/weaver/bcel/1a6f695 AsmDelegateTests.java']"
135068,Bug 135068 VerifyError with LTW and @AJ style aspects,"""I get """"VerifyError: Incompatible object argument for function call"""" error when using LTW with @Aspect stype aspects. Interestingly enough, LTW works as expected with equivalent .aj style aspect. Compile time weaving works with both aspect styles. Tested on Linux with AspectJ 1.5.0, 1.5.1 and DEVELOPMENT-20060404163823 and SUN 1.5.0_06 and IBM 1.5.0SR1 JVMs. I will attach example project shortly.""",2006-04-05 12:15:45,9ffc63b,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/9ffc63b ValidateAtAspectJAnnotationsVisitor.java', 'tests/bugs152/pr135068/9ffc63b A.java', 'tests/bugs152/pr135068/9ffc63b Ajava.java', 'tests/bugs152/pr135068/9ffc63b Ajava2.java', 'tests/bugs152/pr135068/9ffc63b C.java', 'tests/bugs152/pr135068/9ffc63b C2.java', 'tests/bugs152/pr135068/t/9ffc63b Ajava.java', 'tests/bugs152/pr135068/t/9ffc63b Ajava2.java', 'tests/bugs152/pr135068/t/9ffc63b C.java', 'tests/bugs152/pr135068/t/9ffc63b C2.java', 'tests/src/org/aspectj/systemtest/ajc152/9ffc63b Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/bcel/9ffc63b AtAjAttributes.java']"
135780,Bug 135780 Java 1.2 dependency in aspectjrt.jar bug with fix,,2006-04-09 22:27:37,cb5dfe7,['runtime/src/org/aspectj/runtime/reflect/cb5dfe7 SignatureImpl.java']
136585,Bug 136585 NullPointerException in PerObjectInterfaceTypeMunger.java:33,"""AspectJ 1.5.1a + AJDT 1.4.0-dev on Eclipse 3.2M6 Using the Sapcewar example, open Game.java and add: public void foo() {} save and an incremental build will fail with: java.lang.NullPointerException at org.aspectj.weaver.PerObjectInterfaceTypeMunger.equals(PerObjectInterfaceTypeMunger.java:33) at org.aspectj.weaver.bcel.BcelTypeMunger.equals(BcelTypeMunger.java:1672) at java.util.AbstractList.equals(AbstractList.java:610) at org.aspectj.weaver.CrosscuttingMembers.replaceWith(CrosscuttingMembers.java:321) at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect(CrosscuttingMembersSet.java:73) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.addCrosscuttingStructures(AjLookupEnvironment.java:397) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.collectAllITDsAndDeclares(AjLookupEnvironment.java:333) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:173) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:301) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:315) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:862) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:269) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:168) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null""",2006-04-13 05:38:44,1535ee7,"['tests/multiIncremental/PR136585/base/1535ee7 Hello.java', 'tests/src/org/aspectj/systemtest/incremental/tools/1535ee7 MultiProjectIncrementalTests.java', 'weaver/src/org/aspectj/weaver/1535ee7 PerObjectInterfaceTypeMunger.java']"
136665,Bug 136665 Bug: ajc fails on missing classpath entries with fix,[iajc] error at (no source information available) [iajc] File.aj:0::0 Internal compiler error [iajc] org.aspectj.weaver.BCException: Can't open archive: missingjar [iajc] when resolving types defined in compilation unit File.aj [iajc] when processing compilation unit File.aj [iajc] when batch building BuildConfig[null] #Files=14 [iajc] [iajc] at org.aspectj.weaver.bcel.ClassPathManager$ZipFileEntry.ensureO pen(ClassPathManager.java:258) [iajc] at org.aspectj.weaver.bcel.ClassPathManager$ZipFileEntry.find(Cl assPathManager.java:225) [iajc] at org.aspectj.weaver.bcel.ClassPathManager.find(ClassPathManage r.java:92) [iajc] at org.aspectj.weaver.bcel.BcelWorld.resolveDelegate(BcelWorld.j ava:287) [iajc] at org.aspectj.weaver.World.resolveToReferenceType(World.java:33 5) [iajc] at org.aspectj.weaver.World.resolve(World.java:251) [iajc] at org.aspectj.weaver.patterns.WildTypePattern.lookupTypeInWorld (WildTypePattern.java:716) [iajc] at org.aspectj.weaver.patterns.WildTypePattern.resolveBindingsFr omFullyQualifiedTypeName(WildTypePattern.java:690) [iajc] at org.aspectj.weaver.patterns.WildTypePattern.resolveBindings(W ildTypePattern.java:623) [iajc] at org.aspectj.weaver.patterns.SignaturePattern.resolveBindings( SignaturePattern.java:82) [iajc] at org.aspectj.weaver.patterns.KindedPointcut.resolveBindings(Ki ndedPointcut.java:259) [iajc] at org.aspectj.weaver.patterns.AndPointcut.resolveBindings(AndPo intcut.java:74) [iajc] at org.aspectj.weaver.patterns.Pointcut.resolve(Pointcut.java:19 4) [iajc] at org.aspectj.ajdt.internal.compiler.ast.PointcutDesignator.fin ishResolveTypes(PointcutDesignator.java:84) [iajc] at org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.reso lveStatements(AdviceDeclaration.java:118) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMet hodDeclaration.resolve(AbstractMethodDeclaration.java:400) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclara tion.resolve(TypeDeclaration.java:1088) [iajc] at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.reso lve(AspectDeclaration.java:116) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclara tion.resolve(TypeDeclaration.java:1137) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.Compilation UnitDeclaration.resolve(CompilationUnitDeclaration.java:305) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.proces s(Compiler.java:514) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compil e(Compiler.java:329) [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.perform Compilation(AjBuildManager.java:845) [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:241) [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBu ild(AjBuildManager.java:161) [iajc] at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:1 12) [iajc] at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java: 60) [iajc] at org.aspectj.tools.ajc.Main.run(Main.java:356) [iajc] at org.aspectj.tools.ajc.Main.runMain(Main.java:246) [iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTas k.java:1262) [iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:1 056) [iajc] at org.apache.tools.ant.UnknownElement.execute(UnknownElement.ja va:275) [iajc] at org.apache.tools.ant.Task.perform(Task.java:364) [iajc] at org.apache.tools.ant.Target.execute(Target.java:341) [iajc] at org.apache.tools.ant.Target.performTasks(Target.java:369) [iajc] at org.apache.tools.ant.Project.executeTarget(Project.java:1214) [iajc] at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:386) [iajc] at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.j ava:106) [iajc] at org.apache.tools.ant.UnknownElement.execute(UnknownElement.ja va:275) [iajc] at org.apache.tools.ant.Task.perform(Task.java:364) [iajc] at org.apache.tools.ant.Target.execute(Target.java:341) [iajc] at org.apache.tools.ant.Target.performTasks(Target.java:369) [iajc] at org.apache.tools.ant.Project.executeTarget(Project.java:1214) [iajc] at org.apache.tools.ant.Project.executeTargets(Project.java:1062 ) [iajc] at org.apache.tools.ant.Main.runBuild(Main.java:673) [iajc] at org.apache.tools.ant.Main.startAnt(Main.java:188) [iajc] at org.apache.tools.ant.launch.Launcher.run(Launcher.java:196) [iajc] at org.apache.tools.ant.launch.Launcher.main(Launcher.java:55) [iajc] Caused by: java.util.zip.ZipException: error in opening zip file [iajc] java.util.zip.ZipException: error in opening zip file [iajc] at java.util.zip.ZipFile.open(Native Method) [iajc] at java.util.zip.ZipFile.<init>(ZipFile.java:111) [iajc] at java.util.zip.ZipFile.<init>(ZipFile.java:127) [iajc] at org.aspectj.weaver.bcel.ClassPathManager$ZipFileEntry.ensureO pen(ClassPathManager.java:252) [iajc] at org.aspectj.weaver.bcel.ClassPathManager$ZipFileEntry.find(Cl assPathManager.java:225) [iajc] at org.aspectj.weaver.bcel.ClassPathManager.find(ClassPathManage r.java:92) [iajc] at org.aspectj.weaver.bcel.BcelWorld.resolveDelegate(BcelWorld.j ava:287) [iajc] at org.aspectj.weaver.World.resolveToReferenceType(World.java:33 5) [iajc] at org.aspectj.weaver.World.resolve(World.java:251) [iajc] at org.aspectj.weaver.patterns.WildTypePattern.lookupTypeInWorld (WildTypePattern.java:716) [iajc] at org.aspectj.weaver.patterns.WildTypePattern.resolveBindingsFr omFullyQualifiedTypeName(WildTypePattern.java:690) [iajc] at org.aspectj.weaver.patterns.WildTypePattern.resolveBindings(W ildTypePattern.java:623) [iajc] at org.aspectj.weaver.patterns.SignaturePattern.resolveBindings( SignaturePattern.java:82) [iajc] at org.aspectj.weaver.patterns.KindedPointcut.resolveBindings(Ki ndedPointcut.java:259) [iajc] at org.aspectj.weaver.patterns.AndPointcut.resolveBindings(AndPo intcut.java:74) [iajc] at org.aspectj.weaver.patterns.Pointcut.resolve(Pointcut.java:19 4) [iajc] at org.aspectj.ajdt.internal.compiler.ast.PointcutDesignator.fin ishResolveTypes(PointcutDesignator.java:84) [iajc] at org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.reso lveStatements(AdviceDeclaration.java:118) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMet hodDeclaration.resolve(AbstractMethodDeclaration.java:400) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclara tion.resolve(TypeDeclaration.java:1088) [iajc] at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.reso lve(AspectDeclaration.java:116) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclara tion.resolve(TypeDeclaration.java:1137) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.Compilation UnitDeclaration.resolve(CompilationUnitDeclaration.java:305) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.proces s(Compiler.java:514) [iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compil e(Compiler.java:329) [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.perform Compilation(AjBuildManager.java:845) [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:241) [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBu ild(AjBuildManager.java:161) [iajc] at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:1 12) [iajc] at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java: 60) [iajc] at org.aspectj.tools.ajc.Main.run(Main.java:356) [iajc] at org.aspectj.tools.ajc.Main.runMain(Main.java:246) [iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTas k.java:1262) [iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:1 056) [iajc] at org.apache.tools.ant.UnknownElement.execute(UnknownElement.ja va:275) [iajc] at org.apache.tools.ant.Task.perform(Task.java:364) [iajc] at org.apache.tools.ant.Target.execute(Target.java:341) [iajc] at org.apache.tools.ant.Target.performTasks(Target.java:369) [iajc] at org.apache.tools.ant.Project.executeTarget(Project.java:1214) [iajc] at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:386) [iajc] at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.j ava:106) [iajc] at org.apache.tools.ant.UnknownElement.execute(UnknownElement.ja va:275) [iajc] at org.apache.tools.ant.Task.perform(Task.java:364) [iajc] at org.apache.tools.ant.Target.execute(Target.java:341) [iajc] at org.apache.tools.ant.Target.performTasks(Target.java:369) [iajc] at org.apache.tools.ant.Project.executeTarget(Project.java:1214) [iajc] at org.apache.tools.ant.Project.executeTargets(Project.java:1062 ) [iajc] at org.apache.tools.ant.Main.runBuild(Main.java:673) [iajc] at org.apache.tools.ant.Main.startAnt(Main.java:188) [iajc] at org.apache.tools.ant.launch.Launcher.run(Launcher.java:196) [iajc] at org.apache.tools.ant.launch.Launcher.main(Launcher.java:55) [iajc] abort ABORT -- (BCException) Can't open archive: wissing.jar [iajc] when resolving types defined in compilation unit File.aj [iajc] when processing compilation unit File.aj [iajc] when batch building BuildConfig[null] #Files=14,2006-04-13 11:34:02,d1a252e,['weaver/src/org/aspectj/weaver/bcel/d1a252e ClassPathManager.java']
136707,Bug 136707 iajc should print summary like javac,"""The iajc ant task should produce a summary of what it is doing, like the javac task does: [javac] Compiling 189 source files to C:\project\classes""",2006-04-13 14:23:22,008efca,"['taskdefs/src/org/aspectj/tools/ant/taskdefs/008efca AjcTask.java', 'taskdefs/testsrc/org/aspectj/tools/ant/taskdefs/008efca AjcTaskTest.java']"
138223,Bug 138223 Compiler crash on two binding @xxx pcds in one compound expression,"""junit.framework.AssertionFailedError: test """"Double at annotation matching (no binding)"""" failed test """"Double at annotation matching (no binding)"""" failed Unexpected warning messages: warning at before() : transactionalOperation() { ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /private/tmp/ajcSandbox/ajcTest18924.tmp/DoubleAnnotationMatching.aj:20:0::0 advice defined in DoubleAnnotationMatching has not been applied [Xlint:adviceDidNotMatch] Unexpected fail messages: abort trouble in: class Foo extends java.lang.Object: void <init>(): ALOAD_0 // LFoo; this (line 26) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void Foo.<init>()) | RETURN constructor-execution(void Foo.<init>()) end void <init>() public void foo() org.aspectj.weaver.MethodDeclarationLineNumber: 28:533 : method-execution(void Foo.foo()) | RETURN (line 28) method-execution(void Foo.foo()) end public void foo() public void bar() org.aspectj.weaver.MethodDeclarationLineNumber: 30:563 : method-execution(void Foo.bar()) | RETURN (line 30) method-execution(void Foo.bar()) end public void bar() end class Foo -- (BCException) Impossible! annotation=[Tx] shadow=[method-execution(void Foo.foo()) at /private/tmp/ajcSandbox/ajcTest18924.tmp/DoubleAnnotationMatching.aj:28::533] pointcut is at [/private/tmp/ajcSandbox/ajcTest18924.tmp/DoubleAnnotationMatching.aj:15::316] when implementing on shadow method-execution(void Foo.foo()) when weaving type Foo when weaving classes when weaving when batch building BuildConfig[null] #Files=1 Impossible! annotation=[Tx] shadow=[method-execution(void Foo.foo()) at /private/tmp/ajcSandbox/ajcTest18924.tmp/DoubleAnnotationMatching.aj:28::533] pointcut is at [/private/tmp/ajcSandbox/ajcTest18924.tmp/DoubleAnnotationMatching.aj:15::316] when implementing on shadow method-execution(void Foo.foo()) when weaving type Foo when weaving classes when weaving when batch building BuildConfig[null] #Files=1 org.aspectj.weaver.BCException: Impossible! annotation=[Tx] shadow=[method-execution(void Foo.foo()) at /private/tmp/ajcSandbox/ajcTest18924.tmp/DoubleAnnotationMatching.aj:28::533] pointcut is at [/private/tmp/ajcSandbox/ajcTest18924.tmp/DoubleAnnotationMatching.aj:15::316] when implementing on shadow method-execution(void Foo.foo()) when weaving type Foo when weaving classes when weaving when batch building BuildConfig[null] #Files=1 at org.aspectj.weaver.patterns.AnnotationPointcut.findResidueInternal(AnnotationPointcut.java:201) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:93) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:93) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.IfPointcut.findResidueInternal(IfPointcut.java:173) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:93) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:93) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.patterns.OrPointcut.findResidueInternal(OrPointcut.java:96) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:267) at org.aspectj.weaver.bcel.BcelAdvice.specializeOn(BcelAdvice.java:132) at org.aspectj.weaver.bcel.BcelShadow.prepareForMungers(BcelShadow.java:325) at org.aspectj.weaver.Shadow.implement(Shadow.java:455) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2236) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:491) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:109) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1560) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1511) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1291) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1113) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:311) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:183) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:862) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:242) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:161) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:114) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) at org.aspectj.tools.ajc.Main.run(Main.java:367) at org.aspectj.tools.ajc.Main.runMain(Main.java:246) at org.aspectj.tools.ajc.Ajc.compile(Ajc.java:199) at org.aspectj.tools.ajc.Ajc.compile(Ajc.java:163) at org.aspectj.tools.ajc.AjcTestCase.ajc(AjcTestCase.java:510) at org.aspectj.testing.CompileSpec.execute(CompileSpec.java:53) at org.aspectj.testing.AjcTest.runTest(AjcTest.java:68) at org.aspectj.testing.XMLBasedAjcTestCase.runTest(XMLBasedAjcTestCase.java:111) at org.aspectj.systemtest.ajc152.Ajc152Tests.testDoubleAnnotationMatching_pr138221(Ajc152Tests.java:37) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196) command was: ajc -classpath /Users/adrian/projects/aspectjdev/lib/test/aspectjrt.jar:../testing-client/bin:../runtime/bin:../aspectj5rt/bin:../lib/junit/junit.jar:../bridge/bin:../loadtime/bin:../weaver/bin:../weaver5/bin:../aj-build/jars/bridge.jar:../aj-build/jars/util.jar:../aj-build/jars/loadtime.jar:../aj-build/jars/weaver.jar:../aj-build/jars/weaver5.jar:../aj-build/jars/asm.jar:../lib/test/testing-client.jar:../lib/test/aspectjrt.jar:/tmp/ajcSandbox/ajcTest18924.tmp -1.5 /tmp/ajcSandbox/ajcTest18924.tmp/DoubleAnnotationMatching.aj -d /tmp/ajcSandbox/ajcTest18924.tmp at junit.framework.Assert.fail(Assert.java:47) at org.aspectj.tools.ajc.AjcTestCase.assertMessages(AjcTestCase.java:452) at org.aspectj.testing.CompileSpec.execute(CompileSpec.java:56) at org.aspectj.testing.AjcTest.runTest(AjcTest.java:68) at org.aspectj.testing.XMLBasedAjcTestCase.runTest(XMLBasedAjcTestCase.java:111) at org.aspectj.systemtest.ajc152.Ajc152Tests.testDoubleAnnotationMatching_pr138221(Ajc152Tests.java:37) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)""",2006-04-24 13:17:07,6b2d9ae,"['tests/src/org/aspectj/systemtest/ajc152/6b2d9ae Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/patterns/6b2d9ae AnnotationPointcut.java']"
138286,Bug 138286 perthis() causes ClassCastException,"""When using perthis() with an aspect, I see the following Internal Compiler AJDT 1.3.1 / AspectJ 1.5.1a Build 20060406092046 Eclipse 3.1.2, Windows XP, JDK 1.5 Error: java.lang.ClassCastException at org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.getPerTypePointcut(PerThisOrTargetPointcutVisitor.java:41) at org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.visit(PerThisOrTargetPointcutVisitor.java:108) at org.aspectj.weaver.patterns.AndPointcut.accept(AndPointcut.java:119) at org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor.getPerTypePointcut(PerThisOrTargetPointcutVisitor.java:41) at org.aspectj.weaver.PerObjectInterfaceTypeMunger.getTestTypePattern(PerObjectInterfaceTypeMunger.java:64) at org.aspectj.weaver.PerObjectInterfaceTypeMunger.matches(PerObjectInterfaceTypeMunger.java:85) at org.aspectj.weaver.ConcreteTypeMunger.matches(ConcreteTypeMunger.java:65) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:508) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:109) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1560) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1511) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1291) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1089) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:311) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:183) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:862) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:242) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:161) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:278) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:168) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in: public abstract class org.apache.tapestry.internal.aspects.AbstractClassTargetting extends java.lang.Object: public void <init>(): ALOAD_0 // Lorg/apache/tapestry/internal/aspects/AbstractClassTargetting; this (line 10) INVOKESPECIAL java.lang.Object.<init> ()V initialization(void org.apache.tapestry.internal.aspects.AbstractClassTargetting.<init>()) | ALOAD_0 | INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class; | LDC org.apache.tapestry.internal.annotations.Synchronized | INVOKEVIRTUAL java.lang.Class.isAnnotationPresent (Ljava/lang/Class;)Z | IFEQ L0 | ALOAD_0 | INVOKESTATIC org.apache.tapestry.internal.aspects.InternalSynchronization.ajc$perObjectBind (Ljava/lang/Object;)V | constructor-execution(void org.apache.tapestry.internal.aspects.AbstractClassTargetting.<init>()) | | L0: ALOAD_0 | | INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class; | | LDC org.apache.tapestry.internal.annotations.Synchronized | | INVOKEVIRTUAL java.lang.Class.isAnnotationPresent (Ljava/lang/Class;)Z | | IFEQ L1 | | ALOAD_0 | | INVOKESTATIC org.apache.tapestry.internal.aspects.InternalSynchronization.ajc$perObjectBind (Ljava/lang/Object;)V | | L1: RETURN | constructor-execution(void org.apache.tapestry.internal.aspects.AbstractClassTargetting.<init>()) initialization(void org.apache.tapestry.internal.aspects.AbstractClassTargetting.<init>()) end public void <init>() abstract void ajc$pointcut$$targetClasses$274() org.aspectj.weaver.MethodDeclarationLineNumber: 16:628 ; end public abstract class org.apache.tapestry.internal.aspects.AbstractClassTargetting when weaving type org.apache.tapestry.internal.aspects.AbstractClassTargetting when weaving aspects when weaving when batch building BuildConfig[C:\workspace\.metadata\.plugins\org.eclipse.ajdt.core\tapestry5.generated.lst] #Files=70 I'll attach the corresponding files.""",2006-04-24 18:29:34,c667bcb,"['tests/src/org/aspectj/systemtest/ajc152/c667bcb Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/patterns/c667bcb PerThisOrTargetPointcutVisitor.java']"
138384,Bug 138384 java.lang.ClassFormatError: Invalid method Code length 83071 in class file org/eclipse/jdt/internal/compiler/impl/Constant,,2006-04-25 10:58:41,5d2b5b8,"['bcel-builder/src/org/aspectj/apache/bcel/generic/5d2b5b8 InstructionList.java', 'tests/bugs152/pr138384/5d2b5b8 BigMethod.java', 'tests/src/org/aspectj/systemtest/ajc152/5d2b5b8 Ajc152Tests.java']"
138540,Bug 138540 Patch to add support for -Xset: options,"""I needed to add X=""""set:activateLightweightDelegates=false to my ant build configuration, to troubleshoot the out of memory permgen condition. However, the ant task support doesn't currently support adding the new -Xset style options Andy added. Here is a small patch to pass any -Xset: options through, that worked for me.""",2006-04-25 20:18:31,99882cb,['taskdefs/src/org/aspectj/tools/ant/taskdefs/99882cb AjcTask.java']
138798,Bug 138798 BCException on invalid annotation match,"""This unfortunately invalid code: before(Throwable throwable, NormalException normalException) : handler(*) && args(throwable) && @withincode(normalException) { ... Generates this exception in AJDT with post-1.5.1a AspectJ org.aspectj.weaver.BCException at org.aspectj.weaver.bcel.BcelRenderer.visit(BcelRenderer.java:237) at org.aspectj.weaver.ast.Literal.accept(Literal.java:29) at org.aspectj.weaver.bcel.BcelRenderer.recur(BcelRenderer.java:153) at org.aspectj.weaver.bcel.BcelRenderer.renderTest(BcelRenderer.java:119) at org.aspectj.weaver.bcel.BcelAdvice.getTestInstructions(BcelAdvice.java:537) at org.aspectj.weaver.bcel.BcelAdvice.getAdviceInstructions(BcelAdvice.java:376) at org.aspectj.weaver.bcel.BcelShadow.weaveBefore(BcelShadow.java:1690) at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:208) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:639) at org.aspectj.weaver.Shadow.implement(Shadow.java:456) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2236) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:491) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:109) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1560) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1511) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1291) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1113) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:311) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:183) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:862) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:242) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:161) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in: public class glassbox.client.ConnectionManager extends java.lang.Object: public static String propnameNum public static String propnameDefault public static String propnameViewed public static String propnameNickPrefix public static String propnameUrlPrefix public static String propnameViewedPrefix private static String propFilename private static String localhostNickname public static String localhostURL private java.util.List connectionList [Signature(Ljava/util/List<Lglassbox/client/ConnectionManager$AgentConnection;>;)] private int defaultConnectionIndex private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0 static void <clinit>(): staticinitialization(void glassbox.client.ConnectionManager.<clinit>()) | LDC """"glassbox.connections.num"""" (line 13) | PUTSTATIC glassbox.client.ConnectionManager.propnameNum Ljava/lang/String; | LDC """"glassbox.connections.default"""" (line 14) | PUTSTATIC glassbox.client.ConnectionManager.propnameDefault Ljava/lang/String; | LDC """"glassbox.connections.viewed"""" (line 15) | PUTSTATIC glassbox.client.ConnectionManager.propnameViewed Ljava/lang/String; | LDC """"glassbox.connections.nickname_"""" (line 16) | PUTSTATIC glassbox.client.ConnectionManager.propnameNickPrefix Ljava/lang/String; | LDC """"glassbox.connections.url_"""" (line 17) | PUTSTATIC glassbox.client.ConnectionManager.propnameUrlPrefix Ljava/lang/String; | LDC """"glassbox.connections.viewed_"""" (line 18) | PUTSTATIC glassbox.client.ConnectionManager.propnameViewedPrefix Ljava/lang/String; | LDC """"connection.properties"""" (line 20) | PUTSTATIC glassbox.client.ConnectionManager.propFilename Ljava/lang/String; | LDC """"localhost"""" (line 21) | PUTSTATIC glassbox.client.ConnectionManager.localhostNickname Ljava/lang/String; | LDC """"service:jmx:rmi://localhost:7131/jndi/rmi://localhost:7132/GlassboxTroubleshooter"""" (line 22) | PUTSTATIC glassbox.client.ConnectionManager.localhostURL Ljava/lang/String; | RETURN (line 11) staticinitialization(void glassbox.client.ConnectionManager.<clinit>()) end static void <clinit>() public void <init>() org.aspectj.weaver.MethodDeclarationLineNumber: 23:966 : ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 23) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void glassbox.client.ConnectionManager.<init>()) | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 24) | INVOKEVIRTUAL glassbox.client.ConnectionManager.init ()V | RETURN (line 25) constructor-execution(void glassbox.client.ConnectionManager.<init>()) end public void <init>() public void init() org.aspectj.weaver.MethodDeclarationLineNumber: 67:1992 : method-execution(void glassbox.client.ConnectionManager.init()) | catch java.lang.RuntimeException -> E0 | | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 69) | | INVOKEVIRTUAL glassbox.client.ConnectionManager.readFromFile ()V | | GOTO L0 | catch java.lang.RuntimeException -> E0 | E0: ASTORE_2 | exception-handler(void glassbox.client.ConnectionManager.<catch>(java.lang.RuntimeException)) | | ALOAD_2 | exception-handler(void glassbox.client.ConnectionManager.<catch>(java.lang.RuntimeException)) | ASTORE_1 (line 70) | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 71) | INVOKEVIRTUAL glassbox.client.ConnectionManager.createDefaultList ()V | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 72) | INVOKEVIRTUAL glassbox.client.ConnectionManager.writeToFile ()V | L0: RETURN (line 74) method-execution(void glassbox.client.ConnectionManager.init()) end public void init() public void createDefaultList() org.aspectj.weaver.MethodDeclarationLineNumber: 76:2134 : method-execution(void glassbox.client.ConnectionManager.createDefaultList()) | NEW glassbox.client.ConnectionManager$AgentConnection (line 77) | DUP | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETSTATIC glassbox.client.ConnectionManager.localhostNickname Ljava/lang/String; | GETSTATIC glassbox.client.ConnectionManager.localhostURL Ljava/lang/String; | ICONST_1 | INVOKESPECIAL glassbox.client.ConnectionManager$AgentConnection.<init> (Lglassbox/client/ConnectionManager;Ljava/lang/String;Ljava/lang/String;Z)V | ASTORE_1 | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 78) | NEW java.util.ArrayList | DUP | INVOKESPECIAL java.util.ArrayList.<init> ()V | PUTFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 79) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | ALOAD_1 // Lglassbox/client/ConnectionManager$AgentConnection; localhost | INVOKEINTERFACE java.util.List.add (Ljava/lang/Object;)Z | POP | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 80) | ICONST_0 | PUTFIELD glassbox.client.ConnectionManager.defaultConnectionIndex I | RETURN (line 81) method-execution(void glassbox.client.ConnectionManager.createDefaultList()) end public void createDefaultList() public void writeToFile() org.aspectj.weaver.MethodDeclarationLineNumber: 84:2433 : method-execution(void glassbox.client.ConnectionManager.writeToFile()) | NEW java.util.Properties (line 85) | DUP | INVOKESPECIAL java.util.Properties.<init> ()V | ASTORE_1 | ALOAD_1 // Ljava/util/Properties; properties (line 86) | GETSTATIC glassbox.client.ConnectionManager.propnameNum Ljava/lang/String; | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | INVOKEINTERFACE java.util.List.size ()I | INVOKESTATIC java.lang.String.valueOf (I)Ljava/lang/String; | INVOKEVIRTUAL java.util.Properties.setProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; | POP | ALOAD_1 // Ljava/util/Properties; properties (line 87) | GETSTATIC glassbox.client.ConnectionManager.propnameDefault Ljava/lang/String; | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETFIELD glassbox.client.ConnectionManager.defaultConnectionIndex I | INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getNickname ()Ljava/lang/String; | INVOKEVIRTUAL java.util.Properties.setProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; | POP | ICONST_0 (line 88) | ISTORE_2 | GOTO L1 | L0: ALOAD_1 // Ljava/util/Properties; properties (line 89) | NEW java.lang.StringBuilder | DUP | GETSTATIC glassbox.client.ConnectionManager.propnameNickPrefix Ljava/lang/String; | INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String; | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | ILOAD_2 // I i | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | ILOAD_2 // I i | INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getNickname ()Ljava/lang/String; | INVOKEVIRTUAL java.util.Properties.setProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; | POP | ALOAD_1 // Ljava/util/Properties; properties (line 90) | NEW java.lang.StringBuilder | DUP | GETSTATIC glassbox.client.ConnectionManager.propnameUrlPrefix Ljava/lang/String; | INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String; | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | ILOAD_2 // I i | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | ILOAD_2 // I i | INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getUrl ()Ljava/lang/String; | INVOKEVIRTUAL java.util.Properties.setProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; | POP | ALOAD_1 // Ljava/util/Properties; properties (line 91) | NEW java.lang.StringBuilder | DUP | GETSTATIC glassbox.client.ConnectionManager.propnameViewedPrefix Ljava/lang/String; | INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String; | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | ILOAD_2 // I i | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | ILOAD_2 // I i | INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.isViewed ()Z | INVOKESTATIC java.lang.String.valueOf (Z)Ljava/lang/String; | INVOKEVIRTUAL java.util.Properties.setProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object; | POP | IINC 2 1 // I i (line 88) | L1: ILOAD_2 // I i | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | INVOKEINTERFACE java.util.List.size ()I | IF_ICMPLT L0 | catch java.io.IOException -> E0 | | NEW java.io.File (line 94) | | DUP | | GETSTATIC glassbox.client.ConnectionManager.propFilename Ljava/lang/String; | | INVOKESPECIAL java.io.File.<init> (Ljava/lang/String;)V | | ASTORE_2 | | NEW java.io.FileOutputStream (line 95) | | DUP | | ALOAD_2 // Ljava/io/File; f | | ICONST_0 | | INVOKESPECIAL java.io.FileOutputStream.<init> (Ljava/io/File;Z)V | | ASTORE_3 | | ALOAD_1 // Ljava/util/Properties; properties (line 96) | | ALOAD_3 // Ljava/io/FileOutputStream; fos | | ACONST_NULL | | INVOKEVIRTUAL java.util.Properties.store (Ljava/io/OutputStream;Ljava/lang/String;)V | | ALOAD_3 // Ljava/io/FileOutputStream; fos (line 97) | | INVOKEVIRTUAL java.io.FileOutputStream.close ()V | | GOTO L2 | catch java.io.IOException -> E0 | E0: ASTORE_2 (line 98) | GETSTATIC java.lang.System.err Ljava/io/PrintStream; (line 99) | LDC """"Failed to write connection.properties file"""" | INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V | GETSTATIC java.lang.System.err Ljava/io/PrintStream; (line 100) | ALOAD_2 // Ljava/io/IOException; e | INVOKEVIRTUAL java.io.IOException.toString ()Ljava/lang/String; | INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V | L2: RETURN (line 102) method-execution(void glassbox.client.ConnectionManager.writeToFile()) end public void writeToFile() public void readFromFile() org.aspectj.weaver.MethodDeclarationLineNumber: 105:3495 : method-execution(void glassbox.client.ConnectionManager.readFromFile()) | NEW java.util.ArrayList (line 107) | DUP | INVOKESPECIAL java.util.ArrayList.<init> ()V | ASTORE_1 | NEW java.util.Properties (line 108) | DUP | INVOKESPECIAL java.util.Properties.<init> ()V | ASTORE_2 | NEW java.io.File (line 110) | DUP | GETSTATIC glassbox.client.ConnectionManager.propFilename Ljava/lang/String; | INVOKESPECIAL java.io.File.<init> (Ljava/lang/String;)V | ASTORE 4 | catch java.io.IOException -> E0 | | ALOAD_2 // Ljava/util/Properties; properties (line 112) | | NEW java.io.FileInputStream | | DUP | | ALOAD 4 // Ljava/io/File; f | | INVOKESPECIAL java.io.FileInputStream.<init> (Ljava/io/File;)V | | INVOKEVIRTUAL java.util.Properties.load (Ljava/io/InputStream;)V | | GOTO L0 | catch java.io.IOException -> E0 | E0: ASTORE 5 (line 113) | NEW java.lang.RuntimeException (line 116) | DUP | NEW java.lang.StringBuilder | DUP | LDC """"Can't open """" | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | ALOAD 4 // Ljava/io/File; f | INVOKEVIRTUAL java.io.File.getAbsolutePath ()Ljava/lang/String; | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/String;)V | ATHROW | catch java.lang.Exception -> E1 | | L0: ALOAD_2 // Ljava/util/Properties; properties (line 119) | | GETSTATIC glassbox.client.ConnectionManager.propnameNum Ljava/lang/String; | | INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String; | | INVOKESTATIC java.lang.Integer.valueOf (Ljava/lang/String;)Ljava/lang/Integer; | | INVOKEVIRTUAL java.lang.Integer.intValue ()I | | ISTORE 5 | | ALOAD_2 // Ljava/util/Properties; properties (line 120) | | GETSTATIC glassbox.client.ConnectionManager.propnameDefault Ljava/lang/String; | | INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String; | | ASTORE 6 | | ALOAD 6 // Ljava/lang/String; defNickname (line 121) | | IFNONNULL L1 | | NEW java.lang.RuntimeException | | DUP | | NEW java.lang.StringBuilder | | DUP | | LDC """"missing """" | | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | | GETSTATIC glassbox.client.ConnectionManager.propnameDefault Ljava/lang/String; | | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | | INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/String;)V | | ATHROW | | L1: ILOAD 5 // I num (line 122) | | ICONST_1 | | IF_ICMPGE L2 | | NEW java.lang.RuntimeException | | DUP | | NEW java.lang.StringBuilder | | DUP | | LDC """"Bad """" | | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | | GETSTATIC glassbox.client.ConnectionManager.propnameNum Ljava/lang/String; | | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | | LDC """"="""" | | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | | ILOAD 5 // I num | | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | | INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/String;)V | | ATHROW | | L2: ICONST_0 (line 123) | | ISTORE 7 | | GOTO L9 | | L3: ALOAD_2 // Ljava/util/Properties; properties (line 124) | | NEW java.lang.StringBuilder | | DUP | | GETSTATIC glassbox.client.ConnectionManager.propnameNickPrefix Ljava/lang/String; | | INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String; | | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | | ILOAD 7 // I i | | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | | INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String; | | ASTORE 8 | | ALOAD 8 // Ljava/lang/String; nickname (line 125) | | IFNONNULL L4 | | NEW java.lang.RuntimeException | | DUP | | NEW java.lang.StringBuilder | | DUP | | LDC """"missing """" | | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | | GETSTATIC glassbox.client.ConnectionManager.propnameNickPrefix Ljava/lang/String; | | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | | ILOAD 7 // I i | | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | | INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/String;)V | | ATHROW | | L4: ALOAD_2 // Ljava/util/Properties; properties (line 126) | | NEW java.lang.StringBuilder | | DUP | | GETSTATIC glassbox.client.ConnectionManager.propnameUrlPrefix Ljava/lang/String; | | INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String; | | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | | ILOAD 7 // I i | | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | | INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String; | | ASTORE 9 | | ALOAD 9 // Ljava/lang/String; url (line 127) | | IFNONNULL L5 | | NEW java.lang.RuntimeException | | DUP | | NEW java.lang.StringBuilder | | DUP | | LDC """"missing """" | | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | | GETSTATIC glassbox.client.ConnectionManager.propnameUrlPrefix Ljava/lang/String; | | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | | ILOAD 7 // I i | | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | | INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/String;)V | | ATHROW | | L5: ALOAD_2 // Ljava/util/Properties; properties (line 128) | | NEW java.lang.StringBuilder | | DUP | | GETSTATIC glassbox.client.ConnectionManager.propnameViewedPrefix Ljava/lang/String; | | INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String; | | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | | ILOAD 7 // I i | | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | | INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String; | | ASTORE 10 | | ALOAD 10 // Ljava/lang/String; viewedStr (line 129) | | LDC """"true"""" | | INVOKEVIRTUAL java.lang.String.contentEquals (Ljava/lang/CharSequence;)Z | | IFEQ L6 | | ICONST_1 | | GOTO L7 | | L6: ICONST_0 | | L7: ISTORE_3 | | ALOAD 9 // Ljava/lang/String; url (line 130) | | IFNONNULL L8 | | NEW java.lang.RuntimeException | | DUP | | NEW java.lang.StringBuilder | | DUP | | LDC """"missing """" | | INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V | | GETSTATIC glassbox.client.ConnectionManager.propnameViewedPrefix Ljava/lang/String; | | INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; | | ILOAD 7 // I i | | INVOKEVIRTUAL java.lang.StringBuilder.append (I)Ljava/lang/StringBuilder; | | INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String; | | INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/String;)V | | ATHROW | | L8: ALOAD_1 // Ljava/util/List; agcon (line 131) | | NEW glassbox.client.ConnectionManager$AgentConnection | | DUP | | ALOAD_0 // Lglassbox/client/ConnectionManager; this | | ALOAD 8 // Ljava/lang/String; nickname | | ALOAD 9 // Ljava/lang/String; url | | ILOAD_3 // Z viewed | | INVOKESPECIAL glassbox.client.ConnectionManager$AgentConnection.<init> (Lglassbox/client/ConnectionManager;Ljava/lang/String;Ljava/lang/String;Z)V | | INVOKEINTERFACE java.util.List.add (Ljava/lang/Object;)Z | | POP | | IINC 7 1 // I i (line 123) | | L9: ILOAD 7 // I i | | ILOAD 5 // I num | | IF_ICMPLT L3 | | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 133) | | ICONST_M1 | | PUTFIELD glassbox.client.ConnectionManager.defaultConnectionIndex I | | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 134) | | ALOAD_1 // Ljava/util/List; agcon | | PUTFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 135) | | ALOAD 6 // Ljava/lang/String; defNickname | | INVOKEVIRTUAL glassbox.client.ConnectionManager.setAsDefault (Ljava/lang/String;)V | | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 136) | | GETFIELD glassbox.client.ConnectionManager.defaultConnectionIndex I | | ICONST_M1 | | IF_ICMPNE L10 | | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 137) | | ICONST_0 | | PUTFIELD glassbox.client.ConnectionManager.defaultConnectionIndex I | | GOTO L10 | catch java.lang.Exception -> E1 | E1: ASTORE 5 (line 140) | GETSTATIC java.lang.System.err Ljava/io/PrintStream; (line 141) | LDC """"Failed to read connection.properties file"""" | INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V | ALOAD 5 // Ljava/lang/Exception; e2 (line 142) | INVOKEVIRTUAL java.lang.Exception.printStackTrace ()V | NEW java.lang.RuntimeException (line 143) | DUP | ALOAD 5 // Ljava/lang/Exception; e2 | INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/Throwable;)V | ATHROW | L10: RETURN (line 145) method-execution(void glassbox.client.ConnectionManager.readFromFile()) end public void readFromFile() public void delete(String) org.aspectj.weaver.MethodDeclarationLineNumber: 147:5452 : method-execution(void glassbox.client.ConnectionManager.delete(java.lang.String)) | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 148) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | INVOKEINTERFACE java.util.List.size ()I | ICONST_1 | IF_ICMPGT L0 | RETURN | L0: ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 149) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator; | ASTORE_3 | GOTO L3 | L1: ALOAD_3 | INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | ASTORE_2 | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 151) | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getNickname ()Ljava/lang/String; | ALOAD_1 // Ljava/lang/String; nickname | INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z | IFEQ L3 | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 152) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con | INVOKEINTERFACE java.util.List.lastIndexOf (Ljava/lang/Object;)I | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETFIELD glassbox.client.ConnectionManager.defaultConnectionIndex I | IF_ICMPNE L2 | ALOAD_0 // Lglassbox/client/ConnectionManager; this | ICONST_0 | PUTFIELD glassbox.client.ConnectionManager.defaultConnectionIndex I | L2: ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 154) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con | INVOKEINTERFACE java.util.List.remove (Ljava/lang/Object;)Z | POP | GOTO L4 (line 155) | L3: ALOAD_3 (line 149) | INVOKEINTERFACE java.util.Iterator.hasNext ()Z | IFNE L1 | L4: RETURN (line 158) method-execution(void glassbox.client.ConnectionManager.delete(java.lang.String)) end public void delete(String) public void setAsDefault(String) org.aspectj.weaver.MethodDeclarationLineNumber: 160:5880 : method-execution(void glassbox.client.ConnectionManager.setAsDefault(java.lang.String)) | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 161) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator; | ASTORE_3 | GOTO L1 | L0: ALOAD_3 | INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | ASTORE_2 | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 162) | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getNickname ()Ljava/lang/String; | ALOAD_1 // Ljava/lang/String; nickname | INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z | IFEQ L1 | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 163) | ALOAD_0 // Lglassbox/client/ConnectionManager; this | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con | INVOKEINTERFACE java.util.List.lastIndexOf (Ljava/lang/Object;)I | PUTFIELD glassbox.client.ConnectionManager.defaultConnectionIndex I | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 164) | ICONST_1 | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.setViewed (Z)V | GOTO L2 (line 165) | L1: ALOAD_3 (line 161) | INVOKEINTERFACE java.util.Iterator.hasNext ()Z | IFNE L0 | L2: RETURN (line 168) method-execution(void glassbox.client.ConnectionManager.setAsDefault(java.lang.String)) end public void setAsDefault(String) public void setSelectViewed(String, boolean) org.aspectj.weaver.MethodDeclarationLineNumber: 170:6156 : method-execution(void glassbox.client.ConnectionManager.setSelectViewed(java.lang.String, boolean)) | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 171) | INVOKEVIRTUAL glassbox.client.ConnectionManager.getDefaultNick ()Ljava/lang/String; | ASTORE_3 | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 172) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator; | ASTORE 5 | GOTO L2 | L0: ALOAD 5 | INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | ASTORE 4 | ALOAD 4 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 173) | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getNickname ()Ljava/lang/String; | ALOAD_1 // Ljava/lang/String; nickname | INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z | IFEQ L2 | ILOAD_2 // Z val (line 174) | IFNE L1 | ALOAD_3 // Ljava/lang/String; defNick | ALOAD 4 // Lglassbox/client/ConnectionManager$AgentConnection; con | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getNickname ()Ljava/lang/String; | IF_ACMPEQ L2 | L1: ALOAD 4 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 177) | ILOAD_2 // Z val | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.setViewed (Z)V | GOTO L3 (line 178) | L2: ALOAD 5 (line 172) | INVOKEINTERFACE java.util.Iterator.hasNext ()Z | IFNE L0 | L3: RETURN (line 182) method-execution(void glassbox.client.ConnectionManager.setSelectViewed(java.lang.String, boolean)) end public void setSelectViewed(String, boolean) public boolean getSelectViewed(String) org.aspectj.weaver.MethodDeclarationLineNumber: 184:6636 : method-execution(boolean glassbox.client.ConnectionManager.getSelectViewed(java.lang.String)) | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 185) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator; | ASTORE_3 | GOTO L1 | L0: ALOAD_3 | INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | ASTORE_2 | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 186) | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getNickname ()Ljava/lang/String; | ALOAD_1 // Ljava/lang/String; nickname | INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z | IFEQ L1 | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 187) | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.isViewed ()Z | IRETURN | L1: ALOAD_3 (line 185) | INVOKEINTERFACE java.util.Iterator.hasNext ()Z | IFNE L0 | ICONST_0 (line 190) | IRETURN method-execution(boolean glassbox.client.ConnectionManager.getSelectViewed(java.lang.String)) end public boolean getSelectViewed(String) public String getNicknameFromURL(String) org.aspectj.weaver.MethodDeclarationLineNumber: 193:6903 : method-execution(java.lang.String glassbox.client.ConnectionManager.getNicknameFromURL(java.lang.String)) | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 194) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator; | ASTORE_3 | GOTO L1 | L0: ALOAD_3 | INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | ASTORE_2 | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 195) | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getUrl ()Ljava/lang/String; | ALOAD_1 // Ljava/lang/String; url | INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z | IFEQ L1 | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 196) | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getNickname ()Ljava/lang/String; | ARETURN | L1: ALOAD_3 (line 194) | INVOKEINTERFACE java.util.Iterator.hasNext ()Z | IFNE L0 | LDC_W """" """" (line 199) | ARETURN method-execution(java.lang.String glassbox.client.ConnectionManager.getNicknameFromURL(java.lang.String)) end public String getNicknameFromURL(String) public glassbox.client.ConnectionManager$AgentConnection getAgentConnectionFromURL(String) org.aspectj.weaver.MethodDeclarationLineNumber: 202:7168 : method-execution(glassbox.client.ConnectionManager$AgentConnection glassbox.client.ConnectionManager.getAgentConnectionFromURL(java.lang.String)) | ALOAD_0 // Lglassbox/client/ConnectionManager; this (line 203) | GETFIELD glassbox.client.ConnectionManager.connectionList Ljava/util/List; | INVOKEINTERFACE java.util.List.iterator ()Ljava/util/Iterator; | ASTORE_3 | GOTO L1 | L0: ALOAD_3 | INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object; | CHECKCAST glassbox.client.ConnectionManager$AgentConnection | ASTORE_2 | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 204) | INVOKEVIRTUAL glassbox.client.ConnectionManager$AgentConnection.getUrl ()Ljava/lang/String; | ALOAD_1 // Ljava/lang/String; url | INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z | IFEQ L1 | ALOAD_2 // Lglassbox/client/ConnectionManager$AgentConnection; con (line 205) | ARETURN | L1: ALOAD_3 (line 203) | INVOKEINTERFACE java.util.Iterator.hasNext ()Z | IFNE L0 | ACONST_NULL (line 209) | ARETURN method-execution(glassbox.client.ConnectionManager$AgentConnection glassbox.client.ConnectionManager.getAgentConnectionFromURL(java.lang.String)) end public glassbox.client.ConnectionManager$AgentConnection getAgentConnectionFromURL(String) public glassbox.client.ConnectionManager$AgentConnection getAgentConnectionFromNick(String) org.aspectj.weaver.MethodDeclarationLineNumber: 212:7429 : method-execution(glassbox.client.C""",2006-04-26 20:53:07,c5c18aa,['tests/src/org/aspectj/systemtest/ajc152/c5c18aa Ajc152Tests.java']
140357,Bug 140357 NPE or StackOverflow when resolving reference pointcut in ReflectionWorld,"""Given a type such as : private static class NamedPointcutResolution { @Pointcut(""""execution(* *(..))"""") public void a() {} @Pointcut(""""this(org.aspectj.weaver.tools.Java15PointcutExpressionTest.A)"""") public void b() {} @Pointcut(""""a() && b()"""") public void c() {} } The reflection based delegate is unable to resolve the pointcut c() failing with either (1) an NPE, or (2) a StackOverflow, depending on the order of the pointcut definitions in the type. The problem occurs because in resolving """"c()"""" we get all the pointcuts in the type, which gets a(), b(), and c(), and tries to resolve them...""",2006-05-05 09:43:03,b954b26,"['weaver/src/org/aspectj/weaver/tools/b954b26 PointcutParser.java', 'weaver5/java5-src/org/aspectj/weaver/reflect/b954b26 DeferredResolvedPointcutDefinition.java', 'weaver5/java5-src/org/aspectj/weaver/reflect/b954b26 InternalUseOnlyPointcutParser.java', 'weaver5/java5-src/org/aspectj/weaver/reflect/b954b26 Java15ReflectionBasedReferenceTypeDelegate.java', 'weaver5/java5-testsrc/org/aspectj/weaver/tools/b954b26 Java15PointcutExpressionTest.java']"
141945,Bug 141945 Compiler issues message concerning aop.xml even when not doing LTW,"""From the mailing list: ============= I am executing the command as below, COMMAND: ajc -inpath woven_hello1.jar -aspectpath aspect2.jar -outjar woven_hello2.jar I am getting same old error, woven_hello1.jar [error] aspect 'aspect1' woven into 'Hello' must be declared in an aop.xml file. (no source information available) I have placed both aspect1.class and aspect2.class in CLASSPATH system variable. ============== We shouldn't be putting out messages about aop.xml when we are not doing LTW - this message points the user to a solution that will not work in this case!""",2006-05-16 04:10:25,fc7db25,['tests/java5/ataspectj/ataspectj/ltwreweavable/fc7db25 MainReweavableLogging.java']
141956,Bug 141956 Null Pointer Exception when trying to skip Parent Mungers.,"""I don't know much about the internal workings of aspectJ but this bug keeps popping up so I went through the trouble of checking of trying to debug it so that I could hopefully provide enough information to get it fixed. This happens while using eclipse AJDT. It never happens if I fully do a clean before rebuild. It only seems to happen when doing incrmental builds (using the project->build automatically setting). The error happens in the iterator that recursively builds a list of methods to return for matching. The error is triggered here: // we need to know if it is an interface from Parent kind munger // as those are used for @AJ ITD and we precisely want to skip those boolean shouldSkip = false; for (int j = 0; j < rtx.interTypeMungers.size(); j++) { ConcreteTypeMunger munger = (ConcreteTypeMunger) rtx.interTypeMungers.get(j); if (munger.getMunger().getKind() == ResolvedTypeMunger.Parent) { shouldSkip = true; break; } } munger.getMunger() returns null because the munger instance is a BcelPerClauseAspectAdder. My naive fix would be to check munger.getMunger() == null or check munger.getKind(). I'm assuming that BcelPerClausAspectAdder is one that should be skipped since it is related to @AJ ??? Again, I don't know very much about the internal architecture of the weaver magic so I hope this is enough information. I would appreciate it if someone who knows more of the internals could speculate as to why this bug would never pop up on a clean build but only on incremental builds? Also it's not on all incremental builds and I haven't been able to isolate what kind of changes or compiles it triggers this, although it seems that once I got the exception once, I keep getting it on every build until I do a clean. java.lang.NullPointerException at org.aspectj.weaver.ResolvedType.addAndRecurse(ResolvedType.java:288) at org.aspectj.weaver.ResolvedType.getMethodsWithoutIterator(ResolvedType.java:257) at org.aspectj.weaver.ResolvedType.lookupResolvedMember(ResolvedType.java:378) at org.aspectj.weaver.JoinPointSignatureIterator.findSignaturesFromSupertypes(JoinPointSignatureIterator.java:178) at org.aspectj.weaver.JoinPointSignatureIterator.hasNext(JoinPointSignatureIterator.java:69) at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:287) at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:103) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:144) at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:144) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:64) at org.aspectj.weaver.Advice.match(Advice.java:109) at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:104) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2210) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:1752) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:479) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:109) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1574) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1525) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1305) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1127) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:321) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:192) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:862) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:269) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:168) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)""",2006-05-16 05:12:06,5f6a6b1,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/5f6a6b1 EclipseFactory.java', 'tests/multiIncremental/PR141956/base/5f6a6b1 A.java', 'tests/multiIncremental/PR141956/base/5f6a6b1 C.java', 'tests/multiIncremental/PR141956/inc1/5f6a6b1 C.java', 'tests/src/org/aspectj/systemtest/incremental/tools/5f6a6b1 MultiProjectIncrementalTests.java', 'weaver/src/org/aspectj/weaver/5f6a6b1 ResolvedType.java']"
142466,Bug 142466 [ltw] Fail at runtime if abstract methods are not implemented in a hierarchy that finishes with an XML aspect,see pr125480 - copying the test for that will be a good basis for a test for this bug. We don't check that when defining a concrete aspect there are no unimplemented abstract methods in the aspect we are concretizing.,2006-05-18 07:32:08,69e24e9,"['loadtime/src/org/aspectj/weaver/loadtime/69e24e9 ConcreteAspectCodeGen.java', 'tests/bugs152/pr142466/69e24e9 AtAspectTestConcreteMethods.java', 'tests/bugs152/pr142466/69e24e9 HelloWorld.java', 'tests/bugs152/pr142466/case2/69e24e9 AtAspectTestConcreteMethods.java', 'tests/bugs152/pr142466/case2/69e24e9 HelloWorld.java', 'tests/src/org/aspectj/systemtest/ajc152/69e24e9 Ajc152Tests.java']"
143930,Bug 143930 create constructor ipe in same was as method ipes,,2006-05-26 07:12:00,26a8a86,"['ajdoc/testsrc/org/aspectj/tools/ajdoc/26a8a86 CoverageTestCase.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/26a8a86 AsmElementFormatter.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/26a8a86 AsmHierarchyBuilder.java', 'tests/src/org/aspectj/systemtest/ajc151/26a8a86 Ajc151Tests.java', 'tests/src/org/aspectj/systemtest/ajc152/26a8a86 Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/26a8a86 AsmRelationshipProvider.java']"
144717,Bug 144717 org.aspectj.weaver.BCException: Do not call nameToSignature with something that looks like a signature (descriptor): '[Ljava.lang.String;',The exception below is produced when parsing a pointcut that uses an array type in args using the reflection world pointcut parser support. org.aspectj.weaver.BCException: Do not call nameToSignature with something that looks like a signature (descriptor): '[Ljava.lang.String;' at org.aspectj.weaver.UnresolvedType.nameToSignature(UnresolvedType.java:741) at org.aspectj.weaver.UnresolvedType.forName(UnresolvedType.java:311) at org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate.getDeclaredPointcuts(Java15ReflectionBasedReferenceTypeDelegate.java:260) at org.aspectj.weaver.ReferenceType.getDeclaredPointcuts(ReferenceType.java:526) at org.aspectj.weaver.ResolvedType$7.get(ResolvedType.java:468) at org.aspectj.weaver.Iterators$6.hasNext(Iterators.java:118) at org.aspectj.weaver.Iterators$5.hasNext(Iterators.java:128) at org.aspectj.weaver.ResolvedType.findPointcut(ResolvedType.java:479) at org.aspectj.weaver.patterns.ReferencePointcut.resolveBindings(ReferencePointcut.java:151) at org.aspectj.weaver.patterns.Pointcut.resolve(Pointcut.java:194) at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:330) at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:308) at org.aspectj.weaver.tools.Java15PointcutExpressionTest.testArrayTypeInArgs(Java15PointcutExpressionTest.java:304) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196),2006-05-31 12:43:19,97cd71a,"['weaver/src/org/aspectj/weaver/tools/97cd71a PointcutParser.java', 'weaver5/java5-src/org/aspectj/weaver/reflect/97cd71a Java15ReflectionBasedReferenceTypeDelegate.java', 'weaver5/java5-testsrc/org/aspectj/weaver/tools/97cd71a Java15PointcutExpressionTest.java']"
145086,Bug 145086 NPE when weak reference set in signature,"""Simon ran into the same problem in setting the values. I will attach a patch to fix this, with test cases to properly verify it works in both cases. java.lang.NullPointerException at org.aspectj.runtime.reflect.SignatureImpl$CacheImpl.set(SignatureImpl.java:224) at org.aspectj.runtime.reflect.SignatureImpl.toString(SignatureImpl.java:57) at org.aspectj.runtime.reflect.SignatureImpl.toString(SignatureImpl.java:62)""",2006-06-02 11:35:11,f821ca3,"['runtime/src/org/aspectj/runtime/reflect/f821ca3 SignatureImpl.java', 'runtime/testsrc/org/aspectj/runtime/reflect/f821ca3 JoinPointImplTest.java', 'runtime/testsrc/org/aspectj/runtime/reflect/f821ca3 SignatureTest.java']"
145322,Bug 145322 Failure of testCompareSubclassDelegates() on J9 1.5.0 SR1,,2006-06-05 08:12:02,3e0650d,['weaver/testsrc/org/aspectj/weaver/reflect/3e0650d ReflectionBasedReferenceTypeDelegateTest.java']
146546,"""Bug 146546 Remove hard coded dependency on """"|"""" in getFileName(..) methods""",,2006-06-12 07:59:26,38cc0dd,"['asm/src/org/aspectj/asm/38cc0dd AsmManager.java', 'asm/src/org/aspectj/asm/internal/38cc0dd AspectJElementHierarchy.java']"
147711,Bug 147711 Add an option to generate aj-synthetics with true synthetic flag,"""In a number of cases tools are getting confused over generated aj members that are """"aj-synthetic"""" but not marked with the synthetic attribute (because in the past, this has upset other tools). The most recent example was a JAXB posting on the list - by having a perthis() clause in an aspect that matched a type with JAXB 2 annotations the user was no longer able to use JAXB. This is a serious issue, and will prevent the usage of JAXB 2 with any type into which we introduce properties as aj-synthetic members. The JAXB 2 solution to ignore such fields is to annotate them with @XmlTransient, but since the field does not exist in the user program they can't even do this!""",2006-06-19 08:15:25,c9f311a,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/c9f311a AdviceDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/c9f311a DeclareDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/c9f311a PointcutDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/c9f311a EclipseFactory.java', 'tests/src/org/aspectj/systemtest/ajc152/c9f311a Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/c9f311a NameMangler.java', 'weaver/src/org/aspectj/weaver/bcel/c9f311a LazyClassGen.java', 'weaver/src/org/aspectj/weaver/bcel/c9f311a LazyMethodGen.java']"
147801,Bug 147801 java.lang.ClassFormatError: Repetitive method name/signature,"""I get a ClassFormatError trying to perform runtime-weaving on a DB2 class. The class being woven is COM.ibm.db2.jdbc.app.DB2PreparedStatement. The full message exception is: java.lang.ClassFormatError: Repetitive method name/signature in class file COM/ibm/db2/jdbc/app/DB2PreparedStatement. In examining the post-weave class file, it looks as if Aspectj is defining a duplicate method within the class called getParameterMetaData(). Here are the messages from the weaver: 04:21:13,640 INFO [STDOUT] info weaving 'COM.ibm.db2.jdbc.app.DB2CallableStatement' 04:21:13,640 INFO [STDOUT] info weaver operating in reweavable mode. Need to verify any required types exist. 04:21:13,671 INFO [STDOUT] info weaving 'COM.ibm.db2.jdbc.app.DB2PreparedStatement' 04:21:13,671 INFO [STDOUT] info weaver operating in reweavable mode. Need to verify any required types exist. 04:21:13,703 INFO [STDOUT] weaveinfo Join point 'method-execution(java.sql.ResultSet COM.ibm.db2.jdbc.app.DB2PreparedStatement.executeQuery())' in Type 'COM.ibm.db2.jdbc.app.DB2PreparedStatement' (DB2PreparedStatement.java:1679) advised by before advice from 'com.ibm.tivoli.itcam.toolkit.ai.aspectj.captureJDBC.CaptureSQLStatement' (CaptureSQLStatement.aj:747) [with runtime test] 04:21:13,703 INFO [STDOUT] weaveinfo Join point 'method-execution(java.sql.ResultSet COM.ibm.db2.jdbc.app.DB2PreparedStatement.executeQuery())' in Type 'COM.ibm.db2.jdbc.app.DB2PreparedStatement' (DB2PreparedStatement.java:1679) advised by afterReturning advice from 'com.ibm.tivoli.itcam.toolkit.ai.aspectj.captureJDBC.CaptureSQLStatement' (CaptureSQLStatement.aj:946) [with runtime test] 04:21:13,718 INFO [STDOUT] weaveinfo Join point 'method-execution(java.sql.ResultSet COM.ibm.db2.jdbc.app.DB2PreparedStatement.executeQuery())' in Type 'COM.ibm.db2.jdbc.app.DB2PreparedStatement' (DB2PreparedStatement.java:1679) advised by afterThrowing advice from 'com.ibm.tivoli.itcam.toolkit.ai.aspectj.captureJDBC.CaptureSQLStatement' (CaptureSQLStatement.aj:971) [with runtime test] 04:21:13,718 INFO [STDOUT] weaveinfo Join point 'method-execution(boolean COM.ibm.db2.jdbc.app.DB2PreparedStatement.execute())' in Type 'COM.ibm.db2.jdbc.app.DB2PreparedStatement' (DB2PreparedStatement.java:3971) advised by before advice from 'com.ibm.tivoli.itcam.toolkit.ai.aspectj.captureJDBC.CaptureSQLStatement' (CaptureSQLStatement.aj:833) [with runtime test] 04:21:13,718 INFO [STDOUT] weaveinfo Join point 'method-execution(boolean COM.ibm.db2.jdbc.app.DB2PreparedStatement.execute())' in Type 'COM.ibm.db2.jdbc.app.DB2PreparedStatement' (DB2PreparedStatement.java:3971) advised by afterReturning advice from 'com.ibm.tivoli.itcam.toolkit.ai.aspectj.captureJDBC.CaptureSQLStatement' (CaptureSQLStatement.aj:946) [with runtime test]""",2006-06-19 18:07:26,13dde4e,"['tests/bugs152/pr147801/13dde4e Foo.java', 'tests/bugs152/pr147801/13dde4e PreparedStatement.java', 'tests/src/org/aspectj/systemtest/ajc152/13dde4e Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/13dde4e World.java', 'weaver/src/org/aspectj/weaver/bcel/13dde4e BcelClassWeaver.java']"
147845,Bug 147845 Generic abstract aspect hierarchies 3 deep or higher can fail when type parameters have bounds,"""The program below should compile happily, but fails with: [error] Type B does not meet the specification for type parameter 1 (A extends MyBase) in generic type Base abstract aspect Middle<B extends MyBase> extends Base<B> {} ^^^^^ The test program: ------------------ interface MyBase {}; interface MyMarker extends MyBase {} abstract aspect Base<A extends MyBase> {} abstract aspect Middle<B extends MyBase> extends Base<B> {} aspect Sub extends Middle<MyMarker> {}""",2006-06-20 06:16:42,791f8a7,"['tests/src/org/aspectj/systemtest/ajc152/791f8a7 Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/791f8a7 TypeVariable.java']"
148007,Bug 148007 boolean methods with after advice return incorrect result on JRockit under WLS,,2006-06-21 05:27:01,426cbdc,"['tests/bugs152/pr148007/purejava/test/426cbdc BooleanUnitTest.java', 'tests/bugs152/pr148007/purejava/test/426cbdc LoggingAspect.java', 'tests/bugs152/pr148007/test/426cbdc BooleanUnitTest.java', 'tests/bugs152/pr148007/test/426cbdc TestServlet.java', 'tests/src/org/aspectj/systemtest/ajc152/426cbdc Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/bcel/426cbdc BcelShadow.java', 'weaver/src/org/aspectj/weaver/bcel/426cbdc Utility.java']"
148219,Bug 148219 Wrong warning is reported,"""I used ajdt_1.3.1_for_eclipse_3.1.zip on Eclipse 3.1.2. Below is my aspectj code. public aspect MyMessages { pointcut getResourceString(String key): args(key, ..) && call (* CommonPlugin.getResourceString(String, ..)); String around(String key):getResourceString(key) { return key; } } The warning message is The parameter key is never read. See my screenshot.""",2006-06-22 10:05:18,07c2189,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/07c2189 AjProblemReporter.java', 'tests/bugs153/PR148219/07c2189 MyMessages.java', 'tests/src/org/aspectj/systemtest/ajc153/07c2189 Ajc153Tests.java']"
148388,Bug 148388 LTW weaver produces a debug message at the begining,,2006-06-23 09:55:32,99d1c18,['weaver/src/org/aspectj/weaver/tools/99d1c18 WeavingAdaptor.java']
148409,Bug 148409 [generics] ClassCastException in UnresolvedType.java:348,"""I am using AspectJ load time weaving with Spring 2.0 RC1 to inject my entities, and I am getting the following exception: java.lang.ClassCastException: org.aspectj.apache.bcel.classfile.Signature$TypeVariableSignature at org.aspectj.weaver.UnresolvedType.forGenericTypeSignature(UnresolvedType.java:348) at org.aspectj.weaver.bcel.BcelWorld.addSourceObjectType(BcelWorld.java:385) at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.accept(ClassLoaderWeavingAdaptor.java:492) at org.aspectj.weaver.tools.WeavingAdaptor.shouldWeave(WeavingAdaptor.java:230) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:210) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:65) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:55) at sun.instrument.TransformerManager.transform(TransformerManager.java:122) at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:155) at java.lang.ClassLoader.defineClass1(Native Method) . . . Having examined the call stack under the debugger, this seems to happening when the weaver is attempting to determine whether a particular class should be weaved. The exception is thrown in the following method, at the cast highlighted below. public static UnresolvedType forGenericTypeSignature(String sig,String declaredGenericSig) { UnresolvedType ret = UnresolvedType.forSignature(sig); ret.typeKind=TypeKind.GENERIC; ClassSignature csig = new GenericSignatureParser().parseAsClassSignature(declaredGenericSig); Signature.FormalTypeParameter[] ftps = csig.formalTypeParameters; ret.typeVariables = new TypeVariable[ftps.length]; for (int i = 0; i < ftps.length; i++) { Signature.FormalTypeParameter parameter = ftps[i]; Signature.ClassTypeSignature cts = (Signature.ClassTypeSignature)parameter.classBound; // EXCEPTION HERE! ret.typeVariables[i]=new TypeVariable(ftps[i].identifier,UnresolvedType.forSignature(cts.outerType.identifier+"""";"""")); } ret.signatureErasure = sig; ret.signature = ret.signatureErasure; return ret; } The class in question (which is not one that requires weaving), has the following signature: public class HibernateEntityDAO<interfaceT extends SecurityEntity, concreteT extends interfaceT> extends HibernateDaoSupport implements EntityDAO<interfaceT> The exception is happening because the parameter.classBound member is not of type Signature.ClassTypeSignature, but an instance of Signature.TypeVariableSignature. The loop variable i is 1, and parameter.identifier is concreteT, so it looks like it's the signature of the second type parameter (concreteT) that is tripping up the weaver.""",2006-06-23 12:29:03,369de87,"['tests/bugs153/pr148409/369de87 Blurgh.java', 'tests/bugs153/pr148409/369de87 X.java', 'tests/src/org/aspectj/systemtest/ajc153/369de87 Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/369de87 UnresolvedType.java']"
148693,Bug 148693 woven class does not pass org.apache.bcel.verifier.statics.Pass2Verifier,,2006-06-26 13:29:29,82f217f,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/82f217f AspectDeclaration.java', 'tests/src/org/aspectj/systemtest/ajc153/82f217f Ajc153Tests.java', 'tests/src/org/aspectj/testing/82f217f Utils.java']"
148727,Bug 148727 Can't call synthetic aspectOf method on aspect in library jar,"""Separate compilation of the following program breaks on 1.5.2rc1 because of the recent change to marking aspect methods as synthetic: public aspect Asp { } public class Client { public static void main(String argz[]) { System.out.println(""""Can call aspectOf? """"+Asp.aspectOf()); } } C:\devel\scratch\synthetic>ajc -classpath asp.jar;%CLASSPATH% Client.java C:\devel\scratch\synthetic\Client.java:3 [error] The method aspectOf() is undefi ned for the type Asp System.out.println(""""Can call aspectOf? """"+Asp.aspectOf()); 1 error C:\devel\scratch\synthetic>javac -classpath asp.jar;%CLASSPATH% Client.java Client.java:3: cannot find symbol symbol : method aspectOf() location: class Asp System.out.println(""""Can call aspectOf? """"+Asp.aspectOf()); ^ 1 error Clearly it's vital that external users of a library be able to call API methods like aspectOf on library aspects. This works: C:\devel\scratch\synthetic>ajc *.aj Client.java C:\devel\scratch\synthetic>java Client Can call aspectOf? Asp@b89838 Patch with test integrated into CVS tree to follow...""",2006-06-26 16:46:03,21e06a6,"['tests/bugs152/pr148727/21e06a6 Client.java', 'tests/src/org/aspectj/systemtest/ajc152/21e06a6 Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/21e06a6 NameMangler.java']"
148737,Bug 148737 IllegalStateException for non-generic type,I believe this is similar to 112880. The message and stack trace I am getting are -- (IllegalStateException) Can't ask to parameterize a member of non-generic type: com...object kind(raw) Can't ask to parameterize a member of non-generic type: com...object kind(raw) java.lang.IllegalStateException: Can't ask to parameterize a member of non-generic type: com....object kind(raw) at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:612) at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:597) at org.aspectj.weaver.ReferenceType.getDeclaredMethods(ReferenceType.java:508) at org.aspectj.weaver.ResolvedType$4.get(ResolvedType.java:225) at org.aspectj.weaver.Iterators$3$1.hasNext(Iterators.java:118) at org.aspectj.weaver.Iterators$5.hasNext(Iterators.java:171) at org.aspectj.weaver.Iterators$3.hasNext(Iterators.java:128) at org.aspectj.weaver.ResolvedType.lookupMember(ResolvedType.java:345) at org.aspectj.weaver.ResolvedType.lookupMethod(ResolvedType.java:326) . . . The same code was able to be weaved under 1.5.0. The reason why this is a major issue is 1.5.0 suffers from a StackOverflowException.,2006-06-26 20:09:45,f6834c7,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/f6834c7 BuildArgParser.java', 'tests/bugs153/pr148737/f6834c7 A.java', 'tests/src/org/aspectj/systemtest/ajc153/f6834c7 Ajc153Tests.java']"
148786,Bug 148786 new array construction join point can fail for freaky array constructors,"""Took me a while to discover how to recreate this problem, but this class: public class A { public static void main(String []argv) { byte[][] bytes = new byte[][]{{0},{1}}; } } causes this bytecode: 0: iconst_2 1: anewarray #18; //class """"[B"""" and this causes the newarray joinpoint code to go bang. (eg. before(): call(*[].new(..)) {}) java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelWorld.fromBcel(BcelWorld.java:236) at org.aspectj.weaver.bcel.BcelWorld.makeJoinPointSignatureForArrayConstruction(BcelWorld.java:483) at org.aspectj.weaver.bcel.BcelShadow.makeArrayConstructorCall(BcelShadow.java:801) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2510) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2325) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:490) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:115) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1574) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1525) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1305) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1127)""",2006-06-27 05:42:49,792d1df,"['tests/bugs152/pr148786/792d1df A.java', 'tests/src/org/aspectj/systemtest/ajc152/792d1df Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/bcel/792d1df BcelWorld.java']"
148908,Bug 148908 incorrect source signature for field ipe with qualified allocation expression,,2006-06-27 18:41:34,fc39df1,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/fc39df1 AsmHierarchyBuilder.java', 'tests/bugs153/pr148908/fc39df1 BadInterface.java', 'tests/src/org/aspectj/systemtest/ajc153/fc39df1 Ajc153Tests.java']"
148911,Bug 148911 NPR compiling Spring,"""The Spring 2.0 RC1 project contains two directories with aspects. Since the eclipse project does not compile cleanly with just the java nature, I decided to try adding the aspectj nature and giving the aspectj builder a shot. I don't have any idea what might be the trigger to the problem, but simply checking out Spring 2.0 RC1 and adding the aspectj nature should be able to reproduce. If I learn more I will add to this bug. ---- java.lang.NullPointerException at org.aspectj.org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding(SingleTypeReference.java:39) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:132) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:123) at org.aspectj.ajdt.internal.core.builder.AsmElementFormatter.setParameters(AsmElementFormatter.java:311) at org.aspectj.ajdt.internal.core.builder.AsmElementFormatter.genLabelAndKind(AsmElementFormatter.java:258) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.visit(AsmHierarchyBuilder.java:392) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:185) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1250) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.traverse(QualifiedAllocationExpression.java:392) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(LocalDeclaration.java:242) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:212) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1195) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:339) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.internalBuild(AsmHierarchyBuilder.java:145) at org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder.buildStructureForCompilationUnit(AsmHierarchyBuilder.java:87) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.finishedCompilationUnit(EclipseFactory.java:941) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterProcessing(AjCompilerAdapter.java:210) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$after$org_aspectj_ajdt_internal_compiler_CompilerAdapter$4$6b855184(CompilerAdapter.aj:91) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:533) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:887) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:244) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null""",2006-06-27 19:29:58,b59b036,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b59b036 AsmElementFormatter.java']
148972,Bug 148972 problems with binary weaving declare parents in mixed environment.,"""These have been reported to me on a large system doing some intricate weaving where some classes are 1.2, some 1.4, some 1.5 and the VM is 1.5. Binary weaving declare parents sometimes refuses to allow the modification of the hierarchy because it sees a clash between two methods when there is none. The two cases I'm fixing are: 1. sometimes the signatures of the return types differ with the '.' or '/' problem (fix == be consistent) 2. sometimes the syntheticness of the methods in the relationship isn't determined correctly""",2006-06-28 07:24:43,2f2f568,"['tests/src/org/aspectj/systemtest/ajc152/2f2f568 Ajc152Tests.java', 'weaver/src/org/aspectj/weaver/bcel/2f2f568 BcelTypeMunger.java']"
149293,Bug 149293 declare annotation problem: AIOOBE at ProblemReporter.java:2992,"""This has been happening a lot, but I'm having trouble figuring out why it's happening. It's always """"5"""". It happens both in Eclipse and from the command line. java.lang.ArrayIndexOutOfBoundsException at org.aspectj.org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidType(ProblemReporter.java:2992) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.reportInvalidType(TypeReference.java:170) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:136) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:123) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.Annotation.resolveType(Annotation.java:214) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations(ASTNode.java:436) at org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.getAnnotationTypes(EclipseSourceType.java:443) at org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.isAnnotationStyleAspect(EclipseSourceType.java:123) at org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.isAspect(EclipseSourceType.java:108) at org.aspectj.weaver.ReferenceType.isAspect(ReferenceType.java:159) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.verifyAnyTypeParametersMeetBounds(AjLookupEnvironment.java:269) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:228) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:301) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:315) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:887) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:244) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) ArrayIndexOutOfBoundsException thrown: 5""",2006-06-30 08:20:01,bc2f36f,"['tests/multiIncremental/PR149293_1/base/src/mypackage/bc2f36f MyAbstractClass.java', 'tests/multiIncremental/PR149293_1/base/src/mypackage/bc2f36f MyAspect.java', 'tests/multiIncremental/PR149293_1/base/src/mypackage/bc2f36f MyBaseClass.java', 'tests/multiIncremental/PR149293_1/base/src/mypackage/bc2f36f MyInterface.java', 'tests/multiIncremental/PR149293_1/inc1/src/mypackage/bc2f36f MySubclass.java', 'tests/src/org/aspectj/systemtest/incremental/tools/bc2f36f MultiProjectIncrementalTests.java']"
149560,Bug 149560 [@AspectJ] Incorrect weaving of static initialization join point,"""This error occurs if static initialization of one aspect class is woven with an advice from another aspect. It worked fine in version 1.5.0 - see the decompiled code snippet: static { Object obj = new Factory(""""ItoMonitoringAspect.java"""", Class.forName(""""cz.kb.usermanagement.ito.ItoMonitoringAspect"""")); ajc$tjp_0 = ((Factory) (obj)).makeSJP(""""staticinitialization"""", ((Factory) (obj)).makeInitializerSig(""""8"""", """"cz.kb.usermanagement.ito.ItoMonitoringAspect""""), 0); obj = Factory.makeJP(ajc$tjp_0, null, null); // the static initialization of this aspect class is deliberately woven using // advice from another aspect defined elsewhere. try { UserManagementLogAspect.aspectOf().beforeClassInit(((org.aspectj.lang.JoinPoint) (obj))); } catch(Throwable throwable) { if(throwable instanceof ExceptionInInitializerError) { throw (ExceptionInInitializerError)throwable; } else { UserManagementLogAspect.aspectOf().afterClassInit(); throw throwable; } } UserManagementLogAspect.aspectOf().afterClassInit(); // this line below was there when compiling using AspectJ 1.5.0 // but is missing in when using AJC 1.5.2. (Note: the line is, however, present if the static // initialization of this aspect class is NOT woven by advice from the other aspect). ajc$postClinit(); } As a result of the missing call to ajc$postClinit() the aspect instance is not created and it's method .aspectOf() throws org.aspectj.lang.NoAspectBoundException.""",2006-07-04 07:47:44,945a257,"['tests/bugs153/pr149560/945a257 AnnStyle.java', 'tests/bugs153/pr149560/945a257 CodeStyle.java', 'tests/src/org/aspectj/systemtest/ajc153/945a257 Ajc153Tests.java', 'tests/src/org/aspectj/systemtest/incremental/tools/945a257 MultiProjectIncrementalTests.java', 'weaver/src/org/aspectj/weaver/bcel/945a257 BcelPerClauseAspectAdder.java', 'weaver/src/org/aspectj/weaver/patterns/945a257 PerSingleton.java']"
149908,Bug 149908 NPE in org.aspectj.weaver.MemberImpl.getModifiers(MemberImpl.java:526),"""java.lang.NullPointerException at org.aspectj.weaver.MemberImpl.getModifiers(MemberImpl.java:526) at org.aspectj.weaver.MemberImpl.getMethodSignatureString(MemberImpl.java:824) at org.aspectj.weaver.MemberImpl.getSignatureString(MemberImpl.java:753) at org.aspectj.weaver.bcel.LazyClassGen.initializeTjp(LazyClassGen.java:1039) at org.aspectj.weaver.bcel.LazyClassGen.initializeAllTjps(LazyClassGen.java:1016) at org.aspectj.weaver.bcel.LazyClassGen.addAjcInitializers(LazyClassGen.java:964) at org.aspectj.weaver.bcel.LazyClassGen.writeBack(LazyClassGen.java:502) at org.aspectj.weaver.bcel.LazyClassGen.getJavaClassBytesIncludingReweavable(LazyClassGen.java:652) at org.aspectj.weaver.bcel.BcelWeaver.getClassFilesFor(BcelWeaver.java:1337) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1309) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1127) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:284) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:212) at org.aspectj.weaver.loadtime.WeavingURLClassLoader.defineClass(WeavingURLClassLoader.java:125) at org.aspectj.weaver.ExtensibleURLClassLoader.defineClass(ExtensibleURLClassLoader.java:80) at org.aspectj.weaver.ExtensibleURLClassLoader.findClass(ExtensibleURLClassLoader.java:46) at java.lang.ClassLoader.loadClass(ClassLoader.java:306) at java.lang.ClassLoader.loadClass(ClassLoader.java:251) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) Exception in thread """"main"""" public aspect JoinPointTraceAspect { private int _callDepth = -1; pointcut tracePoints() : !within(JoinPointTraceAspect); before() : tracePoints() { _callDepth++; print(""""Before"""", thisJoinPoint); } after() : tracePoints() { print(""""After"""", thisJoinPoint); _callDepth--; } private void print(String prefix, Object message) { for(int i = 0, spaces = _callDepth * 2; i < spaces; i++) { System.out.print("""" """"); } System.out.println(prefix + """": """" + message); } } aspect EdtRuleChecker { private boolean isStressChecking = true; public pointcut anySwingMethods(JComponent c): target(c) && call(* *(..)); public pointcut threadSafeMethods(): call(* repaint(..)) || call(* revalidate()) || call(* invalidate()) || call(* getListeners(..)) || call(* add*Listener(..)) || call(* remove*Listener(..)); //calls of any JComponent method, including subclasses before(JComponent c): anySwingMethods(c) && !threadSafeMethods() && !within(EdtRuleChecker) { if(!SwingUtilities.isEventDispatchThread() && (isStressChecking || c.isShowing())) { System.err.println(thisJoinPoint.getSourceLocation()); System.err.println(thisJoinPoint.getSignature()); System.err.println(); } } //calls of any JComponent constructor, including subclasses before(): call(JComponent+.new(..)) { if (isStressChecking && !SwingUtilities.isEventDispatchThread()) { System.err.println(thisJoinPoint.getSourceLocation()); System.err.println(thisJoinPoint.getSignature() + """" *constructor*""""); System.err.println(); } } } Running with SwingSet2.""",2006-07-06 17:24:00,757004c,"['tests/bugs153/pr149908/757004c C.java', 'tests/bugs153/pr149908/757004c C1.java', 'tests/bugs153/pr149908/757004c MyStringBuilder.java', 'tests/bugs153/pr149908/withoutMethod/757004c MyStringBuilder.java', 'tests/src/org/aspectj/systemtest/ajc153/757004c Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/757004c MemberImpl.java']"
150271,Bug 150271 Allow multiple levels of LTW information,"""It would be nice if basic information about load-time weaving (what version of AspectJ is being used, what loaders are doing weaving and what configuration is being used) was available without all of the -verbose information listing of all classes woven or not woven. It's also unfortunate that the flags for weaving level are 2 quite different ones: -Daj.weaving.verbose -Dorg.aspectj.weaver.showWeaveInfo Why not something like -Dorg.aspectj.weaver.level=[none|summary|info|verbose] summary: just what configuration is used info: list affected join points etc. (like showWeaveInfo) verbose: all (like verbose now)""",2006-07-11 11:31:28,8549d86,"['loadtime/src/org/aspectj/weaver/loadtime/8549d86 ClassLoaderWeavingAdaptor.java', 'loadtime/src/org/aspectj/weaver/loadtime/8549d86 DefaultMessageHandler.java', 'loadtime/src/org/aspectj/weaver/loadtime/8549d86 Options.java', 'tests/java5/ataspectj/ataspectj/8549d86 TestHelper.java', 'weaver/src/org/aspectj/weaver/tools/8549d86 WeavingAdaptor.java']"
150671,Bug 150671 declare error on set of volatile field does not work,"""When an aspect has a declare error statement involving a pointcut that captures the setting of a volatile field, a compilation error is not produced. This bug can be reproduced as follows. Consider the following class: class A { private volatile int state; public void foo() { state = 0; } } Now consider this aspect: aspect FSM { declare error: set(* A.state): """"Changing state""""; } The setting of the state field in method foo() does not result in a compilation error as expected. I originally noticed this bug when using AJDT 1.4 with Eclipse 3.2. However this has been reproduced and confirmed with the aspectj 1.5.2 compiler.""",2006-07-14 12:19:01,357bbe9,"['tests/src/org/aspectj/systemtest/ajc153/357bbe9 Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/357bbe9 ResolvedMemberImpl.java']"
151182,Bug 151182 NPE in BcelWeaver using LTW,"""Hi, I created a logging aspect for our application some time ago using 1.5.0 of AspectJ. I enabled this from time to time using Load Time Weaving. I have recently recompiled the aspect using 1.5.2 and tried to run it also using the 1.5.2 weaver jar, but it fails with a NullPointerException. This is part of one of the many stacktraces: 20 jul 2006 07:42:49,046 - java.lang.NullPointerException 20 jul 2006 07:42:49,062 - at org.aspectj.weaver.bcel.BcelWeaver.weaveParentTypeMungers(BcelWeaver.java:1367) 20 jul 2006 07:42:49,062 - at org.aspectj.weaver.bcel.BcelWeaver.weaveParentsFor(BcelWeaver.java:1237) 20 jul 2006 07:42:49,062 - at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1072) 20 jul 2006 07:42:49,062 - at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:284) 20 jul 2006 07:42:49,062 - at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:212) 20 jul 2006 07:42:49,062 - at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:65) 20 jul 2006 07:42:49,062 - at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:55) 20 jul 2006 07:42:49,062 - at sun.instrument.TransformerManager.transform(Unknown Source) 20 jul 2006 07:42:49,062 - at sun.instrument.InstrumentationImpl.transform(Unknown Source) 20 jul 2006 07:42:49,062 - at java.lang.ClassLoader.defineClass1(Native Method) 20 jul 2006 07:42:49,062 - at java.lang.ClassLoader.defineClass(Unknown Source) I then tried with the 1.5.0 weaver jar (although the aspect was compiled using 1.5.2) and this ran without problems.""",2006-07-20 02:50:53,397a19d,['loadtime/src/org/aspectj/weaver/loadtime/397a19d Aj.java']
151673,Bug 151673 Incorrect weaving of after returning when 'input' bytecode is of a strange form,"""We have had a user report a problem where after advice being woven into a particular method is producing code that does not verify. The problem occurs if the bytecode being input to the weaving process includes a subroutine that contains the return from the method. Here is the problematic snippet produced by some unknown compiler: 200: invokespecial #17; //Method com/MyException.""""<init>"""":(Ljava/lang/String;)V 203: athrow 204: aload_3 205: astore 6 207: jsr 234 210: aload 6 212: areturn 213: astore 4 215: aload 4 217: invokevirtual #79; //Method java/lang/Throwable.printStackTrace:()V 220: jsr 234 223: goto 238 226: astore 7 228: jsr 234 231: aload 7 233: athrow 234: astore 8 236: aload_3 237: areturn 238: return Exception table: from to target type 2 213 213 Class javax/ejb/FinderException 2 226 226 any see the jsr's jump to 234, but before the subroutine return at 238 there is an areturn out of the method (this method returns a String). After weaving we get something like this: 200: invokespecial #17; //Method com/MyException.""""<init>"""":(Ljava/lang/String;)V 203: athrow 204: aload_3 205: astore 6 207: jsr 238 210: aload 6 212: astore 9 214: goto 248 217: astore 4 219: aload 4 221: invokevirtual #79; //Method java/lang/Throwable.printStackTrace:()V 224: jsr 238 227: goto 246 230: astore 7 232: jsr 238 235: aload 7 237: athrow 238: astore 8 240: aload_3 241: astore 9 243: goto 248 246: astore 9 248: invokestatic #299; //Method After.aspectOf:()LAfter; 251: invokevirtual #302; //Method After.ajc$afterReturning$After$1$26d6d4a7:()V 254: aload 9 256: return see how the areturn has been lost - this code will blow up with a verify error (the string is on the stack, we just ignore it and 'return' normally)""",2006-07-25 05:45:06,e4ab0ae,['weaver/src/org/aspectj/weaver/bcel/e4ab0ae BcelShadow.java']
151845,Bug 151845 NPE while building,"""Building of a large project fails while weaving. NPE in EclipseSourceContext.removeUnnecessaryProblems(..) The project was just migrated to Eclipse 3.2 Eclipse newly installed with Eclipse SDK and via Update manager with AJDT, CDT, Web/J2EE tools, SubClipse, SpringIDE. Same Project workes in Eclipse 3.1. Simple Test AspectJ-Project workes OK Building with Ant/AspectJ compiler (as external Tools Launch in Eclipse) works. I tried the following, but got the error anyway: - Checked out as a new AspectJ Project - upgraded to the developement Version of AJDT""",2006-07-26 09:44:50,54f7bb4,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/54f7bb4 EclipseSourceContext.java']
151938,Bug 151938 Handle Duplicate -javaagent entries more gracefully,"""If you start a java 5 VM with AspectJ's load-time weaver specified more than once using the -javaagent flag, if there is an aop.xml file defined, it chokes badly: it tries to reweave the woven AspectJ code and emits massive amounts of bytecode. It would be better if AspectJ detected that it was specified more than once and gave a warning then disabled all but one of the agents. Failing that, it would be better to fail and give an error message than emit the bytecode. This issue came up for our automated installer, which adds a -javaagent flag to VM startup commands. If the script is wrapped twice, it can generate a duplicate. We are making our scripts more intelligent to avoid this issue, but we are probably not the only people who will hit this issue (e.g., if someone manually edits both setclasspath.bat and catalina.bat to add the flag for a Tomcat instance...)""",2006-07-26 19:33:29,bebb364,"['loadtime5/java5-src/org/aspectj/weaver/loadtime/bebb364 Agent.java', 'tests/java5/ataspectj/bebb364 HelloWorld.java', 'tests/java5/ataspectj/bebb364 MessageHandler.java', 'tests/src/org/aspectj/systemtest/ajc153/bebb364 Ajc153Tests.java']"
151978,Bug 151978 [3.2compiler] Generics program fails to compile,"""generics problem, reported on newsgroup by Thomas Darimont //package de.tutorials.aspectj; public interface IMessage { void publish(); } interface IErrorMessage extends IMessage{ StackTraceElement[] getStackTrace(); } interface IObjectFactory<E> { public <T extends E> T create(Class<T> theObjectType, Object[] theParameters); } class MessageFactory implements IObjectFactory<IMessage>{ public <T extends IMessage> T create(Class<T> theObjectType, Object[] theParameters) { return null; } } class Main { public static void main(String[] args) { IErrorMessage message = new MessageFactory().create(IErrorMessage.class, new Object[]{""""Foo"""",""""Bar""""}); } }""",2006-07-27 07:15:06,68c36e3,"['tests/bugs153/pr151978/68c36e3 IMessage.java', 'tests/src/org/aspectj/systemtest/ajc153/68c36e3 Ajc153Tests.java']"
151991,Bug 151991 Missing copyright/license in recently added modules,"""BuildModuleTests does not test for licenses in ajdoc, loadtime, loadtime5, weaver5. When I added the necessary logic there were a couple of failures. Could the owners please step forward ... epl-cpl-ibm|parc|xerox|others LICENSE FAIL: C:\workspaces\org.aspectj-Restructure\weaver5\java5-src\org\aspectj\weaver\reflect\DeferredResolvedPointcutDefinition.java epl-cpl-ibm|parc|xerox|others COPYRIGHT FAIL: C:\workspaces\org.aspectj-Restructure\weaver5\java5-src\org\aspectj\weaver\reflect\DeferredResolvedPointcutDefinition.java epl-cpl-ibm|parc|xerox|others LICENSE FAIL: C:\workspaces\org.aspectj-Restructure\weaver5\java5-src\org\aspectj\weaver\reflect\InternalUseOnlyPointcutParser.java epl-cpl-ibm|parc|xerox|others COPYRIGHT FAIL: C:\workspaces\org.aspectj-Restructure\weaver5\java5-src\org\aspectj\weaver\reflect\InternalUseOnlyPointcutParser.java Total passed: 7 failed: 2 I also noticed the following messages. Does anyone know what they mean? BuildModuleTest: Define """"run.build.tests"""" as a system property to run tests to build run-all-junit-tests (this is the only warning) class org.aspectj.internal.build.BuildModuleTest.testNoDuplicates() incomplete error building module weaver at org.aspectj.internal.tools.ant.taskdefs.BuildModule.build(BuildModule.java:145) at org.aspectj.internal.tools.ant.taskdefs.BuildModule.execute(BuildModule.java:117) at org.aspectj.internal.build.BuildModuleTest.doTask(BuildModuleTest.java:445) at org.aspectj.internal.build.BuildModuleTest.testNoDuplicates(BuildModuleTest.java:178) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124)Module at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)""",2006-07-27 08:58:44,7aa6cfe,['build/testsrc/org/aspectj/build/7aa6cfe BuildModuleTests.java']
152161,Bug 152161 Contribution: Support -Xset in Load-Time Weaving Configuration,I needed this to try out a setting in the pipelined compilation (-Xset:runMinimalMemory=true) ... I was able to verify that it parsed and set an option correctly in the debugger. I also have included a test that sets all the currently available options.,2006-07-28 11:51:55,039be68,"['loadtime/src/org/aspectj/weaver/loadtime/039be68 ClassLoaderWeavingAdaptor.java', 'loadtime/src/org/aspectj/weaver/loadtime/039be68 Options.java', 'tests/src/org/aspectj/systemtest/ajc150/ltw/039be68 LTWTests.java']"
152366,Bug 152366 LTW Within Patterns Should Accept AND For Consistency,"""The load-time weaving definition system accepts AND in addition to &amp;&amp; for pointcuts, but it silently accepts and then fails to work with type patterns that use AND. Such type patterns are important when creating exceptions (e.g., excluding weblogic..* &amp;&amp; !weblogic.jdbc..*) and using AND is also helpful here. I've attached a patch to support this and tests to show it's working.""",2006-07-31 14:44:20,7b831ff,"['loadtime/src/org/aspectj/weaver/loadtime/definition/7b831ff DocumentParser.java', 'tests/src/org/aspectj/systemtest/ajc150/ltw/7b831ff LTWTests.java']"
152388,Bug 152388 NPE in MessageUtil.addExtraSourceLocations,"""I get this message from an error in a recent dev build of AspectJ with load-time weaving. I don't know how there is a null source location associated with this message, but either it shouldn't be there or MessageUtil line 806 should use this patch: Index: src/org/aspectj/bridge/MessageUtil.java =================================================================== RCS file: /home/technology/org.aspectj/modules/bridge/src/org/aspectj/bridge/MessageUtil.java,v retrieving revision 1.11 diff -u -r1.11 MessageUtil.java --- src/org/aspectj/bridge/MessageUtil.java 1 Jun 2006 09:36:37 -0000 1.11 +++ src/org/aspectj/bridge/MessageUtil.java 31 Jul 2006 22:32:16 -0000 @@ -803,7 +803,7 @@ writer.println(baseMessage); for (Iterator iter = message.getExtraSourceLocations().iterator(); iter.hasNext();) { ISourceLocation element = (ISourceLocation) iter.next(); - writer.print(""""\tsee also: """" + element.toString()); + writer.print(""""\tsee also: """" + element); if (iter.hasNext()) { writer.println(); } NPE follows: java.lang.NullPointerException at org.aspectj.bridge.MessageUtil.addExtraSourceLocations(MessageUtil.java:806) at org.aspectj.bridge.MessageUtil.renderMessage(MessageUtil.java:793) at org.aspectj.bridge.Message.toString(Message.java:177) at org.aspectj.bridge.MessageWriter.render(MessageWriter.java:73) at org.aspectj.weaver.tools.WeavingAdaptor$WeavingAdaptorMessageHandler.render(WeavingAdaptor.java:471) at org.aspectj.bridge.MessageWriter.handleMessage(MessageWriter.java:41) at org.aspectj.weaver.tools.WeavingAdaptor$WeavingAdaptorMessageHandler.handleMessage(WeavingAdaptor.java:425) at org.aspectj.weaver.bcel.BcelTypeMunger.error(BcelTypeMunger.java:378) at org.aspectj.weaver.bcel.BcelTypeMunger.enforceDecpRule1_abstractMethodsImplemented(BcelTypeMunger.java:273) at org.aspectj.weaver.bcel.BcelTypeMunger.mungeNewParent(BcelTypeMunger.java:194) at org.aspectj.weaver.bcel.BcelTypeMunger.munge(BcelTypeMunger.java:106) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:450) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:115) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1613) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1564) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1341) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1163) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:288) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:214) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:76) at org.aspectj.ext.ltw13.ClassPreProcessorAdapter.preProcess(ClassPreProcessorAdapter.java:65) at org.codehaus.aspectwerkz.hook.impl.ClassPreProcessorHelper.defineClass0Pre(ClassPreProcessorHelper.java:107) at java.lang.ClassLoader.defineClass(ClassLoader.java:539) ... NOTE: I'm using Alex Vasseur's adaptor to invoke AspectJ LTW from a 1.4 VM, but with recursion protection added. I don't think that should change the expected behavior of Aj.""",2006-07-31 18:31:46,a38edd3,['bridge/src/org/aspectj/bridge/a38edd3 MessageUtil.java']
152589,Bug 152589 [pipeline] adding a whitespace results in adviceDidNotMatch warning,,2006-08-02 09:33:47,9664058,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/9664058 AjPipeliningCompilerAdapter.java', 'tests/src/org/aspectj/systemtest/incremental/tools/9664058 MultiProjectIncrementalTests.java']"
152631,Bug 152631 Problem with decp on an aspect using cflow,"""This occurs in the AspectJ build in AJDT from August 1 but not from July 31: java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelTypeMunger.enforceDecpRule1_abstractMethodsImplemented(BcelTypeMunger.java:250) at org.aspectj.weaver.bcel.BcelTypeMunger.mungeNewParent(BcelTypeMunger.java:194) at org.aspectj.weaver.bcel.BcelTypeMunger.munge(BcelTypeMunger.java:106) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:454) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:119) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1597) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1548) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1328) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1124) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.weaveQueuedEntries(AjPipeliningCompilerAdapter.java:451) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.queueForWeaving(AjPipeliningCompilerAdapter.java:389) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.afterProcessing(AjPipeliningCompilerAdapter.java:377) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$after$org_aspectj_ajdt_internal_compiler_CompilerAdapter$5$6b855184(CompilerAdapter.aj:98) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:533) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:891) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:246) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:165) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in:public class glassbox.agent.ErrorContainmentTest$ErrorMockAspect extends java.lang.Object implements glassbox.agent.api.NotSerializable: private static Throwable ajc$initFailureCause [Synthetic] public static final glassbox.agent.ErrorContainmentTest$ErrorMockAspect ajc$perSingletonInstance [Synthetic] static void <clinit>(): catch java.lang.Throwable -> E0 | INVOKESTATIC glassbox.agent.ErrorContainmentTest$ErrorMockAspect.ajc$postClinit ()V (line 60) catch java.lang.Throwable -> E0 GOTO L0 E0: ASTORE_0 ALOAD_0 PUTSTATIC glassbox.agent.ErrorContainmentTest$ErrorMockAspect.ajc$initFailureCause Ljava/lang/Throwable; L0: RETURN end static void <clinit>() void <init>(): ALOAD_0 // Lglassbox/agent/ErrorContainmentTest$ErrorMockAspect; this (line 60) INVOKESPECIAL java.lang.Object.<init> ()V RETURN end void <init>() public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$1$9589fc() AdviceAttribute(before, (scope() && call(* hook1())), 0, 1670) : NEW java.lang.RuntimeException (line 64) DUP LDC """"rte"""" INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/String;)V ATHROW end public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$1$9589fc() public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$2$f75db3e2() AdviceAttribute(before, execution(* glassbox.agent.ErrorContainmentTest.hook5()), 0, 1764) : NEW java.lang.RuntimeException (line 67) DUP LDC """"rte"""" INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/String;)V ATHROW end public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$2$f75db3e2() public void ajc$around$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$3$a3a17d(org.aspectj.runtime.internal.AroundClosure) AdviceAttribute(around, (scope() && call(* hook2())), 1, 1913) : NEW java.lang.Error (line 71) DUP LDC """"foo"""" INVOKESPECIAL java.lang.Error.<init> (Ljava/lang/String;)V ATHROW end public void ajc$around$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$3$a3a17d(org.aspectj.runtime.internal.AroundClosure) static void ajc$around$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$3$a3a17dproceed(org.aspectj.runtime.internal.AroundClosure) throws java.lang.Throwable org.aspectj.weaver.AjAttribute$AjSynthetic@19a01f9 : ALOAD_0 // Lglassbox/agent/ErrorContainmentTest$ErrorMockAspect; this (line 1) ICONST_0 ANEWARRAY java.lang.Object INVOKEVIRTUAL org.aspectj.runtime.internal.AroundClosure.run ([Ljava/lang/Object;)Ljava/lang/Object; INVOKESTATIC org.aspectj.runtime.internal.Conversions.voidValue (Ljava/lang/Object;)Ljava/lang/Object; RETURN end static void ajc$around$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$3$a3a17dproceed(org.aspectj.runtime.internal.AroundClosure) throws java.lang.Throwable public void ajc$after$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$4$bfd07f() AdviceAttribute(after, (scope() && call(* hook4())), 0, 1991) : NEW org.aspectj.lang.SoftException (line 74) DUP ACONST_NULL INVOKESPECIAL org.aspectj.lang.SoftException.<init> (Ljava/lang/Throwable;)V ATHROW end public void ajc$after$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$4$bfd07f() public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$5$e5bddfdc() AdviceAttribute(before, logErrorInTest(), 0, 2446) : GETSTATIC glassbox.agent.ErrorContainmentTest.logCount I (line 84) ICONST_1 IADD PUTSTATIC glassbox.agent.ErrorContainmentTest.logCount I RETURN (line 85) end public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$5$e5bddfdc() public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$6$16ecfe62() AdviceAttribute(before, (adviceexecution(* *) && (within(glassbox.util.logging.api.LogManagement) && (cflow(logError()) && cflow((execution(* testLoggingError(..)) && within(glassbox.agent.ErrorContainmentTest)))))), 0, 2506) : GETSTATIC java.lang.System.err Ljava/io/PrintStream; (line 87) LDC """"match"""" INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V RETURN (line 88) end public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$6$16ecfe62() public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$7$e9ae8482() AdviceAttribute(before, (adviceexecution(* *) && (within(glassbox.util.logging.api.LogManagement) && cflow((execution(* testLoggingError(..)) && within(glassbox.agent.ErrorContainmentTest))))), 0, 2721) : GETSTATIC java.lang.System.err Ljava/io/PrintStream; (line 90) LDC """"match in test"""" INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V RETURN (line 91) end public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$7$e9ae8482() public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$8$c6ac5351() AdviceAttribute(before, (adviceexecution(* *) && (within(glassbox.util.logging.api.LogManagement) && cflow(logError()))), 0, 2923) : GETSTATIC java.lang.System.err Ljava/io/PrintStream; (line 93) LDC """"match in log"""" INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V RETURN (line 94) end public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$8$c6ac5351() public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$9$16ecfe62() AdviceAttribute(before, (adviceexecution(* *) && (within(glassbox.util.logging.api.LogManagement) && (cflow(logError()) && cflow((execution(* testLoggingError(..)) && within(glassbox.agent.ErrorContainmentTest)))))), 0, 3069) : GETSTATIC glassbox.agent.ErrorContainmentTest.recursiveThrows I (line 96) ICONST_1 IADD PUTSTATIC glassbox.agent.ErrorContainmentTest.recursiveThrows I GETSTATIC glassbox.agent.ErrorContainmentTest.recursiveThrows I (line 97) ICONST_2 IF_ICMPGE L0 NEW java.lang.RuntimeException (line 98) DUP LDC """"recursive logging failure"""" INVOKESPECIAL java.lang.RuntimeException.<init> (Ljava/lang/String;)V ATHROW L0: RETURN (line 100) end public void ajc$before$glassbox_agent_ErrorContainmentTest$ErrorMockAspect$9$16ecfe62() public static glassbox.agent.ErrorContainmentTest$ErrorMockAspect aspectOf() org.aspectj.weaver.AjAttribute$AjSynthetic@3cd8fe : GETSTATIC glassbox.agent.ErrorContainmentTest$ErrorMockAspect.ajc$perSingletonInstance Lglassbox/agent/ErrorContainmentTest$ErrorMockAspect; (line 1) IFNONNULL L0 NEW org.aspectj.lang.NoAspectBoundException DUP LDC """"glassbox_agent_ErrorContainmentTest$ErrorMockAspect"""" GETSTATIC glassbox.agent.ErrorContainmentTest$ErrorMockAspect.ajc$initFailureCause Ljava/lang/Throwable; INVOKESPECIAL org.aspectj.lang.NoAspectBoundException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V ATHROW L0: GETSTATIC glassbox.agent.ErrorContainmentTest$ErrorMockAspect.ajc$perSingletonInstance Lglassbox/agent/ErrorContainmentTest$ErrorMockAspect; ARETURN end public static glassbox.agent.ErrorContainmentTest$ErrorMockAspect aspectOf() public static boolean hasAspect() org.aspectj.weaver.AjAttribute$AjSynthetic@1bd4f6 : GETSTATIC glassbox.agent.ErrorContainmentTest$ErrorMockAspect.ajc$perSingletonInstance Lglassbox/agent/ErrorContainmentTest$ErrorMockAspect; (line 1) IFNULL L0 ICONST_1 IRETURN L0: ICONST_0 IRETURN end public static boolean hasAspect() private static void ajc$postClinit() org.aspectj.weaver.AjAttribute$AjSynthetic@1febf91 : NEW glassbox.agent.ErrorContainmentTest$ErrorMockAspect (line 1) DUP INVOKESPECIAL glassbox.agent.ErrorContainmentTest$ErrorMockAspect.<init> ()V PUTSTATIC glassbox.agent.ErrorContainmentTest$ErrorMockAspect.ajc$perSingletonInstance Lglassbox/agent/ErrorContainmentTest$ErrorMockAspect; RETURN end private static void ajc$postClinit() end public class glassbox.agent.ErrorContainmentTest$ErrorMockAspect when type munging with (BcelTypeMunger ResolvedTypeMunger(Parent, null)) when weaving aspects when weaving when batch building BuildConfig[C:\devel\glassbox\.metadata\.plugins\org.eclipse.ajdt.core\glassboxMonitor.generated.lst] #Files=107 The source is: public class ErrorContainmentTest extends TestCase { ... static aspect ErrorMockAspect implements NotSerializable { ... I will try to narrow this down if the problem isn't obvious.""",2006-08-02 13:26:23,ff2377a,"['tests/bugs153/pr152631/ff2377a EMA.java', 'tests/src/org/aspectj/systemtest/ajc153/ff2377a Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/bcel/ff2377a BcelTypeMunger.java']"
152835,Bug 152835 ArrayIndexOutOfBoundsException in EclipseAdapterUtils.makeLocationContext,Got the following exception during startup of Eclipse java.lang.ArrayIndexOutOfBoundsException at org.aspectj.ajdt.internal.core.builder.EclipseAdapterUtils.makeLocationContext(EclipseAdapterUtils.java:65) at org.aspectj.ajdt.internal.core.builder.EclipseAdapterUtils.makeSourceLocation(EclipseAdapterUtils.java:121) at org.aspectj.ajdt.internal.core.builder.EclipseAdapterUtils.makeMessage(EclipseAdapterUtils.java:130) at org.aspectj.ajdt.internal.core.builder.AjBuildManager$4.acceptResult(AjBuildManager.java:959) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.acceptResult(AjPipeliningCompilerAdapter.java:402) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.afterProcessing(AjPipeliningCompilerAdapter.java:375) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$after$org_aspectj_ajdt_internal_compiler_CompilerAdapter$5$6b855184(CompilerAdapter.aj:98) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:533) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:891) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:246) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:165) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) ArrayIndexOutOfBoundsException thrown: -2,2006-08-04 06:00:33,908b405,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/908b405 EclipseAdapterUtils.java']
152873,Bug 152873 Optimize shouldWeaveAnnotationStyleAspect with Patch,,2006-08-04 15:21:07,f239f2a,"['testing/newsrc/org/aspectj/testing/f239f2a AntSpec.java', 'tests/java5/ataspectj/ataspectj/bugs/f239f2a NotAspect.java', 'tests/src/org/aspectj/systemtest/ajc150/ataspectj/f239f2a AtAjLTWTests.java', 'weaver/src/org/aspectj/weaver/f239f2a World.java', 'weaver/src/org/aspectj/weaver/tools/f239f2a IsAtAspectAnnotationVisitor.java', 'weaver/src/org/aspectj/weaver/tools/f239f2a WeavingAdaptor.java']"
152979,Bug 152979 Optimization: Reference Use and URL Caching in ClassLoader Repository,"""I have found that a lot of memory can get pinned by the BCEL ClassLoaderRepository. For example, on a test configuration of Glassbox with WebLogic over 40 megabytes were pinned in memory due to this loader. (*) I also notice that some of the time spent with loading and parsing redundant classes for shared weaving configuration could be reduced by having a global cache of bytes for URL's instead, i.e., the ClassLoaderRepository is local to a loader, so even if the same class on disk is resolved multiple times in different loaders, it isn't read from cache. This latter issue will be reduced if loading types from a parent loader use reflection delegates instead but BCEL still has to be used for aspects on <1.5 VM's... The attached patch has some metrics in it to measure what's happening and it also uses SoftReferences to cache without pinning the reference types and uses a two-step look up process to maintain a global URL cache. When I run this on WebLogic 9.2 with Glassbox and view their admin console and some smaller apps I get this output: BCEL repository total load time: 7733 ms, in url: 6029 ms for 1427 url cache hits = 1683 missEvicted = 0 missUrlEvicted= 0 all misses = 1427, loader hits = 0 On Tomcat 5.5 with some different sample apps: BCEL repository total load time: 4945 ms, in url: 4319 ms for 636 url cache hits = 548 missEvicted = 0 missUrlEvicted= 190 all misses= 446, loader hits = 3 So at least in my configuration the URL-based cache is quite effective (with almost a 50% hit rate) whereas the loader-based cache provides little value. From what I've seen, it's worth considering not even using the loader-based BCEL cache at all but others may have configurations where it helps. (*) This test was on a development build of AspectJ which I had modified so that the LTWWorld evicts classes after loading""",2006-08-07 11:04:12,387c3ac,"['bcel-builder/src/org/aspectj/apache/bcel/util/387c3ac ClassLoaderRepository.java', 'bcel-builder/testsrc/org/aspectj/apache/bcel/classfile/tests/387c3ac AllTests.java', 'bcel-builder/testsrc/org/aspectj/apache/bcel/classfile/tests/387c3ac ClassloaderRepositoryTest.java']"
153535,Bug 153535 Bug in reflection delegate signature for array of object type,"""The following problem is interesting because the advice weaves correctly with Java 1.5 LTW and also using Java 1.4 with build-time weaving. However, the following call pointcut isn't matching the expected call site in Java 1.4 load-time weaving (*). Pointcut: private pointcut inExecQuery() : (within(uk.ltd.getahead.dwr.impl.ExecuteQuery) || within(uk.ltd.getahead.dwr.ExecuteQuery)); public pointcut dwrQuery(Method method, Object receiver, Object[] params) : inExecQuery() && withincode(* execute(..)) && call(* Method.invoke(..)) && args(receiver, params) && target(method); protected pointcut monitorEnd() : dwrQuery(*, *, *); Matching call site: Object reply = method.invoke(object, params); I've tracked it down to failing to find the method in ResolvedType.matches. On line 405: """"m1.getSignature()""""= """"(Ljava/lang/Object;[Ljava.lang.Object;)Ljava/lang/Object;"""" """"m2.getSignature()""""= """"(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"""" Note the difference between . and / ^ ^ It looks to me like the signature for array types in the reflection delegate is erroneously using . instead of /. I have attached a patch to the ReflectionBasedReferenceTypeDelegateTest that isolates this unexpected signature return. Hopefully you agree that this is not correct. If not, some more information follows. Here's the stack trace where the match fails: ResolvedType.matches(Member, Member) line: 405 ReferenceType(ResolvedType).lookupMember(Member, Iterator) line: 347 ReferenceType(ResolvedType).lookupMethod(Member) line: 326 LTWWorld(World).resolve(Member) line: 504 MemberImpl.resolve(World) line: 93 JoinPointSignatureIterator.addSignaturesUpToFirstDefiningMember() line: 109 JoinPointSignatureIterator.<init>(Member, World) line: 51 MemberImpl.getJoinPointSignatures(World) line: 943 SignaturePattern.matches(Member, World, boolean) line: 286 KindedPointcut.matchInternal(Shadow) line: 106 KindedPointcut(Pointcut).match(Shadow) line: 146 AndPointcut.matchInternal(Shadow) line: 53 AndPointcut(Pointcut).match(Shadow) line: 146 AndPointcut.matchInternal(Shadow) line: 51 AndPointcut(Pointcut).match(Shadow) line: 146 AndPointcut.matchInternal(Shadow) line: 51 AndPointcut(Pointcut).match(Shadow) line: 146 AndPointcut.matchInternal(Shadow) line: 51 AndPointcut(Pointcut).match(Shadow) line: 146 OrPointcut.matchInternal(Shadow) line: 50 OrPointcut(Pointcut).match(Shadow) line: 146 BcelAdvice(ShadowMunger).match(Shadow, World) line: 71 BcelAdvice(Advice).match(Shadow, World) line: 112 BcelAdvice.match(Shadow, World) line: 107 BcelClassWeaver.match(BcelShadow, List) line: 2806 BcelClassWeaver.matchInvokeInstruction(LazyMethodGen, InstructionHandle, InvokeInstruction, BcelShadow, List) line: 2768 BcelClassWeaver.match(LazyMethodGen, InstructionHandle, BcelShadow, List) line: 2506 BcelClassWeaver.match(LazyMethodGen) line: 2332 BcelClassWeaver.weave() line: 494 BcelClassWeaver.weave(BcelWorld, LazyClassGen, List, List, List) line: 119 BcelWeaver.weave(UnwovenClassFile, BcelObjectType, boolean) line: 1613 BcelWeaver.weaveWithoutDump(UnwovenClassFile, BcelObjectType) line: 1564 BcelWeaver.weaveAndNotify(UnwovenClassFile, BcelObjectType, IWeaveRequestor) line: 1341 BcelWeaver.weave(IClassFileProvider) line: 1163 ClassLoaderWeavingAdaptor(WeavingAdaptor).getWovenBytes(String, byte[]) line: 319 ClassLoaderWeavingAdaptor(WeavingAdaptor).weaveClass(String, byte[]) line: 225 Aj.preProcess(String, byte[], ClassLoader) line: 77 ClassPreProcessorAdapter.preProcess(String, byte[], ClassLoader) line: 67 ClassPreProcessorHelper.defineClass0Pre(ClassLoader, String, byte[], int, int, ProtectionDomain) line: 107 WebappClassLoader(ClassLoader).defineClass(String, byte[], int, int, ProtectionDomain) line: 539 WebappClassLoader(SecureClassLoader).defineClass(String, byte[], int, int, CodeSource) line: 123 WebappClassLoader.findClassInternal(String) line: 1786 WebappClassLoader.findClass(String) line: 1048 WebappClassLoader.loadClass(String, boolean) line: 1506 WebappClassLoader.loadClass(String) line: 1385 WebappClassLoader(ClassLoader).loadClassInternal(String) line: 302 Class.forName0(String, boolean, ClassLoader) line: not available [native method] Class.forName(String) line: 141 InitializeLog.setWarnLogging(String) line: 121 InitializeLog.initializeLogging() line: 96 ContextLoaderServlet.init() line: 13 ContextLoaderServlet(GenericServlet).init(ServletConfig) line: 212 StandardWrapper.loadServlet() line: 879 StandardWrapper.load() line: 767 StandardContext.loadOnStartup(Container[]) line: 3483 StandardContext.start() line: 3709 StandardHost(ContainerBase).addChildInternal(Container) line: 776 StandardHost(ContainerBase).addChild(Container) line: 759 StandardHost.addChild(Container) line: 537 StandardHostDeployer.install(String, URL) line: 260 StandardHost.install(String, URL) line: 730 HostConfig.deployWARs(File, String[]) line: 558 HostConfig.deployApps() line: 373 HostConfig.start() line: 784 HostConfig.lifecycleEvent(LifecycleEvent) line: 330 LifecycleSupport.fireLifecycleEvent(String, Object) line: 119 StandardHost(ContainerBase).start() line: 1155 StandardHost.start() line: 696 StandardEngine(ContainerBase).start() line: 1147 StandardEngine.start() line: 310 StandardService.start() line: 449 StandardServer.start() line: 2212 Catalina.start() line: 458 Catalina.execute() line: 345 Catalina.process(String[]) line: 129 NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method] NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39 DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25 Method.invoke(Object, Object[]) line: 324 Bootstrap.main(String[]) line: 150 I'm using a modified version of Alex Vasseur's LTW plugin for a Java 1.4 VM although I haven't tested on the JRockIt plugin for a 1.4 VM: my guess is that this would fail there too.""",2006-08-11 03:34:59,82e3e13,"['weaver/src/org/aspectj/weaver/reflect/82e3e13 ReflectionWorld.java', 'weaver/testsrc/org/aspectj/weaver/reflect/82e3e13 ReflectionBasedReferenceTypeDelegateTest.java', 'weaver5/java5-testsrc/org/aspectj/weaver/reflect/82e3e13 ReflectionBasedReferenceTypeDelegateTest.java']"
153845,Bug 153845 [generics] Problem with signature for generic type,"""public aspect OuterAspect { private pointcut isSetter() : execution(void set*(..)); public static aspect InnerAspect pertarget(isSetter()) { } } java.lang.IllegalStateException at org.aspectj.apache.bcel.classfile.GenericSignatureParser.parseFieldTypeSignature(GenericSignatureParser.java:163) at org.aspectj.apache.bcel.classfile.GenericSignatureParser.parseTypeArgument(GenericSignatureParser.java:253) at org.aspectj.apache.bcel.classfile.GenericSignatureParser.maybeParseTypeArguments(GenericSignatureParser.java:261) at org.aspectj.apache.bcel.classfile.GenericSignatureParser.parseClassTypeSignature(GenericSignatureParser.java:208) at org.aspectj.apache.bcel.classfile.GenericSignatureParser.parseAsClassSignature(GenericSignatureParser.java:56) at org.aspectj.apache.bcel.classfile.Signature.asClassSignature(Signature.java:315) at org.aspectj.apache.bcel.classfile.JavaClass.getGenericClassTypeSignature(JavaClass.java:973) at org.aspectj.weaver.bcel.BcelObjectType.initializeFromJavaclass(BcelObjectType.java:164) at org.aspectj.weaver.bcel.BcelObjectType.<init>(BcelObjectType.java:131) at org.aspectj.weaver.bcel.BcelWorld.buildBcelDelegate(BcelWorld.java:337) at org.aspectj.weaver.bcel.BcelWorld.addSourceObjectType(BcelWorld.java:395) at org.aspectj.weaver.bcel.BcelWeaver.addIfAspect(BcelWeaver.java:263) at org.aspectj.weaver.bcel.BcelWeaver.addAspectsFromDirectory(BcelWeaver.java:255) at org.aspectj.weaver.bcel.BcelWeaver.addLibraryJarFile(BcelWeaver.java:205) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.initBcelWorld(AjBuildManager.java:698) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:223) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:199) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:170) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) IllegalStateException thrown: Expecting [,L, or T, but found Pjava while unpacking Ljava/util/AbstractSet<Pjava/util/Map$Entry<TK;TV;>;>;""",2006-08-14 21:28:08,70ae0f8,"['tests/bugs153/pr153845/70ae0f8 Aspect.java', 'tests/bugs153/pr153845/70ae0f8 Aspect2.java', 'tests/bugs153/pr153845/70ae0f8 GenericType.java', 'tests/bugs153/pr153845/70ae0f8 Interface.java', 'tests/bugs153/pr153845/70ae0f8 Nothing.java', 'tests/src/org/aspectj/systemtest/ajc153/70ae0f8 Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/70ae0f8 ReferenceType.java']"
154332,Bug 154332 [annotations] Incorrect handling of java.lang annotations when matching,"""As raised by Mr Bodkin on the list: Can anyone tell me why this compiling this program produces warnings for marker but not for deprecated (in a recent dev build of AJDT)? Is this just a bug? Both have runtime retention, so I would expect equivalent behavior. @Deprecated @Marker public aspect Annot { pointcut test() : within(@Marker *);// *); declare warning: staticinitialization(@Deprecated *): """"deprecated""""; declare warning: staticinitialization(@Marker *): """"marker""""; public static void main(String argz[]) { new Baz().foo(); } } @Deprecated @Marker class Baz { public void foo() {} } @Retention(RetentionPolicy.RUNTIME) public @interface Marker { }""",2006-08-18 03:49:03,59123b0,"['tests/bugs153/pr154332/59123b0 Annot.java', 'tests/src/org/aspectj/systemtest/ajc153/59123b0 Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/bcel/59123b0 BcelObjectType.java']"
155148,Bug 155148 jdk14 trace deadlock in oc4j,"""I turned on tracing for the Aj class inside of Oracle's OC4J server. In one test (not always) it deadlocked. It looks like the threads are each trying to lock each other's loader. Notice that one of the threads is in the toString method of the Oracle ClassLoader (perhaps another reason to prefer tracing argument class names and system identity hashcodes). Here's a thread dump from Ctrl+BREAK: Found one Java-level deadlock: ============================= """"WorkExecutorWorkerThread-1"""": waiting to lock monitor 0x003384ec (object 0x05239e48, a oracle.classloader.Po licyClassLoader), which is held by """"OC4J Launcher"""" """"OC4J Launcher"""": waiting to lock monitor 0x0033848c (object 0x0554f0e8, a oracle.classloader.Po licyClassLoader), which is held by """"WorkExecutorWorkerThread-1"""" Java stack information for the threads listed above: =================================================== """"WorkExecutorWorkerThread-1"""": at oracle.classloader.SearchPolicy.loadClass(SearchPolicy.java:641) - waiting to lock <0x05239e48> (a oracle.classloader.PolicyClassLoader) at oracle.classloader.PolicyClassLoader.askParentForClass(PolicyClassLoa der.java:1284) at oracle.classloader.SearchPolicy$AskParent.getClass(SearchPolicy.java: 69) at oracle.classloader.SearchSequence.getClass(SearchSequence.java:119) at oracle.classloader.SearchPolicy.loadClass(SearchPolicy.java:642) - locked <0x0554f0e8> (a oracle.classloader.PolicyClassLoader) at oracle.classloader.PolicyClassLoader.askParentForClass(PolicyClassLoa der.java:1284) at oracle.classloader.SearchPolicy$AskParent.getClass(SearchPolicy.java: 69) at oracle.classloader.SearchSequence.getClass(SearchSequence.java:119) at oracle.classloader.PolicyClassLoader.internalLoadClass(PolicyClassLoa der.java:1660) - locked <0x056a9ed0> (a oracle.classloader.PolicyClassLoader) at oracle.classloader.PolicyClassLoader.loadClass(PolicyClassLoader.java :1621) at oracle.classloader.PolicyClassLoader.loadClass(PolicyClassLoader.java :1606) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) - locked <0x056a9ed0> (a oracle.classloader.PolicyClassLoader) at oracle.j2ee.ra.jms.generic.WorkConsumer.doReceive(WorkConsumer.java:9 87) at oracle.j2ee.ra.jms.generic.WorkConsumer.run(WorkConsumer.java:215) - locked <0x05de2718> (a oracle.j2ee.ra.jms.generic.WorkConsumer) at oracle.j2ee.connector.work.WorkWrapper.runTargetWork(WorkWrapper.java :242) at oracle.j2ee.connector.work.WorkWrapper.doWork(WorkWrapper.java:215) at oracle.j2ee.connector.work.WorkWrapper.run(WorkWrapper.java:190) at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExec utor.java:814) at java.lang.Thread.run(Thread.java:595) """"OC4J Launcher"""": at oracle.classloader.PolicyClassLoader.toString(PolicyClassLoader.java: 1846) - waiting to lock <0x0554f0e8> (a oracle.classloader.PolicyClassLoader) at java.text.MessageFormat.subformat(MessageFormat.java:1237) at java.text.MessageFormat.format(MessageFormat.java:828) at java.text.Format.format(Format.java:133) at java.text.MessageFormat.format(MessageFormat.java:804) at java.util.logging.Formatter.formatMessage(Formatter.java:130) - locked <0x0514e920> (a java.util.logging.SimpleFormatter) at java.util.logging.SimpleFormatter.format(SimpleFormatter.java:63) - locked <0x0514e920> (a java.util.logging.SimpleFormatter) at java.util.logging.StreamHandler.publish(StreamHandler.java:179) - locked <0x0514a0a8> (a java.util.logging.FileHandler) at java.util.logging.FileHandler.publish(FileHandler.java:555) - locked <0x0514a0a8> (a java.util.logging.FileHandler) at java.util.logging.Logger.log(Logger.java:428) at java.util.logging.Logger.doLog(Logger.java:450) at java.util.logging.Logger.logp(Logger.java:619) at java.util.logging.Logger.entering(Logger.java:870) at org.aspectj.weaver.tools.Jdk14Trace.enter(Jdk14Trace.java:32) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:67) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(C lassPreProcessorAgentAdapter.java:55) at sun.instrument.TransformerManager.transform(TransformerManager.java:1 22) at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java :155) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:620) at oracle.classloader.PolicyClassLoader.defineClass(PolicyClassLoader.ja va:2224) at oracle.classloader.PolicyClassLoader.findLocalClass(PolicyClassLoader .java:1457) at oracle.classloader.SearchPolicy$FindLocal.getClass(SearchPolicy.java: 167) at oracle.classloader.SearchSequence.getClass(SearchSequence.java:119) at oracle.classloader.PolicyClassLoader.internalLoadClass(PolicyClassLoa der.java:1660) - locked <0x05239e48> (a oracle.classloader.PolicyClassLoader) at oracle.classloader.PolicyClassLoader.loadClass(PolicyClassLoader.java :1621) at oracle.classloader.PolicyClassLoader.loadClass(PolicyClassLoader.java :1606) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) - locked <0x05239e48> (a oracle.classloader.PolicyClassLoader) at com.evermind.server.http.HttpRequestHandler.<init>(HttpRequestHandler .java:97) at com.evermind.server.http.HttpConnectionListener$HttpNIOAcceptHandler. getReadHandler(HttpConnectionListener.java:116) at oracle.oc4j.network.ReadHandlerPool.getContextFromBackend(ReadHandler Pool.java:63) at com.evermind.util.BBPool.startPool(BBPool.java:42) at oracle.oc4j.network.ReadHandlerPool.register(ReadHandlerPool.java:25) - locked <0x05ec9290> (a java.util.ArrayList) at oracle.oc4j.network.ServerSocketAcceptHandler.setPoolOptions(ServerSo cketAcceptHandler.java:140) at com.evermind.server.http.HttpConnectionListener.setRequestHandlerPool (HttpConnectionListener.java:232) at com.evermind.server.http.HttpConnectionListener.initHandlers(HttpConn ectionListener.java:226) at com.evermind.server.http.HttpConnectionListener.<init>(HttpConnection Listener.java:174) at com.evermind.server.http.HttpServer.getListener(HttpServer.java:481) - locked <0x05ec4f88> (a com.evermind.server.http.HttpServer) at com.evermind.server.http.HttpServer.setSites(HttpServer.java:267) - locked <0x05ec4f88> (a com.evermind.server.http.HttpServer) at com.evermind.server.http.HttpServer.setConfig(HttpServer.java:180) at com.evermind.server.ApplicationServer.initializeHttp(ApplicationServe r.java:2296) at com.evermind.server.ApplicationServer.setConfig(ApplicationServer.jav a:944) at com.evermind.server.ApplicationServerLauncher.run(ApplicationServerLa uncher.java:113) - locked <0x0530eb20> (a java.lang.Object) at java.lang.Thread.run(Thread.java:595) Found 1 deadlock.""",2006-08-24 20:59:00,6be7097,"['loadtime/src/org/aspectj/weaver/loadtime/6be7097 DefaultWeavingContext.java', 'weaver/src/org/aspectj/weaver/tools/6be7097 AbstractTrace.java', 'weaver/testsrc/org/aspectj/weaver/6be7097 AbstractTraceTest.java', 'weaver5/java5-src/org/aspectj/weaver/tools/6be7097 Jdk14Trace.java']"
155213,Bug 155213 [ltw] can get into a state with the Version static initializer,"""The static initializer in Version that parses the time_text string and turns it into a long field seems to sometimes get loadtime weaving into a state - touching DateFormatters early on is always a pain, so I'm moving it to be processed on first reference. I could take it a step further ... if WeaverStateInfo didn't write out the time (it doesnt read it back in!!) it would never be used at all in normal processing - potentially saving us from loading a bunch of underpinning junk to do the formatting...""",2006-08-25 08:34:30,40cf610,"['ajde/src/org/aspectj/ajde/ui/swing/40cf610 OptionsFrame.java', 'bridge/src/org/aspectj/bridge/40cf610 Version.java', 'bridge/testsrc/org/aspectj/bridge/40cf610 VersionTest.java', 'weaver/src/org/aspectj/weaver/40cf610 AjAttribute.java']"
155238,"""Bug 155238 Trace should use System.identityHashCode, not hashCode""","""The tracing module uses obj.hashCode() to identify untrusted objects when formatting. I think it would be a little safer and more accurate to use System.identityHashCode(obj). This way the tracing code wouldn't call any application-defined code, and would give a value that can't change if the loader state changes.""",2006-08-25 11:46:46,14e8b7d,"['loadtime/src/org/aspectj/weaver/loadtime/14e8b7d DefaultWeavingContext.java', 'weaver/src/org/aspectj/weaver/tools/14e8b7d AbstractTrace.java']"
155347,Bug 155347 NPE during compilation of class file with pointcuts,"""I commented out a static nested aspect inside a class to let me do a rename refactoring in Eclipse. This results in the following exception, which even a full rebuild won't fix. The class does have pointcut definitions inside of it. Commenting those out avoids the problem (though it caused other syntax errors...) java.lang.ArrayIndexOutOfBoundsException at org.aspectj.weaver.patterns.IfPointcut.findResidueInternal(IfPointcut.java:186) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:269) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:93) at org.aspectj.weaver.patterns.Pointcut.findResidue(Pointcut.java:269) at org.aspectj.weaver.patterns.AndPointcut.findResidueInternal(AndPointcut.java:93) at or ... ses when weaving when batch building BuildConfig[C:\devel\glassbox\.metadata\.plugins\org.eclipse.ajdt.core\glassboxAgent.generated.lst] #Files=210""",2006-08-27 18:46:07,248962b,['weaver/src/org/aspectj/weaver/patterns/248962b IfPointcut.java']
155972,Bug 155972 NullPointerException in ConstructorSignature.getConstructor(),"""AspectJ version: 1.5.3.200608290814 When advising a constructor, we can do the following to obtain the constructor as a java.lang.reflect.Member: Member cons = ((ConstructorSignature) thisJoinPointStaticPart .getSignature()).getConstructor(); however that sometimes fails, and returns null.""",2006-09-01 08:45:05,090de7e,"['runtime/src/org/aspectj/runtime/reflect/090de7e ConstructorSignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/090de7e FieldSignatureImpl.java', 'runtime/src/org/aspectj/runtime/reflect/090de7e InitializerSignatureImpl.java', 'tests/bugs153/pr155972/090de7e ConstructorTest.java', 'tests/bugs153/pr155972/090de7e FieldTest.java', 'tests/bugs153/pr155972/090de7e InitializerTest.java', 'tests/src/org/aspectj/systemtest/ajc153/090de7e Ajc153Tests.java']"
156904,Bug 156904 Incorrect warning when advising a private method of a private inner class,"""The Eclipse AJDT give an incorrect warning when you want to advise a private method of a private inner class. When I want to advise a private method in a private inner class, like this public class Outer { private class Inner { private void myMethod() } } Using the following poincut: poincut innerpointcut():execution( * Outer.Inner.myMethod() ); and advice: before():innerpointcut() { System.out.println( """"executing!"""" ); } I get a warning """"invalidAbsoluteTypeName"""" next to my pointcut, but next to the advice, there is a marker that points to the private method.""",2006-09-11 13:39:27,782ade2,"['tests/bugs153/pr156904/inDiffPkgAndImport/782ade2 Outer.java', 'tests/bugs153/pr156904/inDiffPkgWithoutImport/782ade2 Outer.java', 'tests/bugs153/pr156904/inSamePkg/782ade2 Outer.java', 'tests/src/org/aspectj/systemtest/ajc153/782ade2 Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/patterns/782ade2 WildTypePattern.java']"
158412,Bug 158412 @Pointcut in declare error results in NPE,"""I am trying to use an @AspectJ @Pointcut in a """"normal"""" AspectJ declare error expression. That results in the following exception. java.lang.NullPointerException at org.aspectj.weaver.patterns.ReferencePointcut.concretize1(ReferencePointcut.java:361) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:233) at org.aspectj.weaver.patterns.NotPointcut.concretize1(NotPointcut.java:100) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:233) at org.aspectj.weaver.patterns.AndPointcut.concretize1(AndPointcut.java:97) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:233) at org.aspectj.weaver.patterns.Pointcut.concretize(Pointcut.java:220) at org.aspectj.weaver.Checker.concretize(Checker.java:45) at org.aspectj.weaver.CrosscuttingMembers.addShadowMunger(CrosscuttingMembers.java:91) at org.aspectj.weaver.CrosscuttingMembers.addDeclare(CrosscuttingMembers.java:122) at org.aspectj.weaver.CrosscuttingMembers.addDeclares(CrosscuttingMembers.java:113) at org.aspectj.weaver.CrosscuttingMembersSet.addAdviceLikeDeclares(CrosscuttingMembersSet.java:117) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.addAdviceLikeDeclares(AjLookupEnvironment.java:382) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:245) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:301) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:315) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:887) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:244) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:199) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:170) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null""",2006-09-23 05:11:13,e56a69a,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/e56a69a EclipseSourceType.java', 'tests/bugs153/pr158412/dao/e56a69a Foo.java', 'tests/bugs153/pr158412/layering/e56a69a SystemArchitektur.java', 'tests/src/org/aspectj/systemtest/ajc153/e56a69a Ajc153Tests.java']"
158573,Bug 158573 changing value of variable in aspect results in adviceDidNotMatch warning,,2006-09-25 11:09:03,cd9fd11,"['tests/multiIncremental/PR158573/base/cd9fd11 C.java', 'tests/src/org/aspectj/systemtest/incremental/tools/cd9fd11 MultiProjectIncrementalTests.java', 'weaver/src/org/aspectj/weaver/cd9fd11 CrosscuttingMembers.java', 'weaver/src/org/aspectj/weaver/bcel/cd9fd11 BcelAdvice.java']"
158624,Bug 158624 Compiler Error: generics and arrays,"""OK, not sure what to report here or what info you need, but here's the set up, message, and erroreous class. I don't understand the errors from the compiler enough to parse down the erroneous file to something that contains only the bug, but I could if direction were given. Here's my set up: Eclipse SDK Version: 3.2.0 Build id: M20060629-1905 With AJDT: Eclipse AspectJ Development Tools Version: 1.4.1.200608141223 AspectJ version: 1.5.3.200608210848 Here's the bug dump from the compiler inside Eclipse: java.lang.UnsupportedOperationException at org.aspectj.weaver.UnresolvedType.parameterize(UnresolvedType.java:221) at org.aspectj.weaver.ResolvedMemberImpl.parameterize(ResolvedMemberImpl.java:680) at org.aspectj.weaver.ResolvedMemberImpl.parameterize(ResolvedMemberImpl.java:690) at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:643) at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:597) at org.aspectj.weaver.ReferenceType.getDeclaredMethods(ReferenceType.java:508) at org.aspectj.weaver.ResolvedType$4.get(ResolvedType.java:226) at org.aspectj.weaver.Iterators$3$1.hasNext(Iterators.java:118) at org.aspectj.weaver.Iterators$5.hasNext(Iterators.java:171) at org.aspectj.weaver.Iterators$3.hasNext(Iterators.java:128) at org.aspectj.weaver.ResolvedType.lookupMember(ResolvedType.java:346) at org.aspectj.weaver.ResolvedType.lookupMethod(ResolvedType.java:327) at org.aspectj.weaver.World.resolve(World.java:523) at org.aspectj.weaver.MemberImpl.resolve(MemberImpl.java:93) at org.aspectj.weaver.JoinPointSignatureIterator.addSignaturesUpToFirstDefiningMember(JoinPointSignatureIterator.java:109) at org.aspectj.weaver.JoinPointSignatureIterator.<init>(JoinPointSignatureIterator.java:51) at org.aspectj.weaver.MemberImpl.getJoinPointSignatures(MemberImpl.java:943) at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:286) at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:106) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:146) at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:146) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:75) at org.aspectj.weaver.Advice.match(Advice.java:112) at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:117) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2806) at org.aspectj.weaver.bcel.BcelClassWeaver.matchInvokeInstruction(BcelClassWeaver.java:2768) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2506) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2332) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:494) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:119) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1606) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1557) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1335) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1155) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.weaveQueuedEntries(AjPipeliningCompilerAdapter.java:455) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.queueForWeaving(AjPipeliningCompilerAdapter.java:392) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.afterProcessing(AjPipeliningCompilerAdapter.java:380) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$after$org_aspectj_ajdt_internal_compiler_CompilerAdapter$5$6b855184(CompilerAdapter.aj:98) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:533) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:329) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:892) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:246) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:165) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) trouble in: public class com.wec.lib.util.test.SyncValueTest extends junit.framework.TestCase: private com.wec.lib.util.test.SyncValueTest$SyncInteger a private com.wec.lib.util.test.SyncValueTest$SyncInteger b private com.wec.lib.util.test.SyncValueTest$SyncInteger c private com.wec.lib.util.test.SyncValueTest$SyncInteger d private com.wec.lib.util.test.SyncValueTest$SyncInteger e public void <init>(): ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 17) INVOKESPECIAL junit.framework.TestCase.<init> ()V constructor-execution(void com.wec.lib.util.test.SyncValueTest.<init>()) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 27) | NEW com.wec.lib.util.test.SyncValueTest$SyncInteger | DUP | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | ICONST_1 | INVOKESPECIAL com.wec.lib.util.test.SyncValueTest$SyncInteger.<init> (Lcom/wec/lib/util/test/SyncValueTest;I)V | PUTFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 28) | NEW com.wec.lib.util.test.SyncValueTest$SyncInteger | DUP | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | ICONST_2 | INVOKESPECIAL com.wec.lib.util.test.SyncValueTest$SyncInteger.<init> (Lcom/wec/lib/util/test/SyncValueTest;I)V | PUTFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 29) | NEW com.wec.lib.util.test.SyncValueTest$SyncInteger | DUP | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | ICONST_3 | INVOKESPECIAL com.wec.lib.util.test.SyncValueTest$SyncInteger.<init> (Lcom/wec/lib/util/test/SyncValueTest;I)V | PUTFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 30) | NEW com.wec.lib.util.test.SyncValueTest$SyncInteger | DUP | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | ICONST_4 | INVOKESPECIAL com.wec.lib.util.test.SyncValueTest$SyncInteger.<init> (Lcom/wec/lib/util/test/SyncValueTest;I)V | PUTFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 31) | NEW com.wec.lib.util.test.SyncValueTest$SyncInteger | DUP | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | ICONST_5 | INVOKESPECIAL com.wec.lib.util.test.SyncValueTest$SyncInteger.<init> (Lcom/wec/lib/util/test/SyncValueTest;I)V | PUTFIELD com.wec.lib.util.test.SyncValueTest.e Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | RETURN (line 17) constructor-execution(void com.wec.lib.util.test.SyncValueTest.<init>()) end public void <init>() public void testSyncValueGroup() org.aspectj.weaver.MethodDeclarationLineNumber: 39:1035 : method-execution(void com.wec.lib.util.test.SyncValueTest.testSyncValueGroup()) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 42) | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_1 | ANEWARRAY com.wec.lib.util.SyncValueGroup | DUP | ICONST_0 | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | AASTORE | method-call(void com.wec.lib.util.test.SyncValueTest$SyncInteger.link(com.wec.lib.util.SyncValueGroup[])) | | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.link ([Lcom/wec/lib/util/SyncValueGroup;)V | method-call(void com.wec.lib.util.test.SyncValueTest$SyncInteger.link(com.wec.lib.util.SyncValueGroup[])) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 43) | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | IF_ACMPNE L0 | ICONST_1 | GOTO L1 | L0: ICONST_0 | L1: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_1 (line 44) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L2 | ICONST_1 | GOTO L3 | L2: ICONST_0 | L3: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 45) | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_2 | INVOKESTATIC java.lang.Integer.valueOf (I)Ljava/lang/Integer; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.setValue (Ljava/lang/Object;)V | ICONST_2 (line 46) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L4 | ICONST_1 | GOTO L5 | L4: ICONST_0 | L5: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 47) | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_1 | ANEWARRAY com.wec.lib.util.SyncValueGroup | DUP | ICONST_0 | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | AASTORE | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.link ([Lcom/wec/lib/util/SyncValueGroup;)V | ICONST_2 (line 48) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L6 | ICONST_1 | GOTO L7 | L6: ICONST_0 | L7: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 49) | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_3 | INVOKESTATIC java.lang.Integer.valueOf (I)Ljava/lang/Integer; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.setValue (Ljava/lang/Object;)V | ICONST_3 (line 50) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L8 | ICONST_1 | GOTO L9 | L8: ICONST_0 | L9: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_3 (line 51) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L10 | ICONST_1 | GOTO L11 | L10: ICONST_0 | L11: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 52) | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_4 | INVOKESTATIC java.lang.Integer.valueOf (I)Ljava/lang/Integer; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.setValue (Ljava/lang/Object;)V | ICONST_4 (line 53) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L12 | ICONST_1 | GOTO L13 | L12: ICONST_0 | L13: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_4 (line 54) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L14 | ICONST_1 | GOTO L15 | L14: ICONST_0 | L15: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 55) | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_1 | INVOKESTATIC java.lang.Integer.valueOf (I)Ljava/lang/Integer; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.setValue (Ljava/lang/Object;)V | ICONST_1 (line 56) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L16 | ICONST_1 | GOTO L17 | L16: ICONST_0 | L17: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_1 (line 57) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L18 | ICONST_1 | GOTO L19 | L18: ICONST_0 | L19: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 59) | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_1 | ANEWARRAY com.wec.lib.util.SyncValueGroup | DUP | ICONST_0 | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.e Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | AASTORE | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.link ([Lcom/wec/lib/util/SyncValueGroup;)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 60) | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.e Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | IF_ACMPNE L20 | ICONST_1 | GOTO L21 | L20: ICONST_0 | L21: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 63) | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_1 | ANEWARRAY com.wec.lib.util.SyncValueGroup | DUP | ICONST_0 | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | AASTORE | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.link ([Lcom/wec/lib/util/SyncValueGroup;)V | ICONST_1 (line 64) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L22 | ICONST_1 | GOTO L23 | L22: ICONST_0 | L23: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_1 (line 65) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.e Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L24 | ICONST_1 | GOTO L25 | L24: ICONST_0 | L25: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 66) | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | BIPUSH 8 | INVOKESTATIC java.lang.Integer.valueOf (I)Ljava/lang/Integer; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.setValue (Ljava/lang/Object;)V | BIPUSH 8 (line 67) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L26 | ICONST_1 | GOTO L27 | L26: ICONST_0 | L27: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | BIPUSH 8 (line 68) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L28 | ICONST_1 | GOTO L29 | L28: ICONST_0 | L29: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | BIPUSH 8 (line 69) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L30 | ICONST_1 | GOTO L31 | L30: ICONST_0 | L31: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | BIPUSH 8 (line 70) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L32 | ICONST_1 | GOTO L33 | L32: ICONST_0 | L33: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | BIPUSH 8 (line 71) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.e Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L34 | ICONST_1 | GOTO L35 | L34: ICONST_0 | L35: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 74) | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.unlink ()V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 75) | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_3 | INVOKESTATIC java.lang.Integer.valueOf (I)Ljava/lang/Integer; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.setValue (Ljava/lang/Object;)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 76) | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_2 | INVOKESTATIC java.lang.Integer.valueOf (I)Ljava/lang/Integer; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.setValue (Ljava/lang/Object;)V | ICONST_2 (line 77) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L36 | ICONST_1 | GOTO L37 | L36: ICONST_0 | L37: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_2 (line 78) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L38 | ICONST_1 | GOTO L39 | L38: ICONST_0 | L39: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_3 (line 79) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L40 | ICONST_1 | GOTO L41 | L40: ICONST_0 | L41: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_2 (line 80) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L42 | ICONST_1 | GOTO L43 | L42: ICONST_0 | L43: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_2 (line 81) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.e Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L44 | ICONST_1 | GOTO L45 | L44: ICONST_0 | L45: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 82) | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.unlink ()V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 83) | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_1 | ANEWARRAY com.wec.lib.util.SyncValueGroup | DUP | ICONST_0 | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | AASTORE | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.link ([Lcom/wec/lib/util/SyncValueGroup;)V | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this (line 84) | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | ICONST_1 | INVOKESTATIC java.lang.Integer.valueOf (I)Ljava/lang/Integer; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.setValue (Ljava/lang/Object;)V | ICONST_1 (line 85) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.a Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L46 | ICONST_1 | GOTO L47 | L46: ICONST_0 | L47: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_1 (line 86) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.b Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L48 | ICONST_1 | GOTO L49 | L48: ICONST_0 | L49: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_3 (line 87) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.c Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L50 | ICONST_1 | GOTO L51 | L50: ICONST_0 | L51: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_3 (line 88) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.d Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L52 | ICONST_1 | GOTO L53 | L52: ICONST_0 | L53: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | ICONST_1 (line 89) | ALOAD_0 // Lcom/wec/lib/util/test/SyncValueTest; this | GETFIELD com.wec.lib.util.test.SyncValueTest.e Lcom/wec/lib/util/test/SyncValueTest$SyncInteger; | INVOKEVIRTUAL com.wec.lib.util.test.SyncValueTest$SyncInteger.getValue ()Ljava/lang/Object; | CHECKCAST java.lang.Integer | INVOKEVIRTUAL java.lang.Integer.intValue ()I | IF_ICMPNE L54 | ICONST_1 | GOTO L55 | L54: ICONST_0 | L55: INVOKESTATIC com.wec.lib.util.test.SyncValueTest.assertTrue (Z)V | RETURN (line 90) method-execution(void com.wec.lib.util.test.SyncValueTest.testSyncValueGroup()) end public void testSyncValueGroup() end public class com.wec.lib.util.test.SyncValueTest when weaving classes when weaving when batch building BuildConfig[D:\workspace\.metadata\.plugins\org.eclipse.ajdt.core\ANSER2.generated.lst] #Files=365 Here's the class: package com.wec.lib.util.test; import static com.wec.ide.Constants.UNCHECKED; import junit.framework.TestCase; import org.junit.Test; import com.wec.lib.util.SyncValueGroup; import com.wec.scrum.Tests; /** * This class tests the SyncValueGroup utility class. */ @Tests(classes = { SyncValueGroup.class }) @SuppressWarnings(""""nls"""") public class SyncValueTest extends TestCase { class SyncInteger extends SyncValueGroup<Integer> { public SyncInteger(int val) { super(new Integer(val)); } public void valueChanged() { } } private SyncInteger a = new SyncInteger(1); private SyncInteger b = new SyncInteger(2); private SyncInteger c = new SyncInteger(3); private SyncInteger d = new SyncInteger(4); private SyncInteger e = new SyncInteger(5); /** * Ensures that SyncValueGroup replicates values and * calls valueChange. */ @SuppressWarnings(UNCHECKED) @Test public void testSyncValueGroup() { // Link tests a.link(b); assertTrue(a.getValue() == b.getValue()); assertTrue(1 == b.getValue()); b.setValue(2); assertTrue(2 == a.getValue()); b.link(c); assertTrue(2 == c.getValue()); c.setValue(3); assertTrue(3 == a.getValue()); assertTrue(3 == b.getValue()); a.setValue(4); assertTrue(4 == c.getValue()); assertTrue(4 == b.getValue()); b.setValue(1); assertTrue(1 == c.getValue()); assertTrue(1 == a.getValue()); d.link(e); assertTrue(d.getValue() == e.getValue()); // Join loops b.link(d); assertTrue(1 == d.getValue()); assertTrue(1 == e.getValue()); d.setValue(8); assertTrue(8 == a.getValue()); assertTrue(8 == b.getValue()); assertTrue(8 == c.getValue()); assertTrue(8 == d.getValue()); assertTrue(8 == e.getValue()); // Unlink tests c.unlink(); c.setValue(3); b.setValue(2); assertTrue(2 == a.getValue()); assertTrue(2 == b.getValue()); assertTrue(3 == c.getValue()); assertTrue(2 == d.getValue()); assertTrue(2 == e.getValue()); d.unlink(); c.link(d); a.setValue(1); assertTrue(1 == a.getValue()); assertTrue(1 == b.getValue()); assertTrue(3 == c.getValue()); assertTrue(3 == d.getValue()); assertTrue(1 == e.getValue()); } }""",2006-09-25 14:18:53,ea4ff8a,"['tests/bugs153/pr158624/ea4ff8a ValueChange.java', 'tests/src/org/aspectj/systemtest/ajc153/ea4ff8a Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/ea4ff8a ResolvedMemberImpl.java']"
159143,Bug 159143 subtype pattern not working for declare annotation on method,"""Using AspectJ 1.5.3.200609271036, when declaring an annotation on a method, get unexpected error when using subtype wildcard for the declaring type. E.g., declare @method : void Foo+.foo() : @MethodAnnotation; Error text: """"The method 'void Foo+.foo()' does not exist""""""",2006-09-28 12:47:33,513564a,"['tests/bugs153/pr159143/513564a DeclareMethodAnnotation.java', 'tests/src/org/aspectj/systemtest/ajc153/513564a Ajc153Tests.java']"
159896,Bug 159896 advice from injars do not have unique handles with the JDTLikeHandleProvider,Advice of the same kind contained in the same aspect currently do not have unique handles if the aspect is on the aspectpath.,2006-10-05 11:44:57,d532892,"['tests/features153/jdtlikehandleprovider/d532892 ClassForAspectpath.java', 'tests/src/org/aspectj/systemtest/ajc153/d532892 JDTLikeHandleProviderTests.java', 'weaver/src/org/aspectj/weaver/d532892 ShadowMunger.java', 'weaver/src/org/aspectj/weaver/patterns/d532892 DeclareErrorOrWarning.java']"
160167,Bug 160167 NPE when using crossrefs option for iajc ant task,"""The ant task is shown below. I ommited the full paths to the values of inpath, outJar, and argfiles, because they are somewhat long (hence the """"..."""" before the file names): <iajc crossrefs=""""true"""" argfiles=""""...\weave-jars.txt"""" inpath=""""...\org.eclipse.core.runtime_3.2.0.v20060603.jar"""" outJar=""""...\org.eclipse.core.runtime_3.2.0.v20060603_woven.jar""""> <classpath> <pathelement location=""""C:\aspectj1.5\lib\aspectjrt.jar""""/> <fileset dir=""""${plugins.dir}""""> <include name=""""**/*.jar""""/> </fileset> </classpath> </iajc> My argfile only contains the absolute path of a single .aj file, which contains one aspect. The aspect is shown below. It is very basic - advice bodies simply toggle a boolean variable. public aspect FFDC { public static boolean bit = false; protected pointcut ffdcScope(): within(org.eclipse..*); protected pointcut excluded(): within(org.eclipse.ffdc.FFDC+) || within(org.eclipse.core.internal.runtime.PlatformActivator); before(CoreException c): ffdcScope() && !excluded() && handler(CoreException+) && args(c) { bit = !bit; } after() throwing(CoreException c): ffdcScope() && !excluded() && !handler(*) { bit = !bit; } after(Plugin activator): execution(void PlatformActivator.start(..)) && this(activator) { bit = !bit; } } This task worked properly before I added """"crossrefs=true"""". After adding this option, I get the following error: weave-C:\eclipse\sdk-aspect-package\eclipse\plugins\org.eclipse.core.runtime_3.2.0.v20060603.jar: [iajc] abort ABORT -- (NullPointerException) null [iajc] null [iajc] java.lang.NullPointerException [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:313) [iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:163) [iajc] at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112) [iajc] at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) [iajc] at org.aspectj.tools.ajc.Main.run(Main.java:367) [iajc] at org.aspectj.tools.ajc.Main.runMain(Main.java:246) [iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTask.java:1282) [iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:1080) [iajc] at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275) [iajc] at org.apache.tools.ant.Task.perform(Task.java:364) [iajc] at org.apache.tools.ant.Target.execute(Target.java:341) [iajc] at org.apache.tools.ant.Target.performTasks(Target.java:369) [iajc] at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216) [iajc] at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:37) [iajc] at org.apache.tools.ant.Project.executeTargets(Project.java:1068) [iajc] at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:382) [iajc] at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:107) [iajc] at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275) [iajc] at org.apache.tools.ant.Task.perform(Task.java:364) [iajc] at org.apache.tools.ant.Target.execute(Target.java:341) [iajc] at org.apache.tools.ant.Target.performTasks(Target.java:369) [iajc] at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216) [iajc] at org.apache.tools.ant.Project.executeTarget(Project.java:1185) [iajc] at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40) [iajc] at org.apache.tools.ant.Project.executeTargets(Project.java:1068) [iajc] at org.apache.tools.ant.Main.runBuild(Main.java:668) [iajc] at org.apache.tools.ant.Main.startAnt(Main.java:187) [iajc] at org.apache.tools.ant.launch.Launcher.run(Launcher.java:246) [iajc] at org.apache.tools.ant.launch.Launcher.main(Launcher.java:67)""",2006-10-08 18:51:11,f7508cf,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/f7508cf AjBuildManager.java']
160496,Bug 160496 ajdoc Main class needs refactoring for ease of use,"""Whilst looking at other ajdoc bugs it was slightly confusing to read the main ajdoc method. I didn't want to include the refactoring of this within patches for the other bugs as this is mearly for ease of use. Therefore, raising this enhancement to cover it.""",2006-10-11 11:41:29,efe6cc7,['ajdoc/src/org/aspectj/tools/ajdoc/efe6cc7 Main.java']
161217,Bug 161217 NPE in BcelAdvice,"""I've been playing with some aspect deployment models and got into this error during project rebuild from AJDT: java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:199) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:699) at org.aspectj.weaver.Shadow.implement(Shadow.java:471) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2832) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:506) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeave ... lasses when weaving when batch building BuildConfig[...] #Files=6 Here is the aspect and classes it is applied to: ----- @Aspect(""""percflow(execution(* InstrumentedBean.getProperty2()))"""") public class GetFieldAtAspect { @Around(""""execution(* ConfigurableBean.getProperty2())"""") public Object onGet(ProceedingJoinPoint jp) throws Throwable { return jp.proceed(); } } ------ import org.springframework.beans.factory.InitializingBean; public class InstrumentedBean implements InitializingBean, IInstrumentedBean { private ConfigurableBean configurableBean; private String value; private transient String transientValue = """"aaa""""; public void afterPropertiesSet() throws Exception { this.configurableBean = new ConfigurableBean(); } public String getProperty1() { synchronized(this) { return this.configurableBean.getProperty1(); } } public String getProperty2() { synchronized(this) { return this.configurableBean.getProperty2(); } } public void setValue(String value) { synchronized(this) { this.value = value; } } public Object getValue() { synchronized(this) { return value; } } public Object getTransientValue() { return transientValue; } public void setTransientValue(String transientValue) { this.transientValue = transientValue; } } ------ import java.io.Serializable; import org.springframework.beans.factory.annotation.Configurable; @Configurable public class ConfigurableBean implements Serializable { private static final long serialVersionUID = 1L; private String property1; private String property2; public ConfigurableBean() { } public String getProperty1() { return this.property1; } public String getProperty2() { return this.property2; } public void setProperty1(String property1) { this.property1 = property1; } public void setProperty2(String property2) { this.property2 = property2; } }""",2006-10-17 08:19:24,044542c,"['tests/bugs153/pr161217/044542c AtAspectJAspect.java', 'tests/bugs153/pr161217/044542c C.java', 'tests/src/org/aspectj/systemtest/ajc153/044542c Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/bcel/044542c BcelAdvice.java']"
161502,Bug 161502 UnsupportedOperationException thrown: unable to parameterize unresolved type: Pjava/util/List<+Ljava/lang/Object; >;,"""Generic parameters (like List<? extends T>) in pointcuts throw UnsupportedOperationException. java.lang.UnsupportedOperationException at org.aspectj.weaver.UnresolvedType.parameterize(UnresolvedType.java: 220) at org.aspectj.weaver.patterns.ExactTypePattern.parameterizeWith (ExactTypePattern.java:244) at org.aspectj.weaver.patterns.SignaturePattern.parameterizeWith (SignaturePattern.java:265) at org.aspectj.weaver.patterns.KindedPointcut.parameterizeWith (KindedPointcut.java:381) at org.aspectj.weaver.bcel.BcelAdvice.parameterizeWith (BcelAdvice.java:93) at org.aspectj.weaver.ResolvedType.getDeclaredAdvice (ResolvedType.java:710) at org.aspectj.weaver.ResolvedType.getDeclaredShadowMungers (ResolvedType.java:739) at org.aspectj.weaver.ResolvedType.collectShadowMungers (ResolvedType.java:575) at org.aspectj.weaver.ResolvedType.collectCrosscuttingMembers (ResolvedType.java:504) at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect (CrosscuttingMembersSet.java:68) at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect (CrosscuttingMembersSet.java:57) at org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave(BcelWeaver.java: 450) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave (AjCompilerAdapter.java:299) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling (AjCompilerAdapter.java:192) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc $afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2 $f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile (Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation (AjBuildManager.java:887) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild (AjBuildManager.java:244) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile (CompilerAdapter.java:122) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run (AspectJBuildManager.java:191) UnsupportedOperationException thrown: unable to parameterize unresolved type: Pjava/util/List<+Ljava/lang/Object;>; To reproduce this exception compile the following code snippet. import java.util.ArrayList; import java.util.List; import org.aspectj.lang.ProceedingJoinPoint; import org.aspectj.lang.annotation.Around; import org.aspectj.lang.annotation.Aspect; public class Main { public List<? extends Element> getElements() { return new ArrayList<Element>(); } class Element {}; @Aspect static abstract class Base<T> { @Around(""""call(List<? extends T> *.*(..))"""") public List<? extends T> elementList(ProceedingJoinPoint thisJoinPoint) { try { return (List<? extends T>)thisJoinPoint.proceed(); } catch (Throwable e) { throw new RuntimeException(e); } } } @Aspect static class Concrete extends Base<Element> {} public static void main(String[] args) { new Main().getElements(); } }""",2006-10-18 22:23:58,7b40e7e,"['tests/bugs153/pr161502/7b40e7e Main.java', 'tests/bugs153/pr161502/7b40e7e Main2.java', 'tests/src/org/aspectj/systemtest/ajc153/7b40e7e Ajc153Tests.java', 'weaver/src/org/aspectj/weaver/7b40e7e BoundedReferenceType.java', 'weaver/src/org/aspectj/weaver/7b40e7e Checker.java', 'weaver/src/org/aspectj/weaver/7b40e7e ReferenceType.java', 'weaver/src/org/aspectj/weaver/7b40e7e ResolvedPointcutDefinition.java', 'weaver/src/org/aspectj/weaver/7b40e7e ResolvedType.java', 'weaver/src/org/aspectj/weaver/7b40e7e TypeVariable.java', 'weaver/src/org/aspectj/weaver/7b40e7e TypeVariableReferenceType.java', 'weaver/src/org/aspectj/weaver/bcel/7b40e7e BcelAdvice.java', 'weaver/src/org/aspectj/weaver/bcel/7b40e7e BcelTypeMunger.java', 'weaver/src/org/aspectj/weaver/internal/tools/7b40e7e PointcutDesignatorHandlerBasedPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e AndAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e AndPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e AndTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e AnnotationPatternList.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e AnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e AnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e ArgsAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e ArgsPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e BindingAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e BindingTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e CflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e ConcreteCflowPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e Declare.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e DeclareAnnotation.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e DeclareErrorOrWarning.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e DeclareParents.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e DeclarePrecedence.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e DeclareSoft.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e ExactAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e ExactTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e HandlerPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e HasMemberTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e IfPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e KindedPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e NotAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e NotPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e NotTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e OrAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e OrPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e OrTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e PerCflow.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e PerFromSuper.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e PerObject.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e PerSingleton.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e PerTypeWithin.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e Pointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e ReferencePointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e SignaturePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e ThisOrTargetAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e ThisOrTargetPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e ThrowsPattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e TypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e TypePatternList.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e WildAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e WildTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e WithinAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e WithinCodeAnnotationPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e WithinPointcut.java', 'weaver/src/org/aspectj/weaver/patterns/7b40e7e WithincodePointcut.java']"
163802,Bug 163802 Compilation error,"""Hello, I had several times aspectj compiler errors when compiling some normal java class file (not refering any aspect nor concerned by an aspect) but in a aspectJ project. Bug goes away after cleaning project. Here is the error reported for my class java.lang.NullPointerException at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1158) at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1158) at org.aspectj.weaver.ResolvedType.getInterTypeMungersIncludingSupers(ResolvedType.java:1135) at org.aspectj.weaver.ResolvedType.checkInterTypeMungers(ResolvedType.java:1202) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInt ... Adapter.java:102) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null It occurs with plugin configuration: com.ibm.icu (3.4.5) """"International Components for Unicode for Java (ICU4J)"""" [Active] com.ibm.icu.source (3.4.5) """"International Components for Unicode for Java (ICU4J) source plug-in"""" [Resolved] com.jcraft.jsch (0.1.28) """"JSch"""" [Resolved] net.sf.fjep.fatjar (0.0.24) """"Fat Jar Plug-in"""" [Resolved] org.apache.ant (1.6.5) """"Apache Ant"""" [Resolved] org.apache.lucene (1.4.103.v20060601) """"Apache Lucene"""" [Resolved] org.aspectj.ajde (1.5.3.200610201049) """"AspectJ"""" [Active] org.aspectj.runtime (1.5.3.200610201049) """"AspectJ Runtime"""" [Resolved] org.aspectj.weaver (1.5.3.200610201049) """"AspectJ Weaver"""" [Resolved] org.eclipse.ajdt.core (1.4.1.200611071030) """"AspectJ Development Tools Core"""" [Active] org.eclipse.ajdt.examples (1.4.1.200611071030) """"AspectJ Examples"""" [Resolved] org.eclipse.ajdt.pde.build (1.4.1.200611071030) """"AspectJ Plug-in Development Environment Build Support"""" [Resolved] org.eclipse.ajdt.source (1.4.1.200611071030) """"pluginName"""" [Resolved] org.eclipse.ajdt.ui (1.4.1.200611071030) """"AspectJ Development Tools UI"""" [Active] org.eclipse.ant.core (3.1.100.v20060531) """"Ant Build Tool Core"""" [Resolved] org.eclipse.ant.ui (3.2.1.r321_v20060828) """"Ant UI"""" [Resolved] org.eclipse.aspectj (1.4.1.200611071030) """"AspectJ Development Tools"""" [Resolved] org.eclipse.compare (3.2.1.M20060711) """"Compare Support"""" [Active] org.eclipse.contribution.visualiser (2.2.0.200611071030) """"Visualiser Plug-in"""" [Resolved] org.eclipse.contribution.xref.core (1.4.1.200611071030) """"Cross Reference Core Plugin"""" [Active] org.eclipse.contribution.xref.ui (1.4.1.200611071030) """"Cross Reference UI Plugin"""" [Active] org.eclipse.core.boot (3.1.100.v20060603) """"Core Boot"""" [Resolved] org.eclipse.core.commands (3.2.0.I20060605-1400) """"Commands"""" [Resolved] org.eclipse.core.contenttype (3.2.0.v20060603) """"Eclipse Content Mechanism"""" [Active] org.eclipse.core.expressions (3.2.1.r321_v20060721) """"Expression Language"""" [Active] org.eclipse.core.filebuffers (3.2.1.r321_v20060721) """"File Buffers"""" [Active] org.eclipse.core.filesystem (1.0.0.v20060603) """"Core File Systems"""" [Resolved] org.eclipse.core.filesystem.macosx (1.0.0.v20060603) """"Core File System for Macintosh"""" [Resolved] org.eclipse.core.jobs (3.2.0.v20060603) """"Eclipse Jobs Mechanism"""" [Active] org.eclipse.core.resources (3.2.1.R32x_v20060914) """"Core Resource Management"""" [Active] org.eclipse.core.resources.compatibility (3.2.0.v20060603) """"Core Resource Management Compatibility Fragment"""" [Resolved] org.eclipse.core.runtime (3.2.0.v20060603) """"Core Runtime"""" [Active] org.eclipse.core.runtime.compatibility (3.1.100.v20060603) """"Core Runtime Plug-in Compatibility"""" [Active] org.eclipse.core.runtime.compatibility.auth (3.2.0.v20060601) """"Authorization Compatibility Plug-in"""" [Active] org.eclipse.core.runtime.compatibility.registry (3.2.1.R32x_v20060907) """"Eclipse Registry Compatibility Fragment"""" [Resolved] org.eclipse.core.variables (3.1.100.v20060605) """"Core Variables"""" [Active] org.eclipse.debug.core (3.2.1.v20060823) """"Debug Core"""" [Active] org.eclipse.debug.ui (3.2.1.v20060823) """"Debug UI"""" [Active] org.eclipse.equinox.common (3.2.0.v20060603) """"Common Eclipse Runtime"""" [Active] org.eclipse.equinox.preferences (3.2.1.R32x_v20060717) """"Eclipse Preferences Mechanism"""" [Active] org.eclipse.equinox.registry (3.2.1.R32x_v20060814) """"Extension Registry Support"""" [Active] org.eclipse.help (3.2.1.R321_v20060920) """"Help System Core"""" [Active] org.eclipse.help.appserver (3.1.100.v20060602) """"Help Application Server"""" [Resolved] org.eclipse.help.base (3.2.1.R321_v20060822) """"Help System Base"""" [Resolved] org.eclipse.help.ui (3.2.0.v20060602) """"Help System UI"""" [Resolved] org.eclipse.help.webapp (3.2.1.R321_v20060803) """"Help System Webapp"""" [Resolved] org.eclipse.jdt (3.2.1.r321_v20060823) """"Eclipse Java Development Tools"""" [Resolved] org.eclipse.jdt.apt.core (3.2.1.R32x_v20060822-2100) """"Java Annotation Processing Core"""" [Active] org.eclipse.jdt.apt.ui (3.2.1.R32x_v20060822-2100) """"Java Annotation Processing UI"""" [Resolved] org.eclipse.jdt.core (3.2.1.v_677_R32x) """"Java Development Tools Core"""" [Active] org.eclipse.jdt.core.manipulation (1.0.1.r321_v20060721) """"Java Code Manipulation Functionality"""" [Resolved] org.eclipse.jdt.debug (3.2.1.r321_v20060731) """"JDI Debug Model"""" [Active] org.eclipse.jdt.debug.ui (3.2.1.r321_v20060918) """"JDI Debug UI"""" [Active] org.eclipse.jdt.doc.isv (3.2.1.r321_v20060907) """"Eclipse JDT Plug-in Developer Guide"""" [Resolved] org.eclipse.jdt.doc.user (3.2.0.v20060605-1400) """"Eclipse Java Development User Guide"""" [Resolved] org.eclipse.jdt.junit (3.2.1.r321_v20060810) """"Java Development Tools JUnit support"""" [Active] org.eclipse.jdt.junit.runtime (3.2.1.r321_v20060721) """"Java Development Tools JUnit runtime support"""" [Resolved] org.eclipse.jdt.junit4.runtime (1.0.1.r321_v20060905) """"Java Development Tools JUnit4 runtime support"""" [Resolved] org.eclipse.jdt.launching (3.2.1.r321_v20060731) """"Java Development Tools Launching Support"""" [Active] org.eclipse.jdt.launching.macosx (3.1.100.v20060605) """"Mac OS X Launcher"""" [Active] org.eclipse.jdt.source (3.2.1.r321_v20060905-R4CM1Znkvre9wC-) """"Eclipse Java Development Tools SDK"""" [Resolved] org.eclipse.jdt.source.macosx.carbon.ppc (3.2.1.r321_v20060905-R4CM1Znkvre9wC-) """"Eclipse Java Development Tools SDK"""" [Resolved] org.eclipse.jdt.ui (3.2.1.r321_v20060907) """"Java Development Tools UI"""" [Active] org.eclipse.jface (3.2.1.M20060908-1000) """"JFace"""" [Resolved] org.eclipse.jface.databinding (1.0.0.I20060605-1400) """"JFace Data Binding"""" [Resolved] org.eclipse.jface.text (3.2.1.r321_v20060810) """"JFace Text"""" [Resolved] org.eclipse.ltk.core.refactoring (3.2.1.r321_v20060823) """"Refactoring Core"""" [Active] org.eclipse.ltk.ui.refactoring (3.2.1.r321_v20060726) """"Refactoring UI"""" [Active] org.eclipse.osgi.services (3.1.100.v20060601) """"OSGi Release 3 Services"""" [Resolved] org.eclipse.osgi.util (3.1.100.v20060601) """"OSGi R3 Utility Classes"""" [Resolved] org.eclipse.pde (3.2.1.v20060810-0800) """"Eclipse Plug-in Development Environment"""" [Resolved] org.eclipse.pde.build (3.2.1.r321_v20060823) """"Plug-in Development Environment Build Support"""" [Resolved] org.eclipse.pde.core (3.2.1.v20060915-0800) """"Plug-in Development Core"""" [Resolved] org.eclipse.pde.doc.user (3.2.1.v20060816-0800) """"Eclipse Plug-in Development User Guide"""" [Resolved] org.eclipse.pde.junit.runtime (3.2.0.v20060605) """"PDE JUnit Plug-in Test"""" [Resolved] org.eclipse.pde.runtime (3.2.0.v20060605) """"Plug-in Development Environment Runtime"""" [Resolved] org.eclipse.pde.source (3.2.1.r321_v20060823-6vYLLdQ3Nk8DrFG) """"Eclipse Plug-in Development Environment Developer Resources"""" [Resolved] org.eclipse.pde.ui (3.2.1.v20060816-0800) """"Plug-in Development UI"""" [Resolved] org.eclipse.platform (3.2.0.v20060601) """"Eclipse Platform"""" [Resolved] org.eclipse.platform.doc.isv (3.2.1.r321_v2006030) """"Eclipse Platform Plug-in Developer Guide"""" [Resolved] org.eclipse.platform.doc.user (3.2.1.R32x_v200608101155) """"Eclipse Workbench User Guide"""" [Resolved] org.eclipse.platform.source (3.2.1.r321_v20060921-b_XVA-INSQSyMtx) """"Eclipse Platform Plug-in Developer Resources"""" [Resolved] org.eclipse.platform.source.macosx.carbon.ppc (3.2.1.r321_v20060921-b_XVA-INSQSyMtx) """"Eclipse Platform Plug-in Developer Resources"""" [Resolved] org.eclipse.rcp (3.2.0.v20060605) """"Eclipse RCP"""" [Resolved] org.eclipse.rcp.source (3.2.1.r321_v20060801-2ekW2BxmcpPUOoq) """"Eclipse RCP Plug-in Developer Resources"""" [Resolved] org.eclipse.rcp.source.macosx.carbon.ppc (3.2.1.r321_v20060801-2ekW2BxmcpPUOoq) """"Eclipse RCP Plug-in Developer Resources"""" [Resolved] org.eclipse.sdk (3.2.1.r321_v20060705) """"Eclipse Project SDK"""" [Resolved] org.eclipse.search (3.2.1.r321_v20060726) """"Search Support"""" [Resolved] org.eclipse.swt (3.2.1.v3235e) """"Standard Widget Toolkit"""" [Resolved] org.eclipse.swt.carbon.macosx (3.2.1.v3235) """"Standard Widget Toolkit for Mac OS X (Carbon)"""" [Resolved] org.eclipse.team.core (3.2.1.M20060711) """"Team Support Core"""" [Active] org.eclipse.team.cvs.core (3.2.1.M200608161750) """"CVS Team Provider Core"""" [Active] org.eclipse.team.cvs.ssh (3.2.0.I200606011710) """"CVS SSH Core"""" [Resolved] org.eclipse.team.cvs.ssh2 (3.2.0.I200606051140) """"CVS SSH2"""" [Active] org.eclipse.team.cvs.ui (3.2.1.M20060831) """"CVS Team Provider UI"""" [Active] org.eclipse.team.ui (3.2.1.M200608151725) """"Team Support UI"""" [Active] org.eclipse.text (3.2.0.v20060605-1400) """"Text"""" [Resolved] org.eclipse.tomcat (4.1.130.v20060601) """"Tomcat Wrapper"""" [Resolved] org.eclipse.ui (3.2.1.M20060913-0800) """"Eclipse UI"""" [Active] org.eclipse.ui.browser (3.2.0.v20060602) """"Browser Support"""" [Active] org.eclipse.ui.carbon (3.2.0.I20060605-1400) """"Eclipse UI MacOS X Enhancements"""" [Resolved] org.eclipse.ui.cheatsheets (3.2.1.R321_v20060720) """"Cheat Sheets"""" [Resolved] org.eclipse.ui.console (3.1.100.v20060605) """"Console"""" [Active] org.eclipse.ui.editors (3.2.1.r321_v20060721) """"Default Text Editor"""" [Active] org.eclipse.ui.externaltools (3.1.101.r321_v20060802) """"External Tools"""" [Active] org.eclipse.ui.forms (3.2.0.v20060602) """"Eclipse Forms"""" [Active] org.eclipse.ui.ide (3.2.1.M20060915-1030) """"Eclipse IDE UI"""" [Active] org.eclipse.ui.intro (3.2.1.R321_v20060810) """"Welcome Framework"""" [Resolved] org.eclipse.ui.intro.universal (3.2.1.R321_v20060905) """"Universal Welcome"""" [Resolved] org.eclipse.ui.navigator (3.2.1.M20060913-0800) """"Common Navigator View"""" [Resolved] org.eclipse.ui.navigator.resources (3.2.1.M20060906-0800b) """"Navigator Workbench Components"""" [Resolved] org.eclipse.ui.presentations.r21 (3.2.0.I20060605-1400) """"R21 Presentation Plug-in"""" [Resolved] org.eclipse.ui.views (3.2.1.M20060906-0800) """"Views"""" [Active] org.eclipse.ui.views.properties.tabbed (3.2.1.M20060830-0800) """"Tabbed Properties View"""" [Resolved] org.eclipse.ui.workbench (3.2.1.M20060906-0800) """"Workbench"""" [Active] org.eclipse.ui.workbench.compatibility (3.2.0.I20060605-1400) """"Workbench Compatibility"""" [Resolved] org.eclipse.ui.workbench.texteditor (3.2.0.v20060605-1400) """"Text Editor Framework"""" [Active] org.eclipse.update.configurator (3.2.1.v20092006) """"Install/Update Configurator"""" [Active] org.eclipse.update.core (3.2.1.v20092006) """"Install/Update Core"""" [Active] org.eclipse.update.scheduler (3.2.1.v20092006) """"Automatic Updates Scheduler"""" [Active] org.eclipse.update.ui (3.2.1.v20092006) """"Install/Update UI"""" [Resolved] org.junit (3.8.1) """"JUnit Testing Framework"""" [Resolved] org.junit4 (4.1.0.1) """"JUnit Testing Framework Version 4"""" [Resolved] sf.eclipse.javacc (1.5.5) """"JavaCC Plug-in"""" [Active] system.bundle (3.2.1.R32x_v20060919) """"OSGi System Bundle"""" [Active]""",2006-11-08 08:48:52,fe99e6b,['weaver/src/org/aspectj/weaver/fe99e6b ResolvedType.java']
164288,Bug 164288 Can no longer compile JDK 1.5 projects with apsectj for JDeveloper,"""I am working with AspectJ 1.5.2 in JDeveloper and have found that it is not possible to convince the compiler to use JDK 5 constructs. It appears that there is a method on AjcBuildOptions called getJavaOptionsMap() which is currently implemented to return null in all cases. In CompilerAdapter.configureBuildOptions areound line 358 the code tried to access this object to access whether to use JDK 5 constructs or not. Since the return value is always null the project is never properly configured. I notice that the only other implementation of the root interface is CoreBuildOption which appears to directly return a structure from the eclipse class JavaProject. It would appear that this interface is breaking the rules on abstraction, is this the correct read on the situation? If so the solution would either be to implement a CoreBuildOption class to correctly work with the ADJE project adapter class or alter the code in Compiler adapter to correct use the properties in project adapter. I think that the latter is probably the best as BuildOption assumes a depedency on Eclipse which shouldn't be there. We do currently have customer, one in nato, who are currently having to work around this issue so it would be good to get it resolve for 1.5.3 if possible But I know I am a bit late for that now do to a lost email.""",2006-11-13 04:04:24,c54fa62,"['ajde/src/org/aspectj/ajde/c54fa62 BuildOptionsAdapter.java', 'ajde/src/org/aspectj/ajde/internal/c54fa62 CompilerAdapter.java', 'ajde/testsrc/org/aspectj/ajde/c54fa62 BuildConfigurationTests.java']"
165148,Bug 165148 [ltw] Unnecessary exceptions during concretization of aspects in aop.xml,"""Due to the mechanism used in ConcreteAspectCodeGen I see a lot of unnecessary exceptions created. The problem is rather than looking up a type to confirm it doesn't exist before defining it, the code uses a resolve() to check if it exists and resolve attempts to build it if it isnt there. Because the classloader will never find an aop.xml defined type (the class doesn't exist anywhere on the classpath), a spurious exception is created and sometimes traced (if collecting a trace). I'm going to change the code to do a lookup, that is all that is really necessary.""",2006-11-20 08:26:11,e8d2556,['loadtime/src/org/aspectj/weaver/loadtime/e8d2556 ConcreteAspectCodeGen.java']
170102,Bug 170102 iajc Ant task doesn't support all warn options,The iajc Ant task currently supports only a few of the options provided by the ajc compiler. It would be nice if it could support them all so that builds done using the Ant task generate the same errors/warnings as the ones done within the Eclipse IDE.,2007-01-10 12:16:53,5336603,['taskdefs/src/org/aspectj/tools/ant/taskdefs/5336603 AjcTask.java']
171667,Bug 171667 When ordering a Clean with Build Automatico I receive the error below.,"""When executing an Clean Project in Eclipse with Automatic Building I receive the error below. line from the top stack, e.g. """"SomeFile.jara:243"""" java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.problem.AjProblemReporter.methodMustOverride(AjProblemReporter.java:380) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:153) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:400) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDe ... pter.java:107) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) NullPointerException thrown: null""",2007-01-25 09:24:17,4177bed,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/4177bed AjProblemReporter.java']
175039,Bug 175039 ArrayIndexOutOfBoundException Bug with Nested Type in TypeParameters,"""I debugged this stack trace from load-time weaving (ajcore files are also available). I found that the signature argument to TypeFactory.createTypeFromSignature(String) is Pjava/lang/Enum<Ljavax/jws/soap/SOAPBinding$ParameterStyle;>; but the method is erroneously using an empty array of parameters, because it thinks the $ relates to the generic type, not the parameter. It should be fairly easy to reproduce with a test case and to fix with a patch - I'll look at it some more tonight or this week. java.lang.ArrayIndexOutOfBoundsException at org.aspectj.weaver.ResolvedType.getMemberParameterizationMap(ResolvedType.java:698) at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:406) at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:65) at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:182) at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:169) at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:119) at org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor.accept(ClassLoaderWeavingAdaptor.java:621) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:253) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:78) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:52) at sun.instrument.TransformerManager.transform(TransformerManager.java:122) at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:155) at java.lang.ClassLoader.defineClass(Ljava.lang.String;[BIILjava.security.ProtectionDomain;)Ljava.lang.Class;(Unknown Source) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124) at java.net.URLClassLoader.defineClass(URLClassLoader.java:260) at java.net.URLClassLoader.access$100(URLClassLoader.java:56) at java.net.URLClassLoader$1.run(URLClassLoader.java:195) at java.net.URLClassLoader.findClass(URLClassLoader.java:188) at java.lang.ClassLoader.loadClass(Ljava.lang.String;Z)Ljava.lang.Class;(Unknown Source) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268) at java.lang.ClassLoader.loadClass(Ljava.lang.String;)Ljava.lang.Class;(Unknown Source) at java.lang.ClassLoader.loadClassFromNative(Ljava.lang.String;)Ljava.lang.Class;(Unknown Source) at java.lang.Class.forName(Ljava.lang.String;ZLjava.lang.ClassLoader;)Ljava.lang.Class;(Unknown Source) at jrockit.reflect.MemberAccess.getClassFromFieldDesc(Ljava.lang.String;ILjava.lang.ClassLoader;)Ljava.lang.Class;(Unknown Source) at jrockit.reflect.MemberAccess.getReturnClassFromMethodDesc(Ljava.lang.String;Ljava.lang.ClassLoader;)Ljava.lang.Class;(Unknown Source)""",2007-02-21 16:02:15,579ec14,"['weaver/src/org/aspectj/weaver/579ec14 TypeFactory.java', 'weaver/testsrc/org/aspectj/weaver/579ec14 TypeXTestCase.java']"
184447,Bug 184447 AjLookupEnvironment.java:519,Build ID: Eclipse SDK Version: 3.2.2 M20070212-1330 Steps To Reproduce: This occured repeatedly when I saved a .aj file or a .java file that was boing advised. A restart of eclipse made it go away and it has not happen again so I don't know how reproduce it. Sorry. AJDT version 1.4.2.200703020612 More information: java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.doDeclareAnnotations(AjLookupEnvironment.java:803) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:592) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:519) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupE ... AutoBuildJob.run(AutoBuildJob.java:217) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58) Compile error: NullPointerException thrown: null,2007-04-27 11:00:01,8ce9dcf,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/8ce9dcf AjLookupEnvironment.java']
185447,Bug 185447 [plan] [ataspectj] Abstract @Aspect causing problems,"""Trying to use an abstract @Aspect from a library jar file is causing problems. In the (soon to be) attached zip of eclipse projects: * logging-library: defines two abstract trivial logging aspects, one in code-style and one in @AspectJ style. * sample-system: uses the code-style abstract aspect successfully * sample-system2: uses the @AspectJ style abstract aspect and won't compile in Eclipse Exception: java.lang.NullPointerException at org.aspectj.weaver.bcel.AtAjAttributes$LazyResolvedPointcutDefinition.getPointcut(AtAjAttributes.java:1632) at org.aspectj.weaver.ShadowMunger.addChildNodes(ShadowMunger.java:258) at org.aspectj.weaver.ShadowMunger.createHierarchy(ShadowMunger.java:247) at org.aspectj.weaver.AsmRelationshipProvider.adviceMunger(AsmRelationshipProvider.java:180) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:717) a ... int;)Ljava/lang/String; ARETURN end public Object run(Object[])""",2007-05-03 17:18:07,120b47f,"['weaver/src/org/aspectj/weaver/bcel/120b47f AtAjAttributes.java', 'weaver/src/org/aspectj/weaver/model/120b47f AsmRelationshipProvider.java']"
186884,Bug 186884 Unhandled Kind of New Exception when have advice for Pointcut call(Throwable+.new(..)),,2007-05-14 17:02:02,7a398a2,['weaver/src/org/aspectj/weaver/bcel/7a398a2 BcelShadow.java']
192877,Bug 192877 [ataspectj] @AspectJ style inter-type declaration causes false compiler error during incremental build,"""Build ID: M20070212-1330 Steps To Reproduce: Use @DeclareParents to introduce a default interface implementation to an existing type. A full build compiles cleanly and works as expected. An incremental build causes the following type of compile error: """"The type FooImpl must implement the inherited abstract method Test.methodA()"""". In this example FooImpl is the class we are introducing a default implementation of the Test interface which defines the method """"methodA"""". More information: See attached zip for a complete set of files to reproduce. I can repoduce this bug with AJDT 1.4.2.200705221209 for Eclipse 3.2.2 as well as AJDT 1.5RC1 for Eclipse 3.3RC1""",2007-06-15 09:57:08,9b68a31,"['tests/multiIncremental/PR192877/base/src/9b68a31 DefaultTestImpl.java', 'tests/multiIncremental/PR192877/base/src/9b68a31 Foo.java', 'tests/multiIncremental/PR192877/base/src/9b68a31 FooImpl.java', 'tests/multiIncremental/PR192877/base/src/9b68a31 Test.java', 'tests/multiIncremental/PR192877/base/src/9b68a31 TestAspect.java', 'tests/multiIncremental/PR192877/inc1/src/9b68a31 Test.java', 'tests/src/org/aspectj/systemtest/incremental/tools/9b68a31 MultiProjectIncrementalTests.java']"
193348,Bug 193348 NPE on attempt to compile,"""I can't really pinpoint any code that trigger this. It happens on for an incremental, and only some of the time. If I do a full build of the project then I do not get the error and all seems to work. ---- java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelWeaver.raiseUnboundFormalError(BcelWeaver.java:833) at org.aspectj.weaver.bcel.BcelWeaver.validateSingleBranch(BcelWeaver.java:688) at org.aspectj.weaver.bcel.BcelWeaver.validateBindings(BcelWeaver.java:627) at org.aspectj.weaver.bcel.BcelWeaver.rewritePointcuts(BcelWeaver.java:556) at org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave(BcelWeaver.java:484) at org.aspectj.ajd ... oBuildJob.run(AutoBuildJob.java:235) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55) Compile error: NullPointerException thrown: null""",2007-06-19 12:01:51,a31b3de,['weaver/src/org/aspectj/weaver/bcel/a31b3de BcelWeaver.java']
203367,Bug 203367 ITD of interface on generic type; can't match calls to methods on interface+,"""Build ID: I20070621-1340 Steps To Reproduce: package bug; // I used a """"bug"""" package under the """"src"""" source folder. public aspect CantMatchOnInterfaceIntroducedToGenericClass { public static interface Marker {} public static class NonGenericClass { public void doit(String msg) { System.out.println(""""doit(): msg = """"+msg); } } public static class GenericClass<T> { public void doit(T t) { System.out.println(""""doit<T>(): t = """"+t); } } declare parents: NonGenericClass implements Marker; declare parents: GenericClass implements Marker; pointcut nonGenericCall(): call (void NonGenericClass.doit(..)); pointcut genericCall(): call (void GenericClass.doit(..)); pointcut markerCall(): call (void Marker+.doit(..)); before(): nonGenericCall() { System.out.println(""""nonGenericCall: """"+thisJoinPointStaticPart); } before(): genericCall() { System.out.println(""""genericCall: """"+thisJoinPointStaticPart); } before(): markerCall() { System.out.println(""""markerCall: """"+thisJoinPointStaticPart); } public static void main(String args[]) { new NonGenericClass().doit(""""message1""""); new GenericClass<Integer>().doit(new Integer(2)); } } More information: The code pasted in the """"steps"""" demonstrates the bug.""",2007-09-13 17:23:51,11ebdd8,"['tests/bugs161/pr203367/11ebdd8 CantMatchOnInterfaceIntroducedToGenericClass.java', 'tests/src/org/aspectj/systemtest/ajc161/11ebdd8 Ajc161Tests.java']"
203384,"""Bug 203384 AST: Type information not exposed on itmd, itfd...""","""The Types: org/aspectj/org/eclipse/jdt/core/dom/InterTypeFieldDeclaration.java org/aspectj/org/eclipse/jdt/core/dom/InterTypeMethodDeclaration.java Which can be returned by visiting the AjAST tree do not expose the name of the type on which the method or field is added. I require this information in the project I'm currently working on, and would appreciate if it was added.""",2007-09-13 19:22:16,114db35,"['org.aspectj.ajdt.core/src/org/aspectj/org/eclipse/jdt/core/dom/114db35 AjASTConverter.java', 'org.aspectj.ajdt.core/src/org/aspectj/org/eclipse/jdt/core/dom/114db35 InterTypeFieldDeclaration.java', 'org.aspectj.ajdt.core/src/org/aspectj/org/eclipse/jdt/core/dom/114db35 InterTypeMethodDeclaration.java']"
206732,Bug 206732 [itds] Problem with ITDs appearing to be applied twice (and clashing) for binary types,"""As reported by Josh on the mailing list: I have the following 2 files: Advised.aj: package bugs; public class Advised {} aspect ITD { public void Advised.f() {} } Ref.aj: package notbugs; import bugs.Advised; public class Ref { public void g() { new Advised().f(); } } I am attempting to build Advised.aj into a jar, and refer to it from Ref.aj, using the following ant build.xml: <?xml version=""""1.0""""?> <project name=""""Bugs"""" basedir=""""C:\workplace\imds\Bugs"""" xmlns:aj=""""antlib:org.aspectj""""> <taskdef uri=""""antlib:org.aspectj"""" resource=""""org/aspectj/antlib.xml"""" classpath=""""./aspectjtools.jar""""/> <target name=""""clean""""> <delete dir=""""bugs"""" includes=""""**/*.class""""/> <delete dir=""""notbugs"""" includes=""""**/*.class""""/> </target> <target name=""""task1""""> <aj:iajc srcdir=""""."""" destdir=""""."""" source=""""1.5"""" target=""""1.5""""> <classpath location="""".\aspectjrt.jar""""/> <include name=""""bugs/Advised.aj""""/> </aj:iajc> </target> <target name=""""task2""""> <aj:iajc source=""""1.5"""" target=""""1.5"""" srcdir="""".""""> <classpath location="""".\aspectjrt.jar""""/> <aspectpath location="""".""""/> <include name=""""notbugs/Ref.aj""""/> </aj:iajc> </target> </project> From within Eclipse, there are no build errors because this is all one project. On the command line, however, once I execute ant task2, I get the following marvelous error message which suggests that ajc is trying to ITD f into a class it already ITDd f into before: [aj:iajc] error at C:\workplace\imds\Bugs\bugs\Advised.aj:5::77 inter-type declaration from bugs.ITD conflicts with existing member: void bugs.Advised.f() [aj:iajc] MessageHolder: (8 info) (1 error) [aj:iajc] [error 0]: error at C:\workplace\imds\Bugs\bugs\Advised.aj:5::77 inter-type declaration from bugs.ITD conflicts with existing member: void bugs.Advised.f() Let me also say that in my real use-case, the jar produced by task1 will contain aspects that should apply to clients thereof, and as such, that jar should indeed be in the aspectpath (not the classpath) for task2 (unless I am seriously misunderstanding something). How to stop this duplicate attempt to ITD? Josh --- Josh is correct that using aspectpath will pull in the aspects for application to other types, the problem is that when pulling in type Advised, we reapply known ITDs and it clashes with the one added in the original build of the type. Two possible fixes that I am looking at: - don't reapply the ITDs (they are added to ensure type system is consistent) to binary types pulled in from the aspectpath - recognize the ITD is clashing with a member previously applied through the same ITD I am not sure we can determine it came from the aspectpath at the point the clash is detected. I have option (2) already implemented, but I'll try a little more with option 1 before giving up ;)""",2007-10-18 05:54:26,797ec4d,['weaver/src/org/aspectj/weaver/797ec4d ResolvedType.java']
209372,Bug 209372 Compile error: IllegalArgumentException thrown: negative line: -1,If line numbers have not been added to the generated class files the following exception is thrown: java.lang.IllegalArgumentException at org.aspectj.bridge.SourceLocation.validLine(SourceLocation.java:41) at org.aspectj.bridge.SourceLocation.<init>(SourceLocation.java:96) at org.aspectj.bridge.SourceLocation.<init>(SourceLocation.java:85) at org.aspectj.bridge.SourceLocation.<init>(SourceLocation.java:70) at org.aspectj.ajdt.internal.core.builder.EclipseSourceContext.makeSourceLocation(EclipseSourceContext.java:57) at org.aspectj.we ... reUtility.java:155) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55) Compile error: IllegalArgumentException thrown: negative line: -1 An easy way to reproduce the problem is to uncheck the corresponding checkbox in the Classfile Generation section of the Java Compiler options in Eclipse. A full build is performed during which an AspectJ Internal Compiler Error is thrown. My Eclipse feature version is org.eclipse.ajdt_1.5.0.200706070619.,2007-11-09 14:27:51,d3c3e32,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/d3c3e32 EclipseAdapterUtils.java']
210848,Bug 210848 Fix javadoc for ProceedingJoinPoint.proceed(Object[]),,2007-11-24 17:49:30,b4715bc,['runtime/src/org/aspectj/lang/b4715bc ProceedingJoinPoint.java']
211674,Bug 211674 [ataspectj] after throwing annotation style is too sensitive to parameter positions,"""Reported on the list by Ashley Williams: Having converted my aspects to use the @AspectJ style, I'm now getting a strange error message when a compile my tracing aspect,. First here is the section of code: @Pointcut(""""execution(@Tracing * *(..)) && @annotation(tracing)"""") void annotatedMethods(Tracing tracing) { } @AfterThrowing(pointcut = """"annotatedMethods(tracing)"""", throwing = """"t"""") public void logException(JoinPoint thisJoinPoint, Tracing tracing, Throwable t) { Level level = Level.toLevel(tracing.level()); if (logger.isEnabledFor(level)) { logger.log(level, formatter.formatSignatureThrowing(thisJoinPoint), t); } } So I am matching on all methods annotated with @Tracing and logging the subclass of Throwable that may have been thrown. However when I run my test case i get the following error: java.lang.VerifyError: (class: com/db/abfo/tracing/PojoOne, method: calculate signature: ()V) catch_type not a subclass of Throwable This used to work when I used the aspectj after throwing language extention form: pointcut annotatedMethods(Tracing tracing) : execution(@Tracing * *(..)) && @annotation(tracing); after(Tracing tracing) throwing(Throwable t) : annotatedMethods(tracing) { Level level = tracing.level().getLevel(); if (logger.isEnabledFor(level)) { logger.log(level, formatter.formatSignatureThrowing(thisJoinPoint), t); } }""",2007-12-01 13:15:13,9de03b7,"['tests/bugs154/pr211674/9de03b7 Test.java', 'tests/bugs154/pr211674/9de03b7 Test2.java', 'tests/src/org/aspectj/systemtest/ajc154/9de03b7 Ajc154Tests.java']"
216067,Bug 216067 Typo in point example,,2008-01-21 21:05:25,6d906dc,['docs/dist/doc/examples/introduction/6d906dc Point.java']
219830,Bug 219830 java.lang.NullPointerException in Java15AnnotationFinder when using SWT,"""I receive the following Exception when running SWT with AspjectJ load time weaving through the Spring Framework. The lines around org.aspectj.weaver.reflect.Java15AnnotationFinder.getAnnotations(Java15AnnotationFinder.java:123) are as follows: for (int i = 0; i < anns.length; i++) { annSet.add(world.resolve(UnresolvedType.forSignature(anns[i].getTypeSignature()))); } When using the debugger, I see """"world"""" as a null value. Attached is a stripped down Eclipse project that generates the error during startup. My runtime arguments are as follows: -javaagent:${resource_loc:/AspectJBug/lib/spring-agent.jar} -------------------------------------------- [AppClassLoader@19d819d8] abort trouble in: final class org.eclipse.swt.awt.SWT_AWT$10 extends java.lang.Object implements java.lang.Runnable: private final java.awt.Frame val$frame [Synthetic] void <init>(java.awt.Frame): ALOAD_0 // Lorg/eclipse/swt/awt/SWT_AWT$10; this (line 274) INVOKESPECIAL java.lang.Object.<init> ()V constructor-execution(void org.eclipse.swt.awt.SWT_AWT$10.<init>(java.awt.Frame)) | ALOAD_0 // Lorg/eclipse/swt/awt/SWT_AWT$10; this (line 1) | ALOAD_1 | PUTFIELD org.eclipse.swt.awt.SWT_AWT$10.val$frame Ljava/awt/Frame; | RETURN constructor-execution(void org.eclipse.swt.awt.SWT_AWT$10.<init>(java.awt.Frame)) end void <init>(java.awt.Frame) public void run(): method-execution(void org.eclipse.swt.awt.SWT_AWT$10.run()) | catch java.lang.Throwable -> E0 | | LDC """"sun.awt.windows.WComponentPeer"""" (line 277) | | method-call(java.lang.Class java.lang.Class.forName(java.lang.String)) | | | INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;)Ljava/lang/Class; | | method-call(java.lang.Class java.lang.Class.forName(java.lang.String)) | | ASTORE_1 | | ALOAD_1 // Ljava/lang/Class; clazz (line 278) | | LDC """"winGraphicsConfig"""" | | method-call(java.lang.reflect.Field java.lang.Class.getDeclaredField(java.lang.String)) | | | INVOKEVIRTUAL java.lang.Class.getDeclaredField (Ljava/lang/String;)Ljava/lang/reflect/Field; | | method-call(java.lang.reflect.Field java.lang.Class.getDeclaredField(java.lang.String)) | | ASTORE_2 | | ALOAD_2 // Ljava/lang/reflect/Field; field (line 279) | | ICONST_1 | | method-call(void java.lang.reflect.Field.setAccessible(boolean)) | | | INVOKEVIRTUAL java.lang.reflect.Field.setAccessible (Z)V | | method-call(void java.lang.reflect.Field.setAccessible(boolean)) | | ALOAD_2 // Ljava/lang/reflect/Field; field (line 280) | | ALOAD_0 // Lorg/eclipse/swt/awt/SWT_AWT$10; this | | GETFIELD org.eclipse.swt.awt.SWT_AWT$10.val$frame Ljava/awt/Frame; | | method-call(java.awt.peer.ComponentPeer java.awt.Frame.getPeer()) | | | INVOKEVIRTUAL java.awt.Frame.getPeer ()Ljava/awt/peer/ComponentPeer; | | method-call(java.awt.peer.ComponentPeer java.awt.Frame.getPeer()) | | ALOAD_0 // Lorg/eclipse/swt/awt/SWT_AWT$10; this | | GETFIELD org.eclipse.swt.awt.SWT_AWT$10.val$frame Ljava/awt/Frame; | | INVOKEVIRTUAL java.awt.Frame.getGraphicsConfiguration ()Ljava/awt/GraphicsConfiguration; | | INVOKEVIRTUAL java.lang.reflect.Field.set (Ljava/lang/Object;Ljava/lang/Object;)V | catch java.lang.Throwable -> E0 | GOTO L0 | E0: POP (line 281) | L0: RETURN (line 282) method-execution(void org.eclipse.swt.awt.SWT_AWT$10.run()) end public void run() end final class org.eclipse.swt.awt.SWT_AWT$10 -- (NullPointerException) null null java.lang.NullPointerException at org.aspectj.weaver.reflect.Java15AnnotationFinder.getAnnotations(Java15AnnotationFinder.java:123) at org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl.unpackAnnotations(ReflectionBasedResolvedMemberImpl.java:174) at org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl.hasAnnotation(ReflectionBasedResolvedMemberImpl.java:158) at org.aspectj.weaver.patterns.ExactAnnotationTypePattern.matches(ExactAnnotationTypePattern.java:82) at org.aspectj.weaver.patterns.AnnotationPointcut.matchInternal(AnnotationPointcut.java:151) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:146) at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:52) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:146) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:75) at org.aspectj.weaver.Advice.match(Advice.java:112) at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:118) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2811) at org.aspectj.weaver.bcel.BcelClassWeaver.matchInvokeInstruction(BcelClassWeaver.java:2773) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2506) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2332) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:494) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:119) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1651) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1602) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1380) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1200) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:360) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:262) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:78) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:52) at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformerDecorator.transform(AspectJWeavingEnabler.java:84) at sun.instrument.TransformerManager.transform(TransformerManager.java:141) at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:174) at java.lang.ClassLoader.defineClassImpl(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:228) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:148) at java.net.URLClassLoader.defineClass(URLClassLoader.java:557) at java.net.URLClassLoader.access$400(URLClassLoader.java:120) at java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java:962) at java.security.AccessController.doPrivileged(AccessController.java:275) at java.net.URLClassLoader.findClass(URLClassLoader.java:488) at java.lang.ClassLoader.loadClass(ClassLoader.java:607) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:327) at java.lang.ClassLoader.loadClass(ClassLoader.java:573) at org.eclipse.swt.awt.SWT_AWT.new_Frame(SWT_AWT.java:274) Feb 21, 2008 12:09:23 PM org.aspectj.weaver.tools.Jdk14Trace error SEVERE: org/eclipse/swt/awt/SWT_AWT$10 java.lang.NullPointerException at org.aspectj.weaver.reflect.Java15AnnotationFinder.getAnnotations(Java15AnnotationFinder.java:123) at org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl.unpackAnnotations(ReflectionBasedResolvedMemberImpl.java:174) at org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl.hasAnnotation(ReflectionBasedResolvedMemberImpl.java:158) at org.aspectj.weaver.patterns.ExactAnnotationTypePattern.matches(ExactAnnotationTypePattern.java:82) at org.aspectj.weaver.patterns.AnnotationPointcut.matchInternal(AnnotationPointcut.java:151) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:146) at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:52) at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:146) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:75) at org.aspectj.weaver.Advice.match(Advice.java:112) at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:118) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2811) at org.aspectj.weaver.bcel.BcelClassWeaver.matchInvokeInstruction(BcelClassWeaver.java:2773) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2506) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2332) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:494) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:119) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1651) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1602) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1380) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1200) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:360) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:262) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:78) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:52) at org.springframework.context.weaving.AspectJWeavingEnabler$AspectJClassBypassingClassFileTransformerDecorator.transform(AspectJWeavingEnabler.java:84) at sun.instrument.TransformerManager.transform(TransformerManager.java:141) at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:174) at java.lang.ClassLoader.defineClassImpl(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:228) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:148) at java.net.URLClassLoader.defineClass(URLClassLoader.java:557) at java.net.URLClassLoader.access$400(URLClassLoader.java:120) at java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java:962) at java.security.AccessController.doPrivileged(AccessController.java:275) at java.net.URLClassLoader.findClass(URLClassLoader.java:488) at java.lang.ClassLoader.loadClass(ClassLoader.java:607) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:327) at java.lang.ClassLoader.loadClass(ClassLoader.java:573) at org.eclipse.swt.awt.SWT_AWT.new_Frame(SWT_AWT.java:274)""",2008-02-21 12:47:46,1bbe6f9,['weaver5/java5-src/org/aspectj/weaver/reflect/1bbe6f9 Java15ReflectionBasedReferenceTypeDelegate.java']
220172,Bug 220172 [compiler] NullpointerException during compile,,2008-02-25 06:34:35,5beab0e,['weaver/src/org/aspectj/weaver/5beab0e Shadow.java']
220430,Bug 220430 mixup in retrieving the right class in Java15AnnotationFinder,,2008-02-26 13:41:45,9bbdb41,['weaver5/java5-src/org/aspectj/weaver/reflect/9bbdb41 Java15AnnotationFinder.java']
220686,Bug 220686 unsynchronized access to WeakHashMap,,2008-02-27 21:16:31,caf8960,['weaver/src/org/aspectj/weaver/caf8960 World.java']
222437,Bug 222437 MANIFEST.MF copying is not always reliable,Sometimes an AJDT project gets into a state where it has a meta-inf/manifest.mf - and this file fails to make it out to the destination folder.,2008-03-12 12:45:11,906c849,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/906c849 AjBuildManager.java']
222987,Bug 222987 More NPEs in Java15AnnotationFinder,,2008-03-17 13:57:36,6c54db9,['weaver5/java5-src/org/aspectj/weaver/reflect/6c54db9 Java15AnnotationFinder.java']
224962,Bug 224962 AjcTask doesn't work with Java6,"""Although support for Java6 has been added in the last milestone, you can't use it from ant because AjcTask doesn't recognize the """"source=1.6"""" and """"target=1.6"""" parameters. It's easy to fix by modifying AjcTask.java and adding the missing constants: static final String[] TARGET_INPUTS = new String [] { """"1.1"""", """"1.2"""", """"1.3"""", """"1.4"""", """"1.5"""", """"1.6"""" }; static final String[] SOURCE_INPUTS = new String [] { """"1.3"""", """"1.4"""", """"1.5"""", """"1.6"""" }; static final String[] COMPLIANCE_INPUTS = new String [] { """"-1.3"""", """"-1.4"""", """"-1.5"""", """"-1.6"""" }; Thanks.""",2008-03-31 14:11:02,6bdb87d,['taskdefs/src/org/aspectj/tools/ant/taskdefs/6bdb87d AjcTask.java']
227295,"""Bug 227295 AJC error, somehow connected with generics""","""Build ID: 1.5.0.20070607 Steps To Reproduce: I cannot find a way to reproduce it, it's somehow """"randomic"""", for example it happened to me now while creating a new class in an aspectj project, but when i then saved the .java it compiled properly. That's why I'm filing it in AJDT and not in AspectJ directly. Based on the exception, IIUC, there is a narrowing in a generic (UnresolvedType should be something like Converter<?>, while BoundedReferenceType should be somethinf like Converter<? extends Number>), and the weaver is not handling it properly, but simply casting from one to the other .. but this are just silly assumptions. More information: java.lang.ClassCastException at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeTypeBinding1(EclipseFactory.java:656) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeTypeBinding(EclipseFactory.java:579) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeTypeBinding1(EclipseFactory.java:640) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeTypeBinding(EclipseFactory.java:579) at org.asp ... Worker.java:55) Compile error: ClassCastException thrown: org.aspectj.weaver.UnresolvedType cannot be cast to org.aspectj.weaver.BoundedReferenceType""",2008-04-16 06:24:42,3b2109a,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/3b2109a EclipseFactory.java']
228633,Bug 228633 AST Support for PointcutDesignators,"""I would like an enhancement to be able to match two PointcutDesignators (called 'pointcut definitions' in the AJ5 quick reference). Currently, the following test fails: ---------------AjASTMatcherTest.java--------------- public void testMatchDefaultPointcut() { AjAST ast = AjAST.newAjAST(AST.JLS3); DefaultPointcut dp1 = ast.newDefaultPointcut(); DefaultPointcut dp2 = ast.newDefaultPointcut(); dp1.setDetail(""""call(* *.foo(..)""""); dp2.setDetail(""""call(* *.bar(..)""""); assertFalse(dp1.subtreeMatch(new AjASTMatcher(), dp2)); } --------------------------------------------------- The reason is that there are no implementations for the many different kinds of pointcut definitions of AspectJ. Instead, DefaultPointcut simply contains the pointcut definition in a String-field """"detail"""" as shown in the test case. The same is true for DefaultTypePattern and SignaturePattern. Additionally, in the current implementation a DefaultPointcut, DefaultTypePattern, and SignaturePattern node will always match another AST node if that node is of the same type (instanceof). From what I see, it is necessary to 1) add types for every possible pointcut definition, 2) extend the current implementation of type name patterns and 3) signature patterns, 4) extend the parser (internal and external?) to create nodes for the pointcut definitions, 5) extend the converter to convert the new node types, and finally 6) extend the matcher to be able to match two pointcut definitions. Implementation is already done for combinations of poincuts using and (&&), or (||), not (!), cflow, and reference pointcuts (without parameters). Please comment on the task list as it is just an initial overview resulting from my limited knowledge on this field.""",2008-04-24 05:32:45,bed3f4e,['org.aspectj.ajdt.core/src/org/aspectj/org/eclipse/jdt/core/dom/bed3f4e AjASTMatcher.java']
229829,Bug 229829 SourceTypeBinding.sourceStart() NPE,java.lang.NullPointerException at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.sourceStart(SourceTypeBinding.java:1514) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.MethodBinding.sourceStart(MethodBinding.java:988) at org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.fillDeclaredMembers(EclipseSourceType.java:243) at org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.getDeclaredFiel ... IRETURN end public boolean isTracingModifications() end public class com.centricsoftware.pi.core.data.reflection.Attribute,2008-05-01 14:00:27,e9823aa,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/e9823aa EclipseSourceType.java']
230817,Bug 230817 LazyMethodGen.remap() NullPointerException,"""This has been reported a few times by different users, but has always proved tough to diagnose. The typical stack trace is something like: java.lang.NullPointerException org.aspectj.weaver.bcel.LazyMethodGen.remap(LazyMethodGen.java:1237) org.aspectj.weaver.bcel.LazyMethodGen.addExceptionHandlers(LazyMethodGen.java:1132) org.aspectj.weaver.bcel.LazyMethodGen.packBody(LazyMethodGen.java:1078) org.aspectj.weaver.bcel.LazyMethodGen.pack(LazyMethodGen.java:977) org.aspectj.weaver.bcel.LazyMethodGen.getMethod(LazyMethodGen.java:484) org.aspectj.weaver.bcel.LazyClassGen.writeBack(LazyClassGen.java:512) org.aspectj.weaver.bcel.LazyClassGen.getJavaClassBytesIncludingReweavable(LazyClassGen.java:652) org.aspectj.weaver.bcel.BcelWeaver.getClassFilesFor(BcelWeaver.java:1420) org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1390) And that is an exception on this line in remap() ih = ih.getNext(); called from the addExceptionHandlers() line: gen.addExceptionHandler( remap(r.getRealStart(), map), remap(r.getRealEnd(), map), remap(r.getHandler(), map), (r.getCatchType() == null) ? null : (ObjectType) BcelWorld.makeBcelType(r.getCatchType())); During weaving, an instruction list is augmented with extra entries representing where shadows start and end (method-call, method-execution, handler, etc). When weaving is complete we want to remove these temporary elements and use the remaining instructions to produce the method bytecode. Now sometimes these temporary entries are targeted by other elements (line number tags, local variable tags and exception handlers usually). During packing we use remap() to reposition the locations so they move off of temporary placeholders and onto real instructions that will make it out into the bytecode. What the above exception tells us is that we started walking over temporary placeholder entries, but before we came to a real instruction, we ran out of instructions! This cannot happen, and indicates something went seriously wrong, we should always encounter an instruction when remapping off a temporary element. After some digging it is actually the remap() call for the handler (not the start or end) that leads to the problem. The handler represents where to jump to in the code when an exception of the specified type occurs between the instructions pointed at by start and end. I sent a debug build to a user encountering this problem (I could not recreate it) and in that I was looking at where in fact the handler was pointing before we called remap(). I learned that when this problem occurs, the handler is not pointing to anywhere in the method currently being processed (not good). In a second debug build I tried to ascertain who was setting these handlers to point to nowhere. This debug never triggered, no-one was setting them to point to nowhere... I happened to notice whilst going through the instructions in the debug output that cobertura was being used, a coverage toolkit that works by doing bytecode manipulation to insert calls out to a library. AspectJ was being called after cobertura and I asked the user to try the steps the other way round - it worked fine. Indicating cobertura was doing something to the bytecode that gave us problems. After much messing about, I recreated it by applying around advice to within(*) to all the classes in rt.jar (I just used that as a very large standalone jar file I could weave into). I learned that Cobertura creates catch blocks that look a little different to what javac and other compilers create. The typical bytecode sequence a compiler produces for a catch block starts with a STORE instruction, to store the exception being caught (whether the body of the catch block uses it or not). But the cobertura catch blocks started with an INVOKESTATIC instruction, a call out to another method. What does this mean? It means the same instruction has two shadows, a 'handler' shadow and a 'method-call' shadow - and it turns out this is what causes our problem. If around advice is applied to the call join point and it cannot be inlined then the body of the call shadow (the call itself) is pulled out into a new method. Because the handler was the same instruction, this meant the handler *was also being pulled out* into the new method, leaving behind an exception handler that jumped to an invalid location (in fact it 'jumped' to an instruction in a different method!). So the reason I never saw the handler location being set incorrectly is that it was set correctly up front, but then dragged out with the method-call shadow into the wrong place. In bytecode terms it looks like this: method-execution() | ICONST_0 | ISTORE_2 | SIPUSH -1 | ISTORE_3 | catch java.lang.Exception (1806389629) -> E0 | | method-call(ProjectData ProjectData.getGlobalProjectData()) | | | INVOKESTATIC ProjectData.getGlobalProjectData () | | method-call(ProjectData getGlobalProjectData()) | | LDC """"SomeString"""" | | method-call(ClassData getOrCreateClassData(java.lang.String)) | | | INVOKEVIRTUAL ProjectData.getOrCreateClassData (LString;) | | method-call(ClassData ProjectData.getOrCreateClassData(String)) | | SIPUSH 106 | | method-call(void ClassData.touch(int)) | | | INVOKEVIRTUAL ClassData.touch (I)V | | method-call(void ClassData.touch(int)) | | ALOAD_1 | | method-call(Object Expression.getValue()) | | | INVOKEVIRTUAL Expression.getValue () | | method-call(Object Expression.getValue()) | catch java.lang.Exception (1806389629) -> E0 | ARETURN | method-call(nProjectData ProjectData.getGlobalProjectData()) | | E0: INVOKESTATIC ProjectData.getGlobalProjectData () | method-call(ProjectData ProjectData.getGlobalProjectData()) | LDC """"Object"""" We can see the problem in that final method-call. The target for the exception handler seen earlier (E0) is within the method-call shadow. What to do?""",2008-05-06 22:43:15,5f97d46,"['weaver/src/org/aspectj/weaver/bcel/5f97d46 BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/5f97d46 LazyMethodGen.java']"
231467,Bug 231467 Cant Compile new Statement for the Generic Class,"""[aspectj:iajc] error at (no source information available) [aspectj:iajc] C:\Development\PI\JavaSrc\com\centricsoftware\pi\service\expression\FuncNewMatrix.java:0::0 Internal compiler error [aspectj:iajc] java.lang.ArrayIndexOutOfBoundsException: 1 [aspectj:iajc] at org.aspectj.weaver.ResolvedType.getMemberParameterizationMap(ResolvedType.java:744) [aspectj:iajc] at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:411) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:68) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1206) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1211) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1211) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.getInterTypeMungersIncludingSupers(ResolvedType.java:1185) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.checkInterTypeMungers(ResolvedType.java:1255) [aspectj:iajc] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:646) [aspectj:iajc] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:522) [aspectj:iajc] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom(AjLookupEnvironment.java:1105) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:599) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:276) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:113) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:49) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:99) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMemberType(BinaryTypeBinding.java:755) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.Scope.findMemberType(Scope.java:986) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.Scope.getMemberType(Scope.java:2116) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.findNextTypeBinding(QualifiedTypeReference.java:43) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(QualifiedTypeReference.java:77) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:142) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(AllocationExpression.java:258) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:196) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:433) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:196) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:404) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1109) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1188) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:366) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:625) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:392) [aspectj:iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:990) [aspectj:iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:264) [aspectj:iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:180) [aspectj:iajc] at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112) [aspectj:iajc] at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) [aspectj:iajc] at org.aspectj.tools.ajc.Main.run(Main.java:378) [aspectj:iajc] at org.aspectj.tools.ajc.Main.runMain(Main.java:253) [aspectj:iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTask.java:1303) [aspectj:iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:1101) [aspectj:iajc] at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288) [aspectj:iajc] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [aspectj:iajc] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [aspectj:iajc] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [aspectj:iajc] at java.lang.reflect.Method.invoke(Method.java:585) [aspectj:iajc] at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105) [aspectj:iajc] at org.apache.tools.ant.Task.perform(Task.java:348) [aspectj:iajc] at org.apache.tools.ant.Target.execute(Target.java:357) [aspectj:iajc] at org.apache.tools.ant.Target.performTasks(Target.java:385) [aspectj:iajc] at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329) [aspectj:iajc] at org.apache.tools.ant.Project.executeTarget(Project.java:1298) [aspectj:iajc] at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41) [aspectj:iajc] at org.eclipse.ant.internal.ui.antsupport.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:32) [aspectj:iajc] at org.apache.tools.ant.Project.executeTargets(Project.java:1181) [aspectj:iajc] at org.eclipse.ant.internal.ui.antsupport.InternalAntRunner.run(InternalAntRunner.java:423) [aspectj:iajc] at org.eclipse.ant.internal.ui.antsupport.InternalAntRunner.main(InternalAntRunner.java:137) [aspectj:iajc] abort ABORT -- (ArrayIndexOutOfBoundsException) 1 [aspectj:iajc] 1 [aspectj:iajc] java.lang.ArrayIndexOutOfBoundsException: 1 [aspectj:iajc] at org.aspectj.weaver.ResolvedType.getMemberParameterizationMap(ResolvedType.java:744) [aspectj:iajc] at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:411) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:68) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1206) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1211) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1211) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.getInterTypeMungersIncludingSupers(ResolvedType.java:1185) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.checkInterTypeMungers(ResolvedType.java:1255) [aspectj:iajc] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:646) [aspectj:iajc] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:522) [aspectj:iajc] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom(AjLookupEnvironment.java:1105) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:599) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:276) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:113) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:49) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:99) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMemberType(BinaryTypeBinding.java:755) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.Scope.findMemberType(Scope.java:986) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.Scope.getMemberType(Scope.java:2116) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.findNextTypeBinding(QualifiedTypeReference.java:43) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(QualifiedTypeReference.java:77) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:142) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(AllocationExpression.java:258) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:196) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:433) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:196) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:404) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1109) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1188) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:366) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:625) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:392) [aspectj:iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:990) [aspectj:iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:264) [aspectj:iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:180) [aspectj:iajc] at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112) [aspectj:iajc] at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) [aspectj:iajc] at org.aspectj.tools.ajc.Main.run(Main.java:378) [aspectj:iajc] at org.aspectj.tools.ajc.Main.runMain(Main.java:253) [aspectj:iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTask.java:1303) [aspectj:iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:1101) [aspectj:iajc] at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288) [aspectj:iajc] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [aspectj:iajc] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [aspectj:iajc] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [aspectj:iajc] at java.lang.reflect.Method.invoke(Method.java:585) [aspectj:iajc] at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105) [aspectj:iajc] at org.apache.tools.ant.Task.perform(Task.java:348) [aspectj:iajc] at org.apache.tools.ant.Target.execute(Target.java:357) [aspectj:iajc] at org.apache.tools.ant.Target.performTasks(Target.java:385) [aspectj:iajc] at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329) [aspectj:iajc] at org.apache.tools.ant.Project.executeTarget(Project.java:1298) [aspectj:iajc] at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41) [aspectj:iajc] at org.eclipse.ant.internal.ui.antsupport.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:32) [aspectj:iajc] at org.apache.tools.ant.Project.executeTargets(Project.java:1181) [aspectj:iajc] at org.eclipse.ant.internal.ui.antsupport.InternalAntRunner.run(InternalAntRunner.java:423) [aspectj:iajc] at org.eclipse.ant.internal.ui.antsupport.InternalAntRunner.main(InternalAntRunner.java:137) [aspectj:iajc] May 11, 2008 9:35:06 AM org.aspectj.weaver.tools.Jdk14Trace info [aspectj:iajc] INFO: Dumping to C:\Development\PI\Projects\PI-ServiceCommon\.\ajcore.20080511.093506.214.txt [aspectj:iajc] MessageHolder: (92 info) (1 error) (1 abort) [aspectj:iajc] [error 0]: error at (no source information available) [aspectj:iajc] C:\Development\PI\JavaSrc\com\centricsoftware\pi\service\expression\FuncNewMatrix.java:0::0 Internal compiler error [aspectj:iajc] java.lang.ArrayIndexOutOfBoundsException: 1 [aspectj:iajc] at org.aspectj.weaver.ResolvedType.getMemberParameterizationMap(ResolvedType.java:744) [aspectj:iajc] at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:411) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:68) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1206) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1211) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.collectInterTypeMungers(ResolvedType.java:1211) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.getInterTypeMungersIncludingSupers(ResolvedType.java:1185) [aspectj:iajc] at org.aspectj.weaver.ResolvedType.checkInterTypeMungers(ResolvedType.java:1255) [aspectj:iajc] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:646) [aspectj:iajc] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:522) [aspectj:iajc] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom(AjLookupEnvironment.java:1105) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:599) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:276) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:113) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:49) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:99) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.getMemberType(BinaryTypeBinding.java:755) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.Scope.findMemberType(Scope.java:986) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.Scope.getMemberType(Scope.java:2116) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.findNextTypeBinding(QualifiedTypeReference.java:43) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(QualifiedTypeReference.java:77) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeReference.resolveType(TypeReference.java:142) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AllocationExpression.resolveType(AllocationExpression.java:258) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:196) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:433) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:196) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:404) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1109) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1188) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:366) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:625) [aspectj:iajc] at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:392) [aspectj:iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:990) [aspectj:iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:264) [aspectj:iajc] at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:180) [aspectj:iajc] at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112) [aspectj:iajc] at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) [aspectj:iajc] at org.aspectj.tools.ajc.Main.run(Main.java:378) [aspectj:iajc] at org.aspectj.tools.ajc.Main.runMain(Main.java:253) [aspectj:iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.executeInSameVM(AjcTask.java:1303) [aspectj:iajc] at org.aspectj.tools.ant.taskdefs.AjcTask.execute(AjcTask.java:1101) [aspectj:iajc] at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288) [aspectj:iajc] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [aspectj:iajc] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [aspectj:iajc] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [aspectj:iajc] at java.lang.reflect.Method.invoke(Method.java:585) [aspectj:iajc] at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105) [aspectj:iajc] at org.apache.tools.ant.Task.perform(Task.java:348) [aspectj:iajc] at org.apache.tools.ant.Target.execute(Target.java:357) [aspectj:iajc] at org.apache.tools.ant.Target.performTasks(Target.java:385) [aspectj:iajc] at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329) [aspectj:iajc] at org.apache.tools.ant.Project.executeTarget(Project.java:1298) [aspectj:iajc] at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41) [aspectj:iajc] at org.eclipse.ant.internal.ui.antsupport.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:32) [aspectj:iajc] at org.apache.tools.ant.Project.executeTargets(Project.java:1181) [aspectj:iajc] at org.eclipse.ant.internal.ui.antsupport.InternalAntRunner.run(InternalAntRunner.java:423) [aspectj:iajc] at org.eclipse.ant.internal.ui.antsupport.InternalAntRunner.main(InternalAntRunner.java:137)""",2008-05-11 12:48:06,a8739e3,['weaver/src/org/aspectj/weaver/a8739e3 TypeFactory.java']
232712,Bug 232712 ClassFormatError during LTW using annotation approach,"""The following exception is obtained when using the annotation approach and load-time weaving: [AppClassLoader@1f12c4e] info AspectJ Weaver Version 1.5.4 built on Thursday Dec 20, 2007 at 13:44:10 GMT [AppClassLoader@1f12c4e] info register classloader sun.misc.Launcher$AppClassLoader@1f12c4e [AppClassLoader@1f12c4e] info using configuration /H:/temp/aspectj_bug/scratch/classes/scratch/aop/annotationbug/aspect/aop-bug.xml [AppClassLoader@1f12c4e] info register aspect scratch.aop.annotationbug.aspect.BugAspect doSomething() Exception in thread """"main"""" java.lang.ClassFormatError: Code attribute in native or abstract methods in class file scratch/aop/annotationbug/extra/SubClass at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:620) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124) at java.net.URLClassLoader.defineClass(URLClassLoader.java:260) at java.net.URLClassLoader.access$000(URLClassLoader.java:56) at java.net.URLClassLoader$1.run(URLClassLoader.java:195) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:188) at java.lang.ClassLoader.loadClass(ClassLoader.java:306) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:276) at java.lang.ClassLoader.loadClass(ClassLoader.java:251) at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) at scratch.aop.annotationbug.extra.BugOther.getSubClass(BugOther.java:22) at scratch.aop.annotationbug.main.BugMain.somethingElse(BugMain.java:36) at scratch.aop.annotationbug.main.BugMain.doSomething(BugMain.java:30) at scratch.aop.annotationbug.main.BugMain.execute(BugMain.java:24) at scratch.aop.annotationbug.main.BugDriver.doExecute(BugDriver.java:27) at scratch.aop.annotationbug.main.BugDriver.main(BugDriver.java:21) The same advice logic does not result in a ClassFormatError when using the Aspect approach, it only appears using the annotation approach. Unfortunately we have not been able to track down exactly why the above Error occurs but have attached a test case that manifests it. To run simply use the runtime configuration on the BugDriver main(): -Dorg.aspectj.weaver.loadtime.configuration=""""scratch/aop/annotationbug/aspect/aop-bug.xml"""" Along with the AspectJ Load-Time Weaver Agent. The above occurs with both AspectJ 1.5.4 and AspectJ 1.6.0. Interestingly when using the aspectj 1.6.0 weaver, the AppClassLoader log still indicates """"1.5.4"""".""",2008-05-18 17:23:43,f014275,['weaver/src/org/aspectj/weaver/bcel/f014275 BcelClassWeaver.java']
233497,Bug 233497 StringIndexOutOfBoundsException thrown in BcelWeaver,,2008-05-22 13:12:59,93b7bed,['weaver/src/org/aspectj/weaver/bcel/93b7bed BcelWeaver.java']
237962,Bug 237962 [migration] Unexpected problem loading an aspect built with 1.5.4,"""We always support processing of old aspects. It doesn't matter what level of AspectJ was used to build an aspect, as long as you use that version or a later version of the weaver, we can unpack it and don't require it to be rebuilt from source. However, I've just encountered a .class apparently built with 1.5.4 that 1.6.1 cannot load. It crashes deserializing a PointcutDeclaration. In the data stream we have just read the numbers 1 and 3 indicating 'kinded pointcut' and then 'method-execution' and the next digit is a 0 when it should be 1-9. We crash with a: org.aspectj.weaver.BCException: weird kind 0 when batch building BuildConfig[null] #Files=43 at org.aspectj.weaver.MemberKind.read(MemberKind.java:35) at org.aspectj.weaver.patterns.SignaturePattern.read(SignaturePattern.java:682) The memberkind is a typesafeenum and so can never be other than 1-9. It is the first part of a signaturepattern so hard to see how it got written out 'wrong' right now. I've been told 1.5.4 can load this, so about to try that. Wow....1.5.4 did load it back in, how the hell. I suspect we aren't consuming enough in 1.6.1 which then leaves us some extra that we interpret as a rogue pointcut. Ok, in a comparison we consume one extra byte from the stream when reading it with 1.6.1 that we do not consume with 1.6.0 - at position 260. As I got closer to it, I knew what it would be - especially when I knew it was just one byte difference. The version check for whether the byte for 'annotation pattern relates to a parameter match' was wrong (urgh).""",2008-06-20 13:07:32,be03167,"['weaver/src/org/aspectj/weaver/patterns/be03167 AndAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/be03167 NotAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/be03167 OrAnnotationTypePattern.java', 'weaver/src/org/aspectj/weaver/patterns/be03167 WildAnnotationTypePattern.java']"
238666,Bug 238666 Allow the ltw configuration to be directly specified rather than discovered on the classpath,"""Currently the property: org.aspectj.weaver.loadtime.configuration can be set to name the ltw configuration file that the loadtime weaver searches for. The default value is: META-INF/aop.xml;META-INF/aop-ajc.xml;org/aspectj/aop.xml and the weaver searches the classpath for .xml files matching any of those three possibilities. A typical override might therefore be: -Dorg.aspectj.weaver.loadtime.configuration=META-INF/overhere.xml however the weaver will still only look for it on the classpath. In some environments the ltw user may just want to name the aop config file to use, and not be forced to include it on the classpath. We have had the suggestion to make it protocol based, which i like, but for now I would just allow support for 'file:'. If file: is the prefix, it will be treated as direct reference to the file to use, otherwise it will be searched for. This change would mean all existing uses of the override will be fine, but new users will be all to exploit the flexibility of naming their configuration directly.""",2008-06-26 15:05:26,df49b5c,['loadtime/src/org/aspectj/weaver/loadtime/df49b5c ClassLoaderWeavingAdaptor.java']
244321,Bug 244321 I cannot aspect code written in SJPP-based encoding,,2008-08-15 13:54:43,d5c2ead,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/d5c2ead AjBuildConfig.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/d5c2ead AjBuildManager.java']"
245734,Bug 245734 AJDT throws a RuntimeException from EclipseResolvedMember.getAnnotations,"""Build ID: N/A Steps To Reproduce: This exception is happening for us in both Eclipse 3.4 and 3.3 when we run an incremental build on one of our projects. We are using an aspect to declare an annotation on a class in the project, and we only started seeing this exception after we added it. A clean build on the project never throws the exception, only an incremental build. More information: The Exception Stack Trace: java.lang.RuntimeException at org.aspectj.ajdt.internal.compiler.lookup.EclipseResolvedMember.getAnnotations(EclipseResolvedMember.java:78) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.doDeclareAnnotations(AjLookupEnvironment.java:794) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:592) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironmen ... at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55) Compile error: RuntimeException thrown: not yet implemented - please raise an AJ bug I was going to include the AJDT Event log for the build but it is very long, and mostly unremarkable, so I have included only the section for the project where the exception was thrown. 11:9:50 Build kind = INCREMENTALBUILD 11:9:50 Project=ICODES, kind of build requested=Incremental AspectJ compilation 11:9:50 build: Examined delta - source file changes in required project ICODES 11:9:51 Found state instance managing output location : C:\jnaylor\Java_Dev\workspace\ICDM 11:9:51 Failed to find a state instance managing output location : C:\jnaylor\Java_dev\workspace\Dependencies\MARVEL\resources 11:9:51 Failed to find a state instance managing output location : C:\jnaylor\Java_Dev\workspace\GSG 11:9:52 Failed to find a state instance managing output location : C:\jnaylor\Java_dev\.build\Launch4J 11:9:52 Preparing for build: planning to be an incremental build 11:9:52 Starting incremental compilation loop 1 of possibly 5 11:9:52 AJDE Callback: finish. Was full build: false 11:9:52 Timer event: 2172ms: Total time spent in AJDE 11:9:54 Timer event: 47ms: Create element map (0 rels in project: ICODES) 11:9:54 Types affected during build = 0 11:9:54 Timer event: 0ms: Add markers (0 markers) 11:9:54 Timer event: 3735ms: Total time spent in AJBuilder.build() 11:9:54 =========================================================================================== This is occurring frequently, but not every time so we haven't been able to narrow down a reasonable sized test case.""",2008-08-29 14:27:06,f376a21,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/f376a21 EclipseResolvedMember.java']
246021,Bug 246021 FindBugs reporting another optimization,Ben Hale reported that FindBugs was producing a warning about a dead store to a local variable (a variable that is never then read within the method). This bug is to investigate and hopefully remove the dead store.,2008-09-02 18:22:57,78a483d,['weaver/src/org/aspectj/weaver/bcel/78a483d BcelShadow.java']
249710,Bug 249710 [compiling] Problem with -XterminateAfterCompilation,,2008-10-05 18:24:39,cffe291,"['tests/bugs163/pr249710/cffe291 Foo.java', 'tests/src/org/aspectj/systemtest/ajc163/cffe291 Ajc163Tests.java']"
251326,Bug 251326 Anonymous inner classes declare inside an ITD method will cause IllegalAccessError,"""If i declare an aspect in pkgB, having an ITD method for a class in pkgA using an inner anonymous class, is created in the pkgA package, package protected, but then instantiated from pkgB causeing the error. Test case is attached.""",2008-10-19 15:53:28,f1a83b5,"['tests/bugs163/pr251326/pkgA/f1a83b5 Listener.java', 'tests/bugs163/pr251326/pkgA/f1a83b5 Target.java', 'tests/src/org/aspectj/systemtest/ajc163/f1a83b5 Ajc163Tests.java']"
256400,"""Bug 256400 An internal error occurred during: """"Delete and update AspectJ markers for CoreSource"""".""","""this occured during a clean and build of the project i'm working on. The following was inthe details. An internal error occurred during: """"Delete and update AspectJ markers for CoreSource"""". java.lang.NullPointerException""",2008-11-25 04:51:17,155a888,['asm/src/org/aspectj/asm/internal/155a888 JDTLikeHandleProvider.java']
259528,Bug 259528 [incremental] [build] Class with ITD declared on it causes too many full builds,"""When there is a structural change to a class that has an ITD on it there is a full build. This should be an incremental build, but the compiler always drops to a full build.""",2008-12-22 16:42:04,2b43e63,"['tests/multiIncremental/pr259528/base/src/b/2b43e63 IsAdvised.java', 'tests/multiIncremental/pr259528/inc1/src/b/2b43e63 IsAdvised.java']"
260751,Bug 260751 java.lang.StringIndexOutOfBoundsException,ava.lang.StringIndexOutOfBoundsException at java.lang.String.substring(String.java:1938) at org.aspectj.ajdt.ajc.ConfigParser.stripWhitespaceAndComments(ConfigParser.java:103) at org.aspectj.ajdt.ajc.ConfigParser.parseConfigFileHelper(ConfigParser.java:69) at org.aspectj.ajdt.ajc.ConfigParser.parseImportedConfigFile(ConfigParser.java:224) at org.aspectj.ajdt.ajc.ConfigParser.parseOneArg(ConfigParser.java:213) at org.aspectj.ajdt.ajc.ConfigP ... 82) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55),2009-01-12 12:43:06,d9bd46d,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/d9bd46d ConfigParser.java']
261808,"""Bug 261808 iajc-Ant-Task fails """"type already defined""""""",,2009-01-21 07:43:15,1da1f7c,['taskdefs/src/org/aspectj/tools/ant/taskdefs/1da1f7c AjcTask.java']
263837,Bug 263837 Error during Delete AJ Markers,"""Error sent through the AJDT mailing list. I believe this is an LTW weaving error, so not raising it against AJDT.""",2009-02-05 13:25:34,1b54b4b,"['weaver/src/org/aspectj/weaver/bcel/1b54b4b BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/1b54b4b BcelTypeMunger.java', 'weaver/src/org/aspectj/weaver/bcel/1b54b4b BcelWeaver.java']"
264563,Bug 264563 [handles] Remove trailing '/' from source path handles,,2009-02-11 13:19:52,0af658e,['asm/src/org/aspectj/asm/internal/0af658e JDTLikeHandleProvider.java']
264869,Bug 264869 AspectJ depends on Class files having a dot in their source file name attribute,"""The following code in ShadowMunger$getBinaryFile() (line 169 ff) fails if a class file does not contain a proper source file name: if (binaryFile == null) { String s = getDeclaringType().getBinaryPath(); File f = getDeclaringType().getSourceLocation().getSourceFile(); int i = f.getPath().lastIndexOf('.'); String path = f.getPath().substring(0, i) + """".class""""; binaryFile = new File(s + """"!"""" + path); } (there is no '.' in the file name, thus this gives a string index out of bounds error).""",2009-02-13 11:54:48,9f80317,['org.aspectj.matcher/src/org/aspectj/weaver/9f80317 ShadowMunger.java']
266602,Bug 266602 Problem with incremental itd compilation,"""Reproduceable from Roo code - commenting out a field after a successful build results in this exception. The underlying cause may also apply to ITD methods (and maybe constructors). org.aspectj.weaver.BCException: Couldn't find ITD init member 'void com.springsource.petclinic.domain.Visit_Roo_Entity_Itd.ajc$interFieldInit$com_springsource_petclinic_domain_Visit_Roo_Entity_Itd$com_springsource_petclinic_domain_Visit$id(com.springsource.petclinic.domain.Visit)' on aspect com.springsource.petclinic.domain.Visit_Roo_Entity_Itd when type munging with (BcelTypeMunger ResolvedTypeMunger(Field, java.lang.Long com.springsource.petclinic.domain.Visit.id)) when weaving type com.springsource.petclinic.domain.Visit when weaving classes when weaving when incrementally building with classpath: C:\temp\petclinic\target\classes;E:/jvms/jdk1.6.0_06/jre/lib/resources.jar;E:/jvms/jdk1.6.0_06/jre/lib/rt.jar;E:/jvms/jdk1.6.0_06/jre/lib/jsse.jar;E:/jvms/jdk1.6.0_06/jre/lib/jce.jar;E:/jvms/jdk1.6.0_06/jre/lib/charsets.jar;E:/jvms/jdk1.6.0_06/jre/lib/ext/dnsns.jar;E:/jvms/jdk1.6.0_06/jre/lib/ext/localedata.jar;E:/jvms/jdk1.6.0_06/jre/lib/ext/sunjce_provider.jar;E:/jvms/jdk1.6.0_06/jre/lib/ext/sunmscapi.jar;E:/jvms/jdk1.6.0_06/jre/lib/ext/sunpkcs11.jar;C:/Users/Andy/.m2/repository/org/antlr/com.springsource.antlr/2.7.6/com.springsource.antlr-2.7.6.jar;C:/Users/Andy/.m2/repository/com/thoughtworks/xstream/com.springsource.com.thoughtworks.xstream/1.3.0/com.springsource.com.thoughtworks.xstream-1.3.0.jar;C:/Users/Andy/.m2/repository/edu/emory/mathcs/backport/com.springsource.edu.emory.mathcs.backport/3.1.0/com.springsource.edu.emory.mathcs.backport-3.1.0.jar;C:/Users/Andy/.m2/repository/edu/oswego/cs/concurrent/com.springsource.edu.oswego.cs.dl.util.concurrent/1.3.4/com.springsource.edu.oswego.cs.dl.util.concurrent-1.3.4.jar;C:/Users/Andy/.m2/repository/org/jboss/javassist/com.springsource.javassist/3.3.0.ga/com.springsource.javassist-3.3.0.ga.jar;C:/Users/Andy/.m2/repository/javax/annotation/com.springsource.javax.annotation/1.0.0/com.springsource.javax.annotation-1.0.0.jar;C:/Users/Andy/.m2/repository/javax/persistence/com.springsource.javax.persistence/1.0.0/com.springsource.javax.persistence-1.0.0.jar;C:/Users/Andy/.m2/repository/javax/servlet/com.springsource.javax.servlet/2.4.0/com.springsource.javax.servlet-2.4.0.jar;C:/Users/Andy/.m2/repository/javax/servlet/com.springsource.javax.servlet.jsp.jstl/1.2.0/com.springsource.javax.servlet.jsp.jstl-1.2.0.jar;C:/Users/Andy/.m2/repository/javax/transaction/com.springsource.javax.transaction/1.1.0/com.springsource.javax.transaction-1.1.0.jar;C:/Users/Andy/.m2/repository/net/sourceforge/cglib/com.springsource.net.sf.cglib/2.1.3/com.springsource.net.sf.cglib-2.1.3.jar;C:/Users/Andy/.m2/repository/net/sourceforge/ehcache/com.springsource.net.sf.ehcache/1.4.1/com.springsource.net.sf.ehcache-1.4.1.jar;C:/Users/Andy/.m2/repository/net/sourceforge/jsr107cache/com.springsource.net.sf.jsr107cache/1.0.0/com.springsource.net.sf.jsr107cache-1.0.0.jar;C:/Users/Andy/.m2/repository/org/antlr/com.springsource.org.antlr/3.0.1/com.springsource.org.antlr-3.0.1.jar;C:/Users/Andy/.m2/repository/org/aopalliance/com.springsource.org.aopalliance/1.0.0/com.springsource.org.aopalliance-1.0.0.jar;C:/Users/Andy/.m2/repository/org/apache/commons/com.springsource.org.apache.commons.collections/3.2.0/com.springsource.org.apache.commons.collections-3.2.0.jar;C:/Users/Andy/.m2/repository/org/apache/commons/com.springsource.org.apache.commons.dbcp/1.2.2.osgi/com.springsource.org.apache.commons.dbcp-1.2.2.osgi.jar;C:/Users/Andy/.m2/repository/org/apache/commons/com.springsource.org.apache.commons.logging/1.1.1/com.springsource.org.apache.commons.logging-1.1.1.jar;C:/Users/Andy/.m2/repository/org/apache/commons/com.springsource.org.apache.commons.pool/1.3.0/com.springsource.org.apache.commons.pool-1.3.0.jar;C:/Users/Andy/.m2/repository/org/apache/log4j/com.springsource.org.apache.log4j/1.2.15/com.springsource.org.apache.log4j-1.2.15.jar;C:/Users/Andy/.m2/repository/org/apache/taglibs/com.springsource.org.apache.taglibs.standard/1.1.2/com.springsource.org.apache.taglibs.standard-1.1.2.jar;C:/Users/Andy/.m2/repository/org/aspectj/com.springsource.org.aspectj.runtime/1.6.2.RELEASE/com.springsource.org.aspectj.runtime-1.6.2.RELEASE.jar;C:/Users/Andy/.m2/repository/org/aspectj/com.springsource.org.aspectj.tools/1.6.2.RELEASE/com.springsource.org.aspectj.tools-1.6.2.RELEASE.jar;C:/Users/Andy/.m2/repository/org/aspectj/com.springsource.org.aspectj.weaver/1.6.2.RELEASE/com.springsource.org.aspectj.weaver-1.6.2.RELEASE.jar;C:/Users/Andy/.m2/repository/org/dom4j/com.springsource.org.dom4j/1.6.1/com.springsource.org.dom4j-1.6.1.jar;C:/Users/Andy/.m2/repository/org/hibernate/com.springsource.org.hibernate/3.2.6.ga/com.springsource.org.hibernate-3.2.6.ga.jar;C:/Users/Andy/.m2/repository/org/hibernate/com.springsource.org.hibernate.annotations/3.3.1.ga/com.springsource.org.hibernate.annotations-3.3.1.ga.jar;C:/Users/Andy/.m2/repository/org/hibernate/com.springsource.org.hibernate.annotations.common/3.3.0.ga/com.springsource.org.hibernate.annotations.common-3.3.0.ga.jar;C:/Users/Andy/.m2/repository/org/hibernate/com.springsource.org.hibernate.ejb/3.3.2.GA/com.springsource.org.hibernate.ejb-3.3.2.GA.jar;C:/Users/Andy/.m2/repository/org/hibernate/com.springsource.org.hibernate.validator/3.0.0.GA/com.springsource.org.hibernate.validator-3.0.0.GA.jar;C:/Users/Andy/.m2/repository/org/hsqldb/com.springsource.org.hsqldb/1.8.0.9/com.springsource.org.hsqldb-1.8.0.9.jar;C:/Users/Andy/.m2/repository/org/jboss/util/com.springsource.org.jboss.util/2.0.4.GA/com.springsource.org.jboss.util-2.0.4.GA.jar;C:/Users/Andy/.m2/repository/org/junit/com.springsource.org.junit/4.4.0/com.springsource.org.junit-4.4.0.jar;C:/Users/Andy/.m2/repository/org/objectweb/asm/com.springsource.org.objectweb.asm/2.2.3/com.springsource.org.objectweb.asm-2.2.3.jar;C:/Users/Andy/.m2/repository/org/objectweb/asm/com.springsource.org.objectweb.asm.attrs/1.5.3/com.springsource.org.objectweb.asm.attrs-1.5.3.jar;C:/Users/Andy/.m2/repository/org/objectweb/asm/com.springsource.org.objectweb.asm.commons/2.2.3/com.springsource.org.objectweb.asm.commons-2.2.3.jar;C:/Users/Andy/.m2/repository/org/xmlpull/com.springsource.org.xmlpull/1.1.3.4-O/com.springsource.org.xmlpull-1.1.3.4-O.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.aop/3.0.0.M1/org.springframework.aop-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.aspects/3.0.0.M1/org.springframework.aspects-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.beans/3.0.0.M1/org.springframework.beans-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.context/3.0.0.M1/org.springframework.context-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.core/3.0.0.M1/org.springframework.core-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.expression/3.0.0.M1/org.springframework.expression-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.jdbc/3.0.0.M1/org.springframework.jdbc-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.orm/3.0.0.M1/org.springframework.orm-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.test/3.0.0.M1/org.springframework.test-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.transaction/3.0.0.M1/org.springframework.transaction-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.web/3.0.0.M1/org.springframework.web-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/org.springframework.web.servlet/3.0.0.M1/org.springframework.web.servlet-3.0.0.M1.jar;C:/Users/Andy/.m2/repository/org/springframework/roo/roo-core/0.2.0-SNAPSHOT/roo-core-0.2.0-SNAPSHOT.jar;F:/eclipse/e342/eclipse/plugins/org.aspectj.runtime_1.6.4.20090205161900/aspectjrt.jar;f:\jvms\jdk1.6.0_06\jre\lib\ext\dnsns.jar;f:\jvms\jdk1.6.0_06\jre\lib\ext\localedata.jar;f:\jvms\jdk1.6.0_06\jre\lib\ext\sunjce_provider.jar;f:\jvms\jdk1.6.0_06\jre\lib\ext\sunmscapi.jar;f:\jvms\jdk1.6.0_06\jre\lib\ext\sunpkcs11.jar;f:\eclipse\e342\eclipse\\plugins\org.eclipse.equinox.launcher_1.0.101.R34x_v20081125.jar; at org.aspectj.weaver.bcel.BcelTypeMunger.mungeNewField(BcelTypeMunger.java:1638) at org.aspectj.weaver.bcel.BcelTypeMunger.munge(BcelTypeMunger.java:90) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:441) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:103) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1732) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1693) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1458) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1272) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.weaveQueuedEntries(AjPipeliningCompilerAdapter.java:435) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.queueForWeaving(AjPipeliningCompilerAdapter.java:371) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.afterProcessing(AjPipeliningCompilerAdapter.java:358) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$after$org_aspectj_ajdt_internal_compiler_CompilerAdapter$5$6b855184(CompilerAdapter.aj:98) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:652) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:392) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:977) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performBuild(AjBuildManager.java:301) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:183) at org.aspectj.ajde.core.internal.AjdeCoreBuildManager.performBuild(AjdeCoreBuildManager.java:127) at org.aspectj.ajde.core.AjCompiler.build(AjCompiler.java:88) at org.eclipse.ajdt.core.builder.AJBuilder.build(AJBuilder.java:223) at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:633) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:170) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:201) at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:253) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:256) at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:309) at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:341) at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:140) at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:238) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)""",2009-02-28 16:09:42,2f36e7f,['weaver/src/org/aspectj/weaver/bcel/2f36e7f BcelTypeMunger.java']
266996,Bug 266996 AspectJElementHierarchy.java:427 NullPointerException,"""Since an recent update to eclipse I get errors when using ajdt compile time weaving. Single used aspect is @Configurable from spring 2.5.6. I call this critical because my application wont run without that aspect compiled in. When doing a build two popups """"AspectJ Internal Compiler Error"""" are showing up with instructions to look for and post bugreports. 1st popup: -------------------------------- java.lang.NullPointerException at org.aspectj.asm.internal.AspectJElementHierarchy.findCloserMatchForLineNumber(AspectJElementHierarchy.java:427) at org.aspectj.weaver.model.AsmRelationshipProvider.addRelationship(AsmRelationshipProvider.java:130) at org.aspectj.weaver.bcel.BcelTypeMunger.munge(BcelTypeMunger.java:124) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:441) at org.aspectj.weaver.bcel.BcelClassWeaver.weave( ... end abstract interface org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport -------------------------------- 2nd popup -------------------------------- java.lang.NullPointerException at org.aspectj.asm.internal.AspectJElementHierarchy.findCloserMatchForLineNumber(AspectJElementHierarchy.java:427) at org.aspectj.weaver.model.AsmRelationshipProvider.addRelationship(AsmRelationshipProvider.java:130) at org.aspectj.weaver.bcel.BcelTypeMunger.munge(BcelTypeMunger.java:124) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:441) at org.aspectj.weaver.bcel.BcelClassWeaver.weave( ... ibatis/domain/Banf;)I IRETURN end public volatile int compareTo(Object) end public class de.synaix.k070_Banf.ibatis.domain.Banf -------------------------------- Output of AJDT Event trace window: -------------------------------- 11:21:34 Removed problems and tasks for project SOME_webapp 11:21:34 Builder: Tidied output folder(s), removed class files and derived resources 11:21:35 Timer event: 1ms: Delete markers: SOME_webapp (Finished deleting markers for SOME_webapp 11:21:38 Compiler configuration for project SOME_webapp doesn't know previous state, so assuming EVERYTHING has changed. 11:21:38 =========================================================================================== 11:21:38 Build kind = FULLBUILD 11:21:38 Project=SOME_webapp, kind of build requested=Full AspectJ compilation 11:21:38 Builder: Tidied output folder(s), removed class files and derived resources 11:21:38 Timer event: 442ms: Pre compile 11:21:38 Compiler configuration for project SOME_webapp has been read by compiler. Resetting. 11:21:38 Configuration was [PROJECTSOURCEFILES_CHANGED, JAVAOPTIONS_CHANGED, ASPECTPATH_CHANGED, CLASSPATH_CHANGED, INPATH_CHANGED, NONSTANDARDOPTIONS_CHANGED, OUTJAR_CHANGED, PROJECTSOURCERESOURCES_CHANGED, OUTPUTDESTINATIONS_CHANGED, INJARS_CHANGED] 11:21:38 Resetting list of modified source files. Was null 11:21:38 Preparing for build: not going to be incremental because no successful previous full build 11:21:40 Timer event: 1252ms: Time to first compiled message 11:21:40 Timer event: 1276ms: Time to first woven message 11:21:45 AspectJ reports build successful, build was: FULL 11:21:45 AJDE Callback: finish. Was full build: true 11:21:45 Timer event: 6456ms: Total time spent in AJDE 11:21:45 Timer event: 157ms: Refresh after build 11:21:45 Types affected during build = 308 11:21:45 Crosscutting model sanity checked with no problems 11:21:45 Timer event: 0ms: Post compile 11:21:45 Timer event: 7248ms: Total time spent in AJBuilder.build() 11:21:45 Timer event: 2ms: Delete markers: SOME_webapp (Finished deleting markers for SOME_webapp) 11:21:45 Timer event: 179ms: Create markers: SOME_webapp (Finished creating markers for SOME_webapp) --------------------------------""",2009-03-04 05:49:51,2309f7b,['asm/src/org/aspectj/asm/internal/2309f7b AspectJElementHierarchy.java']
269522,Bug 269522 [handles] Cross reference view and markers mix up joinpoints assigned to advice,"""Build ID: M20090211-1700 Steps To Reproduce: I have two pieces of after advice in my aspect. In the cross reference view I see all of the joinpoints for both after advice selecting one of the after advice statements. When I select the other after advice statement I see no joinpoints. When I select the marker for either piece of after advice, I see all the joinpoints for both pieces of advice. 1. open and perform a clean compile on the attached project 2. open the xref view 3. select line 22 an note that you see 5 joinpoints (should only be 3) 4. select line 68 and note that you see zero joinpoints (should be 2 here) 5. right click the marker at line 68 and choose """"advises"""" - note you see all 5 joinpoints 6. right click the marker at line 22 and choose """"advises"""" - note you see all 5 joinpoints More information:""",2009-03-20 10:24:07,6dbb5f3,['asm/src/org/aspectj/asm/internal/6dbb5f3 JDTLikeHandleProvider.java']
269578,Bug 269578 Resource deletion in source folder on full build when source and output folders are the same.,"""On the clean before a full aspectj build resources are removed from the output folder. This is true even when the output and the source folder are the same. In this case, the resources are deleted from the source folder! When the source and output folders are the same, resources should never be deleted.""",2009-03-20 17:01:10,5c49c0b,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/5c49c0b AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/5c49c0b AjState.java']"
269840,Bug 269840 [model] package search fails in binary aspect in same package as a source type,If type a.b.c.C is advised by an aspect a.b.c.X from the aspectpath the model search logic breaks for finding 'X' because it hits the package node for a.b.c and stops looking,2009-03-24 12:07:29,7a7d6f0,['asm/src/org/aspectj/asm/internal/7a7d6f0 AspectJElementHierarchy.java']
269867,Bug 269867 Non synchronized access to WeakHashMap causes infinite loop,"""The non synchronized access from AjTypeSystem.getAjType(clazz) to a static instance of WeakHashMap may cause an infinite loop at start up in a multi threaded system. The thread dump shows that 32 of 33 threads of the application stuck in WeakHashMap.get(Object) line 355: """"BundleStarterThreadQcCtrl24"""" prio=3 tid=0x00957c00 nid=0x39 runnable [0xd42fb000..0xd42ffa70] java.lang.Thread.State: RUNNABLE at java.util.WeakHashMap.get(WeakHashMap.java:355) at org.aspectj.lang.reflect.AjTypeSystem.getAjType(AjTypeSystem.java:37) at org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate.initialize(Java15ReflectionBasedReferenceTypeDelegate.java:66) at org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateFactory.create15Delegate(ReflectionBasedReferenceTypeDelegateFactory.java:56) at org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateFactory.createDelegate(ReflectionBasedReferenceTypeDelegateFactory.java:42) at org.aspectj.weaver.reflect.ReflectionWorld.resolveDelegate(ReflectionWorld.java:111) at org.aspectj.weaver.World.resolveToReferenceType(World.java:388) at org.aspectj.weaver.World.resolve(World.java:279) at org.aspectj.weaver.World.resolve(World.java:199) at org.aspectj.weaver.World.resolve(World.java:348) at org.aspectj.weaver.reflect.ReflectionWorld.resolve(ReflectionWorld.java:103) at org.aspectj.weaver.reflect.ReflectionWorld.resolve(ReflectionWorld.java:93) at org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateFactory.toResolvedTypeArray(ReflectionBasedReferenceTypeDelegateFactory.java:214) at org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateFactory.createResolvedMethod(ReflectionBasedReferenceTypeDelegateFactory.java:107) at org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateFactory.createResolvedMember(ReflectionBasedReferenceTypeDelegateFactory.java:98) at org.aspectj.weaver.reflect.ReflectionShadow.makeExecutionShadow(ReflectionShadow.java:53) at org.aspectj.weaver.internal.tools.PointcutExpressionImpl.matchesExecution(PointcutExpressionImpl.java:100) at org.aspectj.weaver.internal.tools.PointcutExpressionImpl.matchesMethodExecution(PointcutExpressionImpl.java:92) at org.springframework.aop.aspectj.AspectJExpressionPointcut.getShadowMatch(AspectJExpressionPointcut.java:370)""",2009-03-24 14:16:04,752f895,['aspectj5rt/java5-src/org/aspectj/lang/reflect/752f895 AjTypeSystem.java']
269902,Bug 269902 NPE in AsmRelationshipProvider.addRelationship,"""When doing a clean build of my project, seeing dozens, upwards of 100 of NPEs similar to the following: java.lang.NullPointerException at org.aspectj.weaver.model.AsmRelationshipProvider.addRelationship(AsmRelationshipProvider.java:168) at org.aspectj.weaver.bcel.BcelTypeMunger.munge(BcelTypeMunger.java:124) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:441) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:103) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1732) at org.aspectj.weaver.b ... FWIW, this is seen for Spring-managed auto-injection of beans with the @Configurable annotation. Official AJDT version is: 1.6.4.20090304172355 Version: 3.4.2 Build id: M20090211-17""",2009-03-24 18:39:30,d5e900d,['weaver/src/org/aspectj/weaver/model/d5e900d AsmRelationshipProvider.java']
269912,Bug 269912 wasted time building message context when it is only used for command line builds,The context for a message is created even when AspectJ is used inside AJDT - but the context only ever gets used when printing messages to System.out. Under AJDT we ought to be able to 'switch it off',2009-03-24 19:25:29,c732808,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/c732808 AjBuildManager.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/c732808 EclipseAdapterUtils.java']"
270033,Bug 270033 [incremental] Incremental compilation with aspects on an incoming classpath/aspectpath,,2009-03-25 17:20:22,b23cc1a,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b23cc1a AjState.java']
272591,Bug 272591 [WARNING] couldn't find aspectjrt.jar on classpath,I am using the aspectj runtime jar that is in the spring source bundle repository. The have renamed their jar to match their naming conventions and it is causing the warning to occur. Their bundle is named com.springsource.org.aspectj.runtime-1.6.3.RELEASE.jar. It would be nice if this warning was not printed out in this case.,2009-04-16 18:32:15,1b663a9,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/1b663a9 AjBuildManager.java']
274559,Bug 274559 Compile exception when not using debug info,"""The following project throws a compiler exception when the project property """"Add variable attributes to generated class files"""" is turned off.""",2009-04-30 14:06:37,f9578da,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/f9578da InterTypeMethodDeclaration.java']
274986,Bug 274986 DocumentParser incorrectly caches DTD InputStream,Build ID: 1.6.3 Steps To Reproduce: Attempt to parse two aop.xml files using two DocumentParsers that are loaded by the same class loader. If the DTD is loaded from a JAR file you'll get an NPE at java.util.zip.Inflater.inflateBytes(Native Method). More information: DocumentParser caches the DTD InputStream in a static final field. Many InputStreams are unusable after being closed so the same instance should not be used here. For InflaterInputStreams there seems to be a bug in the JRE that prevents the stream from reporting itself as closed when you use it again.,2009-05-05 09:50:07,66235e8,['weaver/src/org/aspectj/weaver/loadtime/definition/66235e8 DocumentParser.java']
279120,Bug 279120 NPE determining annotation target kind during weaving,"""reported on the list: Hi, I am using aspectj LTW (aspectjweaver-1.6.1) for weaving an aspect available in another jar within my web application code. While building the jar which contains the aspect, using maven, I have JUnits which run without any problems using LTW. My aspect code looks as below @Around(""""execution (@com.arisglobal.aglite.annotations.OperationTrail public * *(..)) && this(executor)"""") public Object auditOperation(ProceedingJoinPoint thisJoinPoint, Object executor) { ... ... aspect code ... } However when I deploy the application in tomcat (with javaagent:aspectjweaver-1.6.1.jar option), I get a NPE which I have pasted below. Jun 4, 2009 12:06:18 PM org.aspectj.weaver.tools.Jdk14Trace error SEVERE: com/arisglobal/aglite/services/actiontrail/ActionTrailAspect java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelObjectType.getAnnotationTargetKinds(BcelO bjectType.java:612) at org.aspectj.weaver.ReferenceType.getAnnotationTargetKinds(ReferenceTy pe.java:265) at org.aspectj.weaver.patterns.SignaturePattern.checkForIncorrectTargetK ind(SignaturePattern.java:112) at org.aspectj.weaver.patterns.SignaturePattern.checkForIncorrectTargetK ind(SignaturePattern.java:94) at org.aspectj.weaver.patterns.SignaturePattern.resolveBindings(Signatur ePattern.java:87) at org.aspectj.weaver.patterns.KindedPointcut.resolveBindings(KindedPoin tcut.java:262) at org.aspectj.weaver.patterns.AndPointcut.resolveBindings(AndPointcut.j ava:75) at org.aspectj.weaver.patterns.Pointcut.resolve(Pointcut.java:196) at org.aspectj.weaver.bcel.AtAjAttributes.handleAroundAnnotation(AtAjAtt ributes.java:1308) at org.aspectj.weaver.bcel.AtAjAttributes.readAj5MethodAttributes(AtAjAt tributes.java:403) at org.aspectj.weaver.bcel.BcelMethod.unpackAjAttributes(BcelMethod.java :189) at org.aspectj.weaver.bcel.BcelMethod.<init>(BcelMethod.java:96) at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredMethods(BcelObjectT ype.java:264) at org.aspectj.weaver.bcel.LazyClassGen.<init>(LazyClassGen.java:303) at org.aspectj.weaver.bcel.BcelObjectType.getLazyClassGen(BcelObjectType .java:524) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1728) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1 696) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:145 8) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1244) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor. java:423) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.jav a:286) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:95) at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(C lassPreProcessorAgentAdapter.java:52) at sun.instrument.TransformerManager.transform(TransformerManager.java:1 22) at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java :155) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:620) I also tried using aspectjweaver-1.6.4 version however got the same error.""",2009-06-04 11:10:13,3417cbe,['weaver/src/org/aspectj/weaver/bcel/3417cbe BcelObjectType.java']
279298,Bug 279298 AspectJ LTW with Cobertura,,2009-06-05 14:02:54,35a9649,['weaver/src/org/aspectj/weaver/bcel/35a9649 AtAjAttributes.java']
280783,Bug 280783 JavaDocRunner fails on System.setSecurityManager in Netbeans,,2009-06-18 10:48:34,59d5c3b,['ajdoc/src/org/aspectj/tools/ajdoc/59d5c3b JavadocRunner.java']
282379,Bug 282379 [plan] spaces in file names causes AspectJ weaver to fail,"""The WeavingAdaptor requires the aspect path to be composed by URLs. The URL of a file is encoded, for example if it contains spaces they will be represented with %20. It then converts these file:// urls to simple string paths, and then tries to access files pointed by those paths. This is done inside the FileUtil.makeClasspath(URL[]) . This method uses URL.getPath() to obtain the path. But this method does not decode the string, it returns it as it is in the URL. When later this string is used to create a new File instance, that file contains an invalid path, and the weaver fails as follows : Caused by: org.aspectj.bridge.AbortException: bad aspect library: '/home/sym/path%20with%20space/aspect-library.jar' at org.aspectj.weaver.tools.WeavingAdaptor$WeavingAdaptorMessageHolder.handleMessage(WeavingAdaptor.java:624) at org.aspectj.bridge.MessageUtil.error(MessageUtil.java:80) at org.aspectj.weaver.tools.WeavingAdaptor.error(WeavingAdaptor.java:504) at org.aspectj.weaver.tools.WeavingAdaptor.addAspectLibrary(WeavingAdaptor.java:472) at org.aspectj.weaver.tools.WeavingAdaptor.registerAspectLibraries(WeavingAdaptor.java:447) at org.aspectj.weaver.tools.WeavingAdaptor.init(WeavingAdaptor.java:177) at org.aspectj.weaver.tools.WeavingAdaptor.<init>(WeavingAdaptor.java:112) This issue is quite important, because on older windows """"Documents and Settings"""" is an unfortunately common path, for example Maven stores there its repository. Multiple solutions are possible for this simple bug, in order of impact : - Decode the string obtained by URL.getPath() using URLEncoder.decode() - Use Files instead of Strings and let Java handle the URL, using the File(URI) constructor - Don't assume that aspect libraries are files, and hence that urls are file url, and use URLConnection to fetch aspect library contents.""",2009-07-03 10:12:55,5648105,['util/src/org/aspectj/util/5648105 FileUtil.java']
285172,Bug 285172 Sometimes when load-time weaving there will be two ReferenceType objects for the same type,"""Seen by Ramnivas. A pointcut uses an exact type name for an annotation execution(* (@Controller *..*).*(..)) Resolving this pointcut causes us to construct a ReferenceType for 'Controller'. Then we attempt to populate it by loading the class implementation. This recurses back into the weaver as Controller is loaded and an attempt is made to weave it. This takes a second route through the weaver to build a referencetype again and this second referencetype is cached in the world. When we unwind, we continue building the original referencetype and are left with one in the cache and the one resolved for the pointcut. Due to the use of == for comparison, we fail to match on join points later because they will use the ReferenceType from the cache.""",2009-07-30 11:00:41,dd7d879,['org.aspectj.matcher/src/org/aspectj/weaver/dd7d879 World.java']
287315,Bug 287315 NPE using declare @type,reported by Ramnivas: java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelObjectType.hasAnnotation(BcelObjectType.java:558) at org.aspectj.weaver.ReferenceType.hasAnnotation(ReferenceType.java:161) at org.aspectj.weaver.patterns.ExactAnnotationTypePattern.matches(ExactAnnotationTypePattern.java:101) at org.aspectj.weaver.patterns.ExactAnnotationTypePattern.matches(ExactAnnotationTypePattern.java:94) at org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern.matchesExactly(TypePattern.java:513) at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:129) at org.aspectj.weaver.patterns.DeclareAnnotation.matches(DeclareAnnotation.java:269) at org.aspectj.weaver.bcel.BcelWeaver.applyDeclareAtType(BcelWeaver.java:1590),2009-08-21 11:30:34,b664969,['weaver/src/org/aspectj/weaver/bcel/b664969 BcelObjectType.java']
288198,Bug 288198 LangUtils JVM version detection cannot handle Java 7,"""User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-GB; rv:1.9.1.2) Gecko/20090729 Firefox/3.5.2 Build Identifier: 1.6.4 The JVM detection in LangUtils is currently unable to handle Java7, whilst this is naturally an unreleased version of the JVM, the fix is trivial. Reproducible: Always Steps to Reproduce: Attempt to use the LangUtils java version support on java7""",2009-08-31 21:09:33,b29f839,['util/src/org/aspectj/util/b29f839 LangUtil.java']
288505,Bug 288505 failure to close inputstream,,2009-09-03 12:17:03,3d3d03b,['org.aspectj.matcher/src/org/aspectj/weaver/3d3d03b Lint.java']
289816,Bug 289816 Potentially unclosed stream in org.aspectj.weaver.bcel.BcelWorld,,2009-09-18 04:23:05,67ffda8,['weaver/src/org/aspectj/weaver/bcel/67ffda8 BcelWorld.java']
289818,Bug 289818 Unclosed stream in org.aspectj.weaver.bcel.ExtensibleURLClassLoader,,2009-09-18 04:31:21,4d200d1,['weaver/src/org/aspectj/weaver/bcel/4d200d1 ExtensibleURLClassLoader.java']
291206,Bug 291206 Allow declare error & declare warning to support type expressions,,2009-10-02 11:01:11,9241e2e,"['tests/bugs169/pr291206/9241e2e One.java', 'tests/bugs169/pr291206/9241e2e Three.java', 'tests/bugs169/pr291206/9241e2e Two.java']"
293351,Bug 293351 RuntimeException weaving roo app with advice based on execution pointcut,java.lang.RuntimeException at org.aspectj.weaver.ResolvedType.getAnnotations(ResolvedType.java:718) at org.aspectj.weaver.AbstractAnnotationAJ.retrieveAnnotationOnAnnotation(AbstractAnnotationAJ.java:123) at org.aspectj.weaver.AbstractAnnotationAJ.ensureAtTargetInitialized(AbstractAnnotationAJ.java:85) at org.aspectj.weaver.AbstractAnnotationAJ.specifiesTarget(AbstractAnnotationAJ.java:115) at org.aspectj.weaver.bcel.BcelWeaver.verifyTa ... .eclipse.core.internal.jobs.Worker.run(Worker.java:55) Compile error: RuntimeException thrown: ResolvedType.getAnnotations() should never be called,2009-10-26 14:19:20,a23c7e4,['org.aspectj.matcher/src/org/aspectj/weaver/a23c7e4 MissingResolvedTypeWithKnownSignature.java']
293457,Bug 293457 NPE on multiple declare @methods,,2009-10-27 11:24:31,dc53b77,"['tests/bugs167/pr293457/org/springmodules/cache/annotations/dc53b77 Cacheable.java', 'tests/src/org/aspectj/systemtest/ajc167/dc53b77 Ajc167Tests.java', 'tests/src/org/aspectj/systemtest/ajc167/dc53b77 IntertypeTests.java']"
297013,Bug 297013 Unclosed stream in AjAttribute,,2009-12-06 04:06:10,28fb861,['org.aspectj.matcher/src/org/aspectj/weaver/28fb861 AjAttribute.java']
298786,Bug 298786 suspected problem with handling of multiple aop.xml files,,2010-01-04 13:27:42,a968890,['loadtime/src/org/aspectj/weaver/loadtime/a968890 ClassLoaderWeavingAdaptor.java']
305788,Bug 305788 Exception was thrown when I saved a file in Eclipse,Build Identifier: SpringSource STS 2.3.1 java.util.ConcurrentModificationException at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793) at java.util.HashMap$KeyIterator.next(HashMap.java:828) at org.aspectj.asm.internal.AspectJElementHierarchy.updateHandleMap(AspectJElementHierarchy.java:594) at org.aspectj.asm.AsmManager.removeStructureModelForFiles(AsmManager.java:564) at org.aspectj.asm.AsmManager.processDelta(AsmManager.java:639) at org.aspectj.ajdt.internal.core ... un(AutoBuildJob.java:238) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55) Compile error: ConcurrentModificationException thrown: null Reproducible: Always Steps to Reproduce: 1.Generate an abstract class using Spring roo 2. Edit that file within Eclipse/STS to add JPA annotations 3.Click on the save icon to save the file - Exceptions box pops up,2010-03-13 20:52:59,749078d,['asm/src/org/aspectj/asm/internal/749078d AspectJElementHierarchy.java']
308093,Bug 308093 incremental build problem when mixing up ITDs and declare parents,"""reported by Rod Johnson. He had a sophisticated aspect doing a mix of ITDs and declare parents. On doing an incremental build he was receiving errors that looked like the declare parents hadn't applied on the secondary build. What was actually happening is that when a class file was brought in as a BinaryTypeBinding, the existing World representation wasn't being cleaned up properly. Without the cleanup the declare parents thought it was still in effect, but it was not. With proper cleanup the declare parents applies on the secondary build and all is well. Change is in AjLookupEnviroment.weaveInterTypeDeclarations where the onType.clearInterTypeMungers() must be paired with an onType.ensureConsistent() call.""",2010-04-05 14:16:02,4b43dc6,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/4b43dc6 AjLookupEnvironment.java']
308386,Bug 308386 NPE when hasfield evaluating with annotations and there is an unresolved import,"""hasfield/hasmethod can cause early matching - before the weaving process kicks in properly. For a 'normal' compile error, like an unresolvable import, the error is put out before the weaving process kicks off. However hasfield/hasmethod happening early causes an NPE to occur before the error is put out. A guard for the NPE (which occurs in EclipseResolvedMember.getAnnotationTypes()) addresses this problem and allows the real error to come out.""",2010-04-07 15:15:51,94d0a4e,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/94d0a4e EclipseResolvedMember.java']
309402,Bug 309402 Changes to Main.java,"""In order to get the AJDT ant integration working, we need a small change to Main.java. We need to be able to pass in a custom org.aspectj.bridge.ICommand object. Currently, the ICommand object is created via reflection. Here is my suggestion: 1. augment the ICommand local variable to being a field 2. add a setter for this field 3. change this: ICommand command = ReflectionFactory.makeCommand(commandName, holder); to this: if (command != null) command = ReflectionFactory.makeCommand(commandName, holder);""",2010-04-15 19:09:23,b21eb05,['org.aspectj.ajdt.core/src/org/aspectj/tools/ajc/b21eb05 Main.java']
310144,Bug 310144 java.lang.RuntimeException at AsmManager.java:1143,Build Identifier: Eclipse AspectJ Development Tools Version: 2.0.3.e35x-20100419-1200 AspectJ version: 1.6.9.20100416110000 java.lang.RuntimeException at org.aspectj.asm.AsmManager.removeSingleNode(AsmManager.java:1143) at org.aspectj.asm.AsmManager.removeRelationshipsTargettingThisType(AsmManager.java:798) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1173) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.weaveQueuedEntries(AjPipeliningCompilerAdapter.java:455) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter. ... for handle =xstm/stm<com.argilsoft.xstm.core{TKeyed.java[TKeyed[Visitor?field-set(java.util.ArrayList com.argilsoft.xstm.core.Visitor._continueStack) Reproducible: Sometimes Steps to Reproduce: Random exception popup in Eclipse,2010-04-22 12:18:39,728ecb8,['asm/src/org/aspectj/asm/728ecb8 AsmManager.java']
310704,Bug 310704 Bug in ProgramElement.getCorrespondingType(),"""Here is the code for the method: public String getCorrespondingType(boolean getFullyQualifiedType) { String returnType = (String) kvpairs.get(""""returnType""""); if (returnType == null) returnType = """"""""; if (getFullyQualifiedType) { return returnType; } int index = returnType.lastIndexOf("""".""""); if (index != -1) { return returnType.substring(index); } return returnType; } the line: return returnType.substring(index); should be using 'index+1'""",2010-04-27 15:59:36,a502da8,['asm/src/org/aspectj/asm/internal/a502da8 ProgramElement.java']
311910,Bug 311910 AspectJ internal Compiler Error,Stack Trace: java.lang.NullPointerException at org.aspectj.weaver.model.AsmRelationshipProvider.createSourceLocation(AsmRelationshipProvider.java:303) at org.aspectj.weaver.model.AsmRelationshipProvider.addPointcuts(AsmRelationshipProvider.java:580) at org.aspectj.weaver.model.AsmRelationshipProvider.createHierarchyForBinaryAspect(AsmRelationshipProvider.java:562) at org.aspectj.weaver.model.AsmRelationshipProvider.addAdvisedRelationship(AsmRelations ... ARETURN end public Object run(Object[]) end public class com.cerner.isis.biz.services.asclepius.patient.PatientManagerImplTest$AjcClosure3 Happening when weaving a jar with a aspect jar.,2010-05-06 11:22:11,3be69a2,['weaver/src/org/aspectj/weaver/model/3be69a2 AsmRelationshipProvider.java']
314130,"""Bug 314130 [plan] [ltw] [hcr] LTW, Reweaving and Hot Code Replace changes reflected every two saves of files""",,2010-05-24 11:53:33,cf0ee0c,"['weaver/src/org/aspectj/weaver/bcel/cf0ee0c BcelObjectType.java', 'weaver/src/org/aspectj/weaver/bcel/cf0ee0c BcelWorld.java', 'weaver/src/org/aspectj/weaver/tools/cf0ee0c WeavingAdaptor.java']"
314365,Bug 314365 pointcut rewriter can have issues for large hashcode values,"""AJDT uses a pointcut like this: (persingleton(org.eclipse.ajdt.internal.ui.ras.UIFFDC) && ((handler(java.lang.Throwable+) && args(arg1)) && ((within(org.eclipse.ajdt..*) && (!within(org.eclipse.ajdt.internal.ui.lazystart..*) && (!within(org.eclipse.ajdt.internal.ui.dialogs.OpenTypeSelectionDialog2) && !(within(org.eclipse.ajdt.internal.ui.editor.AspectJBreakpointRulerAction) && handler(org.eclipse.jface.text.BadLocationException))))) && (!(within(org.eclipse.ajdt.core.ras.FFDC+) || handler(org.eclipse.core.runtime.OperationCanceledException)) && !this(java.lang.Object))))) After the pointcut rewriter has chewed on it, it is reduced to a normal form. This is meant to be a stable form such that further rewrites of it would not change it. This turned out not to be the case. The hashcodes for some of the components were quite large and manifested as negative integers. The arithmetic in the comparator for the elements would have a problem and give unhelpful responses. For example, if the elements were C,B,A it might rewrite them to A,B,C but on a subsequent rewrite it would realise that C was less than A, giving B,C,A. Whether it went wrong was dependent on the order in which the elements were collected by the rewriter. This is now fixed. It impacts incremental compilation sometimes as two pointcuts that should be identical look different because one has been through the rewritter more times than the other...""",2010-05-25 17:32:47,1e28b92,"['org.aspectj.matcher/src/org/aspectj/weaver/patterns/1e28b92 PointcutEvaluationExpenseComparator.java', 'org.aspectj.matcher/testsrc/org/aspectj/weaver/patterns/1e28b92 PointcutRewriterTest.java']"
314766,Bug 314766 NPE when using aop.xml for compile time config,Reported on the list: java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelWorld.isAspectIncluded(BcelWorld.java:942) at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:80) at org.aspectj.weaver.Advice.match(Advice.java:106) at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3108) at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2562),2010-05-27 15:47:56,0e5ecd3,['org.aspectj.matcher/src/org/aspectj/weaver/0e5ecd3 Advice.java']
317139,Bug 317139 NullPointerException during weaving,,2010-06-17 01:50:24,92a52a2,['weaver/src/org/aspectj/weaver/bcel/92a52a2 BcelObjectType.java']
317743,Bug 317743 import handling and type lookup issues,Raised by Peter Melnikov on the mailing list. Two problems: 1) the binding scope being used for annotation style aspects accumulates lots of duplicate import prefixes in the SimpleScope object. 2) SimpleScope.lookupType tries the prefixes even if the type is already fully qualified. The combination of these issues causes a terrible mess. Lots of class lookup failures. Since the type cannot be 'partially qualified' it is silly to use the prefixes if the type is fully qualified.,2010-06-23 15:28:27,767bb85,"['org.aspectj.matcher/src/org/aspectj/weaver/767bb85 BindingScope.java', 'org.aspectj.matcher/src/org/aspectj/weaver/patterns/767bb85 IScope.java', 'org.aspectj.matcher/src/org/aspectj/weaver/patterns/767bb85 SimpleScope.java', 'org.aspectj.matcher/src/org/aspectj/weaver/patterns/767bb85 WildTypePattern.java', 'org.aspectj.matcher/testsrc/org/aspectj/weaver/patterns/767bb85 PatternsTests.java', 'org.aspectj.matcher/testsrc/org/aspectj/weaver/patterns/767bb85 SimpleScopeTests.java', 'org.aspectj.matcher/testsrc/org/aspectj/weaver/patterns/767bb85 TypePatternTestCase.java']"
318397,Bug 318397 Caching in EclipseSourceType is too aggressive,"""In fixing a recent Roo related issue (where annotations are resolved too early, before declare parents are done) a cache was introduced into EclipseSourceType (see ensureAnnotationTypesResolved()). The cache needs to be cleared if the set of annotation declarations changes - this can occur even after parsing because declare annotation can change them.""",2010-06-29 20:15:57,fe049ea,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/fe049ea EclipseSourceType.java']
318878,Bug 318878 Pertarget aspect instantiation is not thread-safe,"""The way in which pertarget aspects compiled with ajc check if a given target already has an aspect is not thread safe. When two different threads trigger an advice on a target object for the first time at the same time, sometimes the aspect for that target gets created twice. The following code demonstrates the problem: The following pertarget aspect will add itself to a (synchronized) set in another class in it's constructor. aspect Pertarget pertarget(execution(void foo())) { public Pertarget() { Main.aspects.add(this); // Add this instance to the set in Main } before(): execution(void foo()) {} // Empty advice to trigger creation } This class creates 10000 target objects and has two separate threads call a method (that causes the aspect to be instantiated) on each object. The aspects add themselves to the """"aspects"""" set and this set's size is printed when all threads have finished. import java.util.Collections; import java.util.IdentityHashMap; import java.util.Set; public class Main { public static Set aspects = Collections.synchronizedSet( Collections.newSetFromMap(new IdentityHashMap())); public static void main(String[] args) throws InterruptedException { for (int i = 0; i < 10000; ++i) { final Main m = new Main(); // Create a new target for the aspect Runnable r = new Runnable() { public void run() { m.foo(); } // This will trigger the advice }; Thread t1 = new Thread(r); Thread t2 = new Thread(r); t1.start(); t2.start(); t1.join(); t2.join(); } System.out.println(aspects.size()); // Should be 10000 } private void foo() {} } When compiled with ajc and run, the main method prints values over 10000 (something like 10030-10060 typically), which means that some target objects get multiple aspect instances. In my own application I sometimes also saw some threads accessing partially built aspect instances. This was quite rare however and I wasn't able to make a test case for it. The ajc version (the current stable) used was: AspectJ Compiler 1.6.8 (1.6.8 - Built: Friday Jan 8, 2010 at 21:53:37 GMT) - Eclipse Compiler 0.785_R33x, 3.3 The sun vm version was: Java(TM) SE Runtime Environment (build 1.6.0_20-b02) Java HotSpot(TM) 64-Bit Server VM (build 16.3-b01, mixed mode) I investigated the source of this problem: the ajc compiler generates the following (decompiled) method into the aspect class: public static void ajc$perObjectBind(Object obj) { if((obj instanceof ajcMightHaveAspect) && ((ajcMightHaveAspect)obj).perObjectGet() == null) ((ajcMightHaveAspect)obj).perObjectSet(new Pertarget()); } , which obviously is not thread safe.""",2010-07-05 07:23:40,be5a530,['org.aspectj.matcher/src/org/aspectj/weaver/be5a530 AjcMemberMaker.java']
318899,Bug 318899 NPE with @args matching Argument by Type,,2010-07-05 10:24:03,2a8d684,"['org.aspectj.matcher/src/org/aspectj/weaver/reflect/2a8d684 ShadowMatchImpl.java', 'org.aspectj.matcher/testsrc/org/aspectj/weaver/patterns/2a8d684 ThisOrTargetTestCase.java']"
320468,Bug 320468 ModifiersPattern.getModifierFlag() is not thread safe,"""Build Identifier: org.aspectj.weaver_1.6.0.20080423100000.jar ModifiersPattern.getModifierFlag() is a non-synchronized static method using the static Map modifierFlags. This can lead to a ConcurrentModificationException when this code is executed in a multi-threaded environment. A stack trace showing the erroneous behavior is appended at the end of this bug report. In our case multithreading is introduced by using Spring DM. This leads to many application contexts being initialized in parallel. Each of them can contain pointcut expression, which are processed in independent threads. Spring AOP enters the """"AspectJ world"""" calling PointcutParser.parsePointcutExpression(). Since there is no guarantee that a ConcurrentModificationException is thrown it is also possible that concurrent read/write accesses to the modifierFlags map are not recognized and incorrect values are used. org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactoryProxy': Post-processing of the FactoryBean's object failed; nested exception is java.util.ConcurrentModificationException: concurrent access to HashMap attempted by Thread[SpringOsgiExtenderThread-43,5,spring-osgi-extender[6dee6dee]-threads] at org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1.run(FactoryBeanRegistrySupport.java:142) at java.security.AccessController.doPrivileged(AccessController.java:219) at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:116) at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:91) at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1288) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:217) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:425) at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728) at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.access$1600(AbstractDelegatedExecutionApplicationContext.java:69) at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$4.run(AbstractDelegatedExecutionApplicationContext.java:355) at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85) at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.completeRefresh(AbstractDelegatedExecutionApplicationContext.java:320) at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor$CompleteRefreshTask.run(DependencyWaiterApplicationContextExecutor.java:136) at java.lang.Thread.run(Thread.java:811) Caused by: java.util.ConcurrentModificationException: concurrent access to HashMap attempted by Thread[SpringOsgiExtenderThread-43,5,spring-osgi-extender[6dee6dee]-threads] at java.util.HashMap.onEntry(HashMap.java:214) at java.util.HashMap.transfer(HashMap.java:686) at java.util.HashMap.resize(HashMap.java:676) at java.util.HashMap.addEntry(HashMap.java:1049) at java.util.HashMap.put(HashMap.java:561) at org.aspectj.weaver.patterns.ModifiersPattern.getModifierFlag(ModifiersPattern.java:87) at org.aspectj.weaver.patterns.PatternParser.parseModifiersPattern(PatternParser.java:1169) at org.aspectj.weaver.patterns.PatternParser.parseMethodOrConstructorSignaturePattern(PatternParser.java:1248) at org.aspectj.weaver.patterns.PatternParser.parseKindedPointcut(PatternParser.java:603) at org.aspectj.weaver.patterns.PatternParser.parseSinglePointcut(PatternParser.java:317) at org.aspectj.weaver.patterns.PatternParser.parseAtomicPointcut(PatternParser.java:295) at org.aspectj.weaver.patterns.PatternParser.parsePointcut(PatternParser.java:256) at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:328) at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:309) at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:206) at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:193) at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:174) at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:195) at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:250) at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:284) at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:113) at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:85) at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:66) at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:362) at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:325) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:361) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1429) at org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1.run(FactoryBeanRegistrySupport.java:139) ... 15 more Reproducible: Sometimes""",2010-07-21 04:22:43,e0e1330,['org.aspectj.matcher/src/org/aspectj/weaver/patterns/e0e1330 ModifiersPattern.java']
321641,Bug 321641 No way to exclude Proxool classes although excluded from AOP. Causing Veryfy error.,"""Build Identifier: 20100218-1602 For aspectJ 1.6.7 the setup works, however exactly the same setup but changing the aspectJ version to 1.6.8 or 1.6.9 derive to the same error: a piece of code excluded from the aop.xml is woven causing a Verify Error. We are using Proxool, proxy setup which in fact uses CGLIB to create a EnhancerProxy class. In order to avoid VerifyError exceptions the Proxool classes are excluded from aop.xml exactly in the same way the CGLIB workarround is commented in the aspectJ FAQ: <exclude within=""""*..*Proxool*""""/> This is the error we got when we upgrade our 1.6.7 aspejctweaver.jar to 1.6.8. The same is got when using 1.6.9: jvm 3 | 2010/08/03 16:42:53 | java.lang.VerifyError: (class: oracle/jdbc/internal/OracleConnection$$EnhancerByProxool$$7f6320a8, method: getTdoCState signature: (Ljava/lang/String;Ljava/lang/String;)J) Inconsistent stack height 1 != 0 jvm 3 | 2010/08/03 16:42:53 | at java.lang.Class.getDeclaredMethods0(Native Method) jvm 3 | 2010/08/03 16:42:53 | at java.lang.Class.privateGetDeclaredMethods(Class.java:2427) jvm 3 | 2010/08/03 16:42:53 | at java.lang.Class.getDeclaredMethod(Class.java:1935) jvm 3 | 2010/08/03 16:42:53 | at org.logicalcobwebs.cglib.proxy.Enhancer.getCallbacksSetter(Enhancer.java:627) jvm 3 | 2010/08/03 16:42:53 | at org.logicalcobwebs.cglib.proxy.Enhancer.setCallbacksHelper(Enhancer.java:615) jvm 3 | 2010/08/03 16:42:53 | at org.logicalcobwebs.cglib.proxy.Enhancer.setThreadCallbacks(Enhancer.java:609) jvm 3 | 2010/08/03 16:42:53 | at org.logicalcobwebs.cglib.proxy.Enhancer.createUsingReflection(Enhancer.java:631) jvm 3 | 2010/08/03 16:42:53 | at org.logicalcobwebs.cglib.proxy.Enhancer.firstInstance(Enhancer.java:538) jvm 3 | 2010/08/03 16:42:53 | at org.logicalcobwebs.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:225) jvm 3 | 2010/08/03 16:42:53 | at org.logicalcobwebs.cglib.proxy.Enhancer.createHelper(Enhancer.java:377) jvm 3 | 2010/08/03 16:42:53 | at org.logicalcobwebs.cglib.proxy.Enhancer.create(Enhancer.java:285) .... As far as the Verify Error is got while deploying one of the applications that run on the serve we are no able to use the new versions of aspectJ because the application is not properly started up. Thank you very much in advance, Best regards. Reproducible: Always Steps to Reproduce: 1.Exclude Proxool classes from aop.xml using aspectj 1.6.7. It works 2.Upgrade to 1.6.8: it does not work. 3.Upgrade to 1.6.9: it does not work.""",2010-08-03 14:05:08,85fd25d,"['loadtime/src/org/aspectj/weaver/loadtime/85fd25d ClassLoaderWeavingAdaptor.java', 'loadtime/testsrc/org/aspectj/weaver/loadtime/85fd25d ClassLoaderWeavingAdaptorTest.java', 'loadtime/testsrc/testdata/85fd25d MessageService$$EnhancerByCGLIB$$6dd4e683.java']"
322039,Bug 322039 Fully qualified ITD has incorrect handle identifier,"""In the following aspect: public aspect Aspect { public void q2.ThisClass.something2() {} } In aspectJ, the ITD has the following handle identifier (notice that the ITD name is not fully qualified): =AspectJ Project/src2<p*Aspect.aj'Aspect)ThisClass.something2 However, it should be (with fully qualified name): =AspectJ Project/src2<p*Aspect.aj'Aspect)q2.ThisClass.something2 This means that fully qualified ITDs cannot be navigated to or searched. I'm a little surprised that this doesn't work because I thought I had tests for it...""",2010-08-06 19:47:15,6b35ea4,"['tests/multiIncremental/pr322039/base/src/p/6b35ea4 Azpect.java', 'tests/multiIncremental/pr322039/base/src/q2/6b35ea4 Code.java', 'tests/src/org/aspectj/systemtest/incremental/tools/6b35ea4 MultiProjectIncrementalTests.java']"
322832,Bug 322832 early field resolution leading to problems for ITDs when declare parents in use,"""I have a type that is being used where a generic is being expected. That generic specifies an upper bound. The type only obeys the upper bound once a declare parents has applied to it. I have an intertype declaration (a field). When the ITD is applied we do some work to see if it clashes with existing fields. This causes existing fields to be resolved. If this resolution triggers a bounds check for the declare parents affected type before the declare parents has applied, a problem will be raised. Basically if the target of the declare is processed before the intertype then we are ok, but that is luck based. We should do the declare parents first (and declare annotation) and then do intertype declarations (since they may trigger this extra resolution).""",2010-08-16 15:33:00,16adee6,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/16adee6 AjLookupEnvironment.java']
323417,Bug 323417 Sometimes StackOverflow is got while weaving,Build Identifier: 1.6.10 While weaving LifeRay 6.0.5 over tomcat 6.0.26 sometimes the next exceptions appear: java.lang.StackOverflowError at java.lang.String.indexOf(String.java:1521) at org.aspectj.weaver.TypeFactory.createTypeFromSignature(TypeFactory.java:199) at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:375) at org.aspectj.weaver.UnresolvedType.getRawType(UnresolvedType.java:533) at org.aspectj.weaver.ResolvedType.getRawType(ResolvedType.java:2400) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:430) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:399) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:430) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:399) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:430) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:399) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:430) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:399) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:430) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:399) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:430) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:399) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:430) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:399) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:430) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:399) ... Reproducible: Sometimes,2010-08-23 13:44:19,f631ad6,['org.aspectj.matcher/src/org/aspectj/weaver/f631ad6 World.java']
323634,Bug 323634 NPE parameterizing perclause,java.lang.NullPointerException at org.aspectj.weaver.ReferenceType.getPerClause(ReferenceType.java:823) at org.aspectj.weaver.patterns.PerFromSuper.lookupConcretePerClause(PerFromSuper.java:82) at org.aspectj.weaver.patterns.PerFromSuper.concretize(PerFromSuper.java:61) at org.aspectj.weaver.CrosscuttingMembers.setPerClause(CrosscuttingMembers.java:512) at org.aspectj.weaver.ResolvedType.collectCrosscuttingMembers(ResolvedType.java:748) ... oBuildJob.run(AutoBuildJob.java:242) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54),2010-08-25 12:40:52,ce16a06,['org.aspectj.matcher/src/org/aspectj/weaver/ce16a06 ReferenceType.java']
324135,Bug 324135 ArrayIndexOutOfBoundsException at AjState.java:1767,Build Identifier: 20100617-1415 Using AspectJ version: 1.6.10.20100817163700 I hit the blow exception after saving a edited java file. java.lang.ArrayIndexOutOfBoundsException at org.aspectj.ajdt.internal.core.builder.AjState.hasStructuralChanges(AjState.java:1767) at org.aspectj.ajdt.internal.core.builder.AjState.recordClassFile(AjState.java:1510) at org.aspectj.ajdt.internal.core.builder.AjState.noteResult(AjState.java:1322) at org.aspectj.ajdt.internal.core.builder.AjBuildManager$3.acceptResult(AjBuildManager.java:1049) at org.aspectj.ajdt.internal.compiler.AjPipeli ... b.run(AutoBuildJob.java:242) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54) Compile error: ArrayIndexOutOfBoundsException thrown: 14 Reproducible: Didn't try,2010-08-31 16:50:55,88fab6a,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/88fab6a AjState.java']
324190,Bug 324190 NullPointerException in AjBuildManager.findOutputDirsForAspects when compiling AspectJ project generated with Maven,"""Build Identifier: 20100617-1415 When I compile my AspectJ project, I get an AspectJ Internal Compiler Error. The stack trace is : java.lang.NullPointerException at org.aspectj.ajdt.internal.core.builder.AjBuildManager.findOutputDirsForAspects(AjBuildManager.java:725) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.writeOutxmlFile(AjBuildManager.java:652) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performBuild(AjBuildManager.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:181) at org.aspectj.a ... on$1.run(GlobalBuildAction.java:179) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54) I digged a bit and looked into the classes. It would seem that AjState.getAspectNamesToFileNameMap() can return null in AjBuildManager.findOutputDirsForAspects. It is taken in account when AjBuildConfig.getCompilationResultDestinationManager() returns null or a list with one element, but not when it returns a list with several elements. Reproducible: Always Steps to Reproduce: Always happen in my configuration, but I didn't try to make it happen again in another workspace. Here are the steps I followed. 1. Generate a AspectJ project with Maven using the pom.xml I'll join 2. Create an aspect with a few pointcuts and a few advices 3. Compile (not with maven, the Eclipse compilation)""",2010-09-01 09:15:48,03c43f5,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/03c43f5 AjBuildManager.java']
324804,Bug 324804 NullPointerException at AspectJElementHierarchy.java:677,"""Build Identifier: 20100617-1415 After removing a """"throws"""" clause from the constructor of a class and then saving I got the following error: java.lang.NullPointerException at org.aspectj.asm.internal.AspectJElementHierarchy.getCanonicalFilePath(AspectJElementHierarchy.java:677) at org.aspectj.asm.internal.AspectJElementHierarchy.updateHandleMap(AspectJElementHierarchy.java:641) at org.aspectj.asm.AsmManager.removeStructureModelForFiles(AsmManager.java:572) at org.aspectj.asm.AsmManager.processDelta(AsmManager.java:604) at org.aspectj.ajdt.internal.core.builder.AjBuildManager ... oBuildJob.run(AutoBuildJob.java:242) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54) Compile error: NullPointerException thrown: null Reproducible: Didn't try""",2010-09-08 18:30:31,6249672,['asm/src/org/aspectj/asm/internal/6249672 AspectJElementHierarchy.java']
327134,Bug 327134 Cant suppress raw types warning in a pointcut,"""Build Identifier: I20100608-0911 Generic type used in a pointcut and bound to target() or this() must omit actual type name and thus causes 'raw type must be parametrized' compiler warning. @SuppressAJWarning or @SuppressWarning annotations does not turn it off Reproducible: Always Steps to Reproduce: Code snippets: pointcut IVOListUpdate(IVOList list): && target(list) && call(void updateList(*)); public interface IVOList<T extends IValueObject> extends List<T>, Externalizable, Serializable { void updateList(List<T> newList); } public interface IValueObject extends Comparable<IValueObject>, Serializable { }""",2010-10-06 12:12:17,199299c,"['tests/bugs1612/pr327134/199299c Code.java', 'tests/src/org/aspectj/systemtest/ajc1612/199299c Ajc1612Tests.java']"
336997,Bug 336997 IllegalStateException for generic ITD usage,java.lang.IllegalStateException: Can't answer binding questions prior to resolving at org.aspectj.weaver.TypeVariable.canBeBoundTo(TypeVariable.java:175) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:496) at org.aspectj.weaver.ReferenceType.isAssignableFrom(ReferenceType.java:399) at org.aspectj.weaver.ResolvedType.checkLegalOverride(ResolvedType.java:1999) at org.aspectj.weaver.ResolvedType.clashesWithExistingMember(ResolvedType.java:1843) at org.aspectj.weaver.ResolvedType.addInterTypeMunger(ResolvedType.java:1699) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:795) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:652) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.createBinaryTypeFrom(AjLookupEnvironment.java:1398) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:599) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:276) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:113) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:49) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(BinaryTypeBinding.java:99) at org.aspectj.org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getType(LookupEnvironment.java:971) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.lookupBinding(EclipseFactory.java:749) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeTypeBinding1(EclipseFactory.java:743) at org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.makeTypeBinding(EclipseFactory.java:605) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.addParent(AjLookupEnvironment.java:1314) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.doDeclareParents(AjLookupEnvironment.java:902) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:730) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIntertypes(AjLookupEnvironment.java:418) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:255) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.internalBeginToCompile(Compiler.java:616) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:357) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:371) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:1021) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performBuild(AjBuildManager.java:268) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:181) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) at org.aspectj.tools.ajc.Main.run(Main.java:371) at org.aspectj.tools.ajc.Main.runMain(Main.java:248) at org.codehaus.mojo.aspectj.AbstractAjcCompiler.execute(AbstractAjcCompiler.java:360) at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490) at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694) at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556) at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535) at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387) at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348) at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328) at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138) at org.apache.maven.cli.MavenCli.main(MavenCli.java:362) at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315) at org.codehaus.classworlds.Launcher.launch(Launcher.java:255) at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430) at org.codehaus.classworlds.Launcher.main(Launcher.java:375),2011-02-11 14:01:27,80785bf,"['org.aspectj.matcher/src/org/aspectj/weaver/80785bf TypeVariable.java', 'org.aspectj.matcher/src/org/aspectj/weaver/80785bf TypeVariableReferenceType.java', 'org.aspectj.matcher/src/org/aspectj/weaver/80785bf World.java']"
339300,Bug 339300 problem weaving anonymous inner (member owned) classes in scala library,"""Reported by Ramnivas. Due to the use of numerous $ chars in scala classnames, some of the AspectJ handling of inner classes breaks down. It should be possible to correctly use the available class attributes rather than mess around with attributes. A while back one use did contribute a change to enable scala weaving which tried to use the InnerClasses attribute before falling back on string chopping. However we have now hit another case. In the scenario we are dealing with the class scala.Predef$$anon$3 in the scala library (a 2.9.0-SNAPSHOT version). What we normally do here is in that type we discover the InnerClass attribute and refer to the outerclass index it holds. Unfortunately, due to it being an anonymous inner inside a method, the index is 0. So we fail to process the attribute and with string chopping come up with a stupid guessed name for the outer. The solution is to use the EnclosingMethod attribute in these situations. The EnclosingMethod attribute is an optional attribute. A class must have an EnclosingMethod attribute if and only if it is a local class or an anonymous class. A class may have no more than one EnclosingMethod attribute. The EnclosingMethod attribute includes a pointer to the containing outerclass (that had the method in which encloses this inner type).""",2011-03-08 18:49:10,945402f,['weaver/src/org/aspectj/weaver/bcel/945402f BcelObjectType.java']
339974,Bug 339974 NPE when accessing static class inside of an ITIT,"""This code: public class City { private String name; private Country country; } And separate file: public aspect TrafficCalculator { public static class City.TrafficCalculator { Function<City, Time> EXTREME = createExtremeTraffic(); Function<City, Time> BASIC = createBasicTraffic(); } private static Function<City, Time> createExtremeTraffic() { return null; } private static Function<City, Time> createBasicTraffic() { return null; } public static class Time { } } Try full build and the following exception: java.lang.NullPointerException at org.aspectj.ajdt.internal.compiler.ast.IntertypeMemberClassDeclaration.resolveOnType(IntertypeMemberClassDeclaration.java:238) at org.aspectj.ajdt.internal.compiler.ast.IntertypeMemberClassDeclaration.build(IntertypeMemberClassDeclaration.java:246) at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.processIntertypeMemberTypes(AspectDeclaration.java:1039) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.processInterTypeMemberTypes(AjLookupEnvironment.java:523) at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:197) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.internalBeginToCompile(Compiler.java:616) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:357) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:371) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:1021) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performBuild(AjBuildManager.java:305) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:185) at org.aspectj.ajde.core.internal.AjdeCoreBuildManager.performBuild(AjdeCoreBuildManager.java:127) at org.aspectj.ajde.core.AjCompiler.build(AjCompiler.java:91) at org.eclipse.ajdt.core.builder.AJBuilder.build(AJBuilder.java:257) at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:629) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:172) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:203) at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:255) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:258) at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:311) at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:343) at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:144) at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:242) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)""",2011-03-15 00:21:25,249f832,"['tests/bugs1612/pr339974/249f832 City.java', 'tests/bugs1612/pr339974/249f832 TrafficCalculator.java', 'tests/bugs1612/pr342605/249f832 Code.java', 'tests/src/org/aspectj/systemtest/ajc1612/249f832 Ajc1612Tests.java']"
340323,Bug 340323 NPE when weaving java.lang.Object at org.aspectj.weaver.bcel.BcelTypeMunger.createAnyBridgeMethodsForCovariance(BcelTypeMunger.java:1251),,2011-03-17 10:34:56,a8e6797,['weaver/src/org/aspectj/weaver/bcel/a8e6797 BcelTypeMunger.java']
340806,Bug 340806 Race condition in JavaLangTypeToResolvedTypeConverter (potentially exposed through Spring AOP),,2011-03-23 16:35:10,167b801,['weaver5/java5-src/org/aspectj/weaver/reflect/167b801 JavaLangTypeToResolvedTypeConverter.java']
341446,Bug 341446 java.lang.UnsupportedClassVersionError when running Java 1.5,,2011-03-31 02:20:53,293a075,"['org.aspectj.matcher/testdata/293a075 AnnotatedClass.java', 'org.aspectj.matcher/testdata/293a075 MethodLevelAnnotation.java', 'org.aspectj.matcher/testdata/293a075 SomeAnnotation.java', 'org.aspectj.matcher/testsrc/org/aspectj/matcher/tools/293a075 CommonAdvancedPointcutExpressionTests.java', 'org.aspectj.matcher/testsrc/testdata/293a075 AnnotatedClass.java', 'org.aspectj.matcher/testsrc/testdata/293a075 MethodLevelAnnotation.java', 'org.aspectj.matcher/testsrc/testdata/293a075 SomeAnnotation.java']"
348488,"""Bug 348488 """"register definition failed"""" with NullPointerException""",,2011-06-06 21:12:28,95e70d2,['weaver/src/org/aspectj/weaver/bcel/95e70d2 AtAjAttributes.java']
348979,Bug 348979 world type map fixed/expendable problems,Discovered whilst working with Steve Ash on a build of a few projects that was consuming more than 2Gigs of heap. To recover memory Steve activated type demotion. This didn't appear to help much. This was due to Steve's projects using aspectpath. The aspectpath scanning to discover aspects was inadvertently making any types discovered on the aspectpath permanent types (not expendable) and they'd never be demoted/evicted. The types were all being made permanent in case they were an aspect but never being demoted if it turns out they were not. In a Roo petclinic I added spel as a dependency (on the aspectpath) and parsed a simple expression (just to further exaggerate the problem). This was leaving 213 types in the fixed area of the typemap. By correctly scanning aspectpath and demoting non-aspects this was reduced to 90.,2011-06-09 18:59:37,2edb246,"['tests/multiIncremental/PR278496_10/base/com/2edb246 Asp.java', 'tests/multiIncremental/PR278496_10/base/com/2edb246 Foo.java', 'tests/multiIncremental/PR278496_11/base/com/2edb246 Foo.java', 'tests/multiIncremental/PR278496_11_a/base/com/2edb246 Asp.java', 'tests/multiIncremental/PR278496_11_a/base/com/2edb246 Dibble.java']"
349636,"""Bug 349636 AspectJ reports """"abort trouble"""" while instrumenting a class on startup""",Build Identifier: 20110218-0911 java.lang.NullPointerException at org.aspectj.weaver.bcel.Utility.appendConversion(Utility.java:272) at org.aspectj.weaver.bcel.BcelVar.appendConvertableArrayLoad(BcelVar.java:81) at org.aspectj.weaver.bcel.BcelVar.createConvertableArrayLoad(BcelVar.java:101) at org.aspectj.weaver.bcel.BcelShadow.makeClosureClassAndReturnConstructor(BcelShadow.java:3066) at org.aspectj.weaver.bcel.BcelShadow.weaveAroundClosure(BcelShadow.java:2830) at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:342) at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:630) at org.aspectj.weaver.Shadow.implement(Shadow.java:544) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:3147) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:490) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318) at org.eclipse.equinox.weaving.aspectj.loadtime.OSGiWeavingAdaptor.weaveClass(Unknown Source) at org.eclipse.equinox.weaving.aspectj.AspectJWeavingService.preProcess(Unknown Source) at org.eclipse.equinox.weaving.adaptors.WeavingAdaptor.weaveClass(Unknown Source) at org.eclipse.equinox.weaving.hooks.WeavingHook.processClass(Unknown Source) at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.defineClass(ClasspathManager.java:575) at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findClassImpl(ClasspathManager.java:550) at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClassImpl(ClasspathManager.java:481) at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass_LockClassLoader(ClasspathManager.java:469) at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:449) at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216) at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:393) at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:469) at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:422) at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:410) at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107) at java.lang.ClassLoader.loadClass(ClassLoader.java:247) at org.eclipse.osgi.internal.loader.BundleLoader.loadClass(BundleLoader.java:338) at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:232) at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1197) at org.springframework.osgi.util.BundleDelegatingClassLoader.findClass(BundleDelegatingClassLoader.java:99) at org.springframework.osgi.util.BundleDelegatingClassLoader.loadClass(BundleDelegatingClassLoader.java:157) at java.lang.ClassLoader.loadClass(ClassLoader.java:247) at org.springframework.util.ClassUtils.forName(ClassUtils.java:257) at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:408) at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1271) at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1242) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:576) at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1319) at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:315) at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.invokeBeanFactoryPostProcessors(AbstractDelegatedExecutionApplicationContext.java:391) at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.invokeBeanFactoryPostProcessors(AbstractDelegatedExecutionApplicationContext.java:364) at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$3.run(AbstractDelegatedExecutionApplicationContext.java:256) at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:87) at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.startRefresh(AbstractDelegatedExecutionApplicationContext.java:222) at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.stageOne(DependencyWaiterApplicationContextExecutor.java:225) at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.refresh(DependencyWaiterApplicationContextExecutor.java:178) at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.refresh(AbstractDelegatedExecutionApplicationContext.java:159) at org.springframework.osgi.extender.internal.activator.LifecycleManager$1.run(LifecycleManager.java:223) at java.lang.Thread.run(Thread.java:662) Reproducible: Sometimes,2011-06-16 20:13:48,f7b1193,['weaver/src/org/aspectj/weaver/bcel/f7b1193 Utility.java']
349764,Bug 349764 Repeated output of ASPECTJ: aspectj.overweaving=true: overweaving switched ON,Build Identifier: 1.6.11 The message is repeated every time a new class loader is being use to load weaving configuration (using -Dorg.aspectj.tracing.factory=default). Since this value is a system (!) property there is no need to display its value more than once (or even check it more than once - it could be lazily initialized and cached...) Reproducible: Always Steps to Reproduce: 1. use -Dorg.aspectj.tracing.factory=default -Daspectj.overweaving=true properties 2. place some JAR that contains aop.xml with some aspects and weaving options where it can be loaded/visible from several class loaders 3. runt the application and check the STDOUT output,2011-06-19 05:42:40,bb2aea4,['org.aspectj.matcher/src/org/aspectj/weaver/bb2aea4 World.java']
350855,Bug 350855 overweaving misbehaving when subclassing WeavingURLClassLoader,"""Raised by the Spring Insight team, they observed that in a system where they are using a special classloader (subclassing weaving url classloader) they see it fail to weave an aspect if overweaving is on.""",2011-06-30 11:32:19,2302e94,['weaver/src/org/aspectj/weaver/bcel/2302e94 BcelWeaver.java']
352389,"""Bug 352389 overweaving can attribute duplicate attributes, one of which will not deserialize correctly""","""When overweaving it is possible that a class will get a second WeaverState attribute. This second one will not be valid (it hasn't been correctly configured). This isn't normally a problem because the next thing that happens is that the class is defined to the VM. But if *another* weave step occurs, the malformed attribute will cause that weave to fail with this kind of message: bad WeaverState.Kind: -115 The solution is to avoid adding the duplicate when overweaving.""",2011-07-18 16:08:47,8553b30,['weaver/src/org/aspectj/weaver/bcel/8553b30 LazyClassGen.java']
353100,"""Bug 353100 Need to demote """"warning ignoring duplicate definition"""" from warning to debug""","""Build Identifier: 1.6.11 This kind of problem can occur for complex class loader hierarchies, and since it is not really a problem, we should make it debug level message so as not to write log messages un-necessarily. Reproducible: Always Steps to Reproduce: 1. Create an application that has some weaved class loaders hierarchy - recommend some URLClassLoader derived ones 2. Add the same(!) JAR with only an aop.xml file to more than one loader along the hierarchy 3. Make the loader the default context thread loader and start running some code.""",2011-07-26 08:47:48,c6fb752,['loadtime/src/org/aspectj/weaver/loadtime/c6fb752 ClassLoaderWeavingAdaptor.java']
353349,Bug 353349 NPE in deleteNewAndDup,java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelShadow.deleteNewAndDup(BcelShadow.java:179) at org.aspectj.weaver.bcel.BcelShadow.prepareForMungers(BcelShadow.java:303) at org.aspectj.weaver.Shadow.implement(Shadow.java:543) at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:3147) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:490) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180) at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467) at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318) at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:96),2011-07-28 13:52:00,e8ef5bf,['weaver/src/org/aspectj/weaver/bcel/e8ef5bf BcelShadow.java']
353457,Bug 353457 NPE when saving an aspect - Aspectj Internal Compiler Error,,2011-07-30 17:23:36,0f506ab,['org.aspectj.matcher/src/org/aspectj/weaver/0f506ab ShadowMunger.java']
354022,Bug 354022 constructor inlining can fail for some groovy built code,"""The file grails.util.BuildSettings contains bytecode where the constructors are recursive. You can't compile this in Java A() { this(); } but groovy generates some code where it switches on a value in the ctor and if it is a certain value, the recursive ctor call is made. I imagine this 'never happens' in practice but because it is in the bytecode it trips up the AspectJ code which inlines this() calls before weaving - since it gets into an infinite loop. For now, just keep track of ctors making the recursive call and so don't get trapped in the infinite loop.""",2011-08-05 12:17:24,6ae463a,['weaver/src/org/aspectj/weaver/bcel/6ae463a BcelClassWeaver.java']
354947,Bug 354947 Nullpointer-Exception while parsing definition file (aop.xml) in DocumentParser,"""Build Identifier: 20100617-1415 With an activated NullpointerException-Breakpoint i recently stumpled upon a thrown NPE in the DocumentParser.parse()-method (Line 106): public static Definition parse(final URL url) throws Exception { InputStream in = null; try { if (CACHE && parsedFiles.containsKey(url.toString())) { return parsedFiles.get(url.toString()); } Definition def=null; if(LIGHTPARSER){ def = SimpleAOPParser.parse(url); }else{ def = saxParsing(url); } if (CACHE && def.getAspectClassNames().size() > 0) { parsedFiles.put(url.toString(), def); } return def; } finally { try { in.close(); } catch (Throwable t) { } } } ... The parsing of the configuration file works fine, merely the InputStream seems not to be used anymore. Reproducible: Always""",2011-08-17 09:28:42,e71e287,['weaver/src/org/aspectj/weaver/loadtime/definition/e71e287 DocumentParser.java']
359332,Bug 359332 NPE in AjBuildManager.java:528 after non-Java/AJ file was renamed,"""Build Identifier: Upon using Eclipse's """"Rename Resource"""" dialog to rename my project's """"src/main/resources/META-INF/spring/email.properties"""" file to """"scheduler.properties"""" in the same directory, Eclipse displayed the """"AspectJ Internal Compiler Error"""" dialog with this stack trace: java.io.FileNotFoundException at java.io.FileInputStream.open(Native Method) at java.io.FileInputStream.<init>(FileInputStream.java:120) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.copyResourcesFromFile(AjBuildManager.java:528) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.copyResourcesToDestination(AjBuildManager.java:466) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performBuild(AjBuildManager.java:363) ... e error: FileNotFoundException thrown: /Users/aswan/projects/foo/src/main/resources/META-INF/spring/email.properties (No such file or directory) Reproducible: Couldn't Reproduce Steps to Reproduce: N/A""",2011-09-29 00:22:08,14a6eac,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/14a6eac AjBuildManager.java']
362956,Bug 362956 neo4j NPE,java.lang.NullPointerException at org.aspectj.weaver.patterns.ExactAnnotationTypePattern.matches(ExactAnnotationTypePattern.java:128) at org.aspectj.weaver.patterns.ExactAnnotationTypePattern.matches(ExactAnnotationTypePattern.java:96) at org.aspectj.weaver.patterns.AndAnnotationTypePattern.matches(AndAnnotationTypePattern.java:42) at org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern.matchesExactly(AnyWithAnnotationTypePattern.java:55) at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:132) at org.aspectj.weaver.patterns.TypePattern.matches(TypePattern.java:146) at org.aspectj.weaver.patterns.SignaturePattern.couldEverMatch(SignaturePattern.java:999) at org.aspectj.weaver.patterns.DeclareAnnotation.couldEverMatch(DeclareAnnotation.java:483) at org.aspectj.weaver.bcel.BcelClassWeaver.getMatchingSubset(BcelClassWeaver.java:1065) at org.aspectj.weaver.bcel.BcelClassWeaver.weaveDeclareAtField(BcelClassWeaver.java:1301) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:445) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687) at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631) at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.weaveQueuedEntries(AjPipeliningCompilerAdapter.java:514) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.queueForWeaving(AjPipeliningCompilerAdapter.java:447) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.afterProcessing(AjPipeliningCompilerAdapter.java:432) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$after$org_aspectj_ajdt_internal_compiler_CompilerAdapter$5$6b855184(CompilerAdapter.aj:98) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:652) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:392) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:1021) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performBuild(AjBuildManager.java:268) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:181) at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112) at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60) at org.aspectj.tools.ajc.Main.run(Main.java:371),2011-11-04 20:33:16,942da06,['org.aspectj.matcher/src/org/aspectj/weaver/942da06 ReferenceType.java']
368046,Bug 368046 configure a set of classloader for which weavers should not be created in an LTW scenario,"""Prototyped and tested for JspClassLoaders (see the thread 'aspectj and jsp load' on the mailing list). That was done through a system property but it would be easier via aop.xml. However, this would be the first time we have an aop.xml setting that affects global operation of loadtime weaving. When any classloader actually got far enough to load the aop.xmls it would discover this setting and from that point on it would be set. In our JspClassLoader case this would mean that either some non-JspClassLoader is run early enough to discover this setting and turn it off for all JspClassLoaders or the first JspClassLoader will discover the setting and turn it off for all other JspClassLoaders. I think we can live with that mode of operation.""",2012-01-06 12:05:35,0c0adc5,"['loadtime/src/org/aspectj/weaver/loadtime/0c0adc5 Aj.java', 'loadtime/src/org/aspectj/weaver/loadtime/0c0adc5 ClassLoaderWeavingAdaptor.java', 'loadtime/src/org/aspectj/weaver/loadtime/0c0adc5 Options.java', 'tests/bugs174/pr368046/0c0adc5 Azpect.java', 'tests/bugs174/pr368046/0c0adc5 Code.java', 'tests/src/org/aspectj/systemtest/ajc174/0c0adc5 Ajc174Tests.java']"
371684,Bug 371684 type construction for signature makes mistakes with wildcards,"""If you have a type with multiple type params, like this: Foo<?,T> the signature is: LFoo<*TT;>; and the handling of * is not working in TypeFactory. If that signature is passed in it will actually build: Foo<?> having lost the second type parameter, this breaks code later that has expectations on the number of params. (e.g. ArrayIndexOutOfBoundsException when building parameterization map)""",2012-02-15 17:16:16,89756cd,"['org.aspectj.matcher/src/org/aspectj/weaver/89756cd TypeFactory.java', 'tests/src/org/aspectj/systemtest/ajc170/89756cd Ajc170Tests.java']"
371998,"""Bug 371998 org.aspectj.weaver.BCException compiling @DeclareParents with value using """"||""""""","""Build Identifier: 20110916-0149 Using: import org.aspectj.lang.annotation.Aspect; import org.aspectj.lang.annotation.DeclareParents; @Aspect public class AspectTest { private interface X {} private static class XImpl {} @DeclareParents(value=""""java.lang.Runnable || java.util.concurrent.Callable"""", defaultImpl=XImpl.class) private X xImpl; } Throws: org.aspectj.weaver.BCException at org.aspectj.weaver.patterns.ExactTypePattern.resolveBindings(ExactTypePattern.java:312) at org.aspectj.weaver.patterns.OrTypePattern.resolveBindings(OrTypePattern.java:121) at org.aspectj.weaver.bcel.AtAjAttributes.handleDeclareParentsAnnotation(AtAjAttributes.java:746) at org.aspectj.weaver.bcel.AtAjAttributes.readAj5ClassAttributes(AtAjAttributes.java:384) at org.aspectj.weaver.bcel.BcelObjectType.ens ... \Program Files\Java\jre6\lib\ext\sunjce_provider.jar;C:\Users\xxx\software\eclipse-j2ee\\plugins/org.eclipse.equinox.launcher_1.2.0.v20110502.jar; Current workaround is to use multiple DeclareParents annotations on different variables. Reproducible: Always Steps to Reproduce: 1. Create new class given the code in the details. 2. Save and compile in Eclipse.""",2012-02-19 15:42:42,f37c56e,"['tests/bugs170/pr371998/f37c56e AspectTest.java', 'tests/src/org/aspectj/systemtest/ajc170/f37c56e Ajc170Tests.java', 'weaver/src/org/aspectj/weaver/bcel/f37c56e AtAjAttributes.java']"
373195,Bug 373195 Memory leak in CompilationAndWeavingContext leading to PermGen OOME,"""Build Identifier: 1.6.11 The static contextMap in CompilationAndWeavingContext keeps strong references to Thread instances (which in turn strongly reference their contextClassLoader which prevents all kinds of stuff from unloading). In my particular use case I am running unit tests, each in their own WeavingURLClassLoader, but these ClassLoaders are never released, and running several unit tests at once leads to PermGen OutOfMemoryError. Using -XX:+HeapDumpOnOutOfMemory and analyzing the resulting heap dump in Eclipse Memory Analyzer points to CompilationAndWeavingContext.contextMap. I am able to work around this issue by executing the following at the end of each unit test to clear out this contextMap: CompilationAndWeavingContext.setMultiThreaded(false); CompilationAndWeavingContext.reset(); CompilationAndWeavingContext.setMultiThreaded(true); I am also able to resolve this issue (more satisfactorily) by patching CompilationAndWeavingContext and changing contextMap into a ThreadLocal. Reproducible: Always""",2012-03-04 01:25:51,6defb4e,['bridge/src/org/aspectj/bridge/context/6defb4e CompilationAndWeavingContext.java']
374745,Bug 374745 Performance regression in 1.6.12,,2012-03-20 07:19:52,549d227,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/549d227 EclipseFactory.java', 'org.aspectj.matcher/src/org/aspectj/weaver/549d227 ReferenceType.java', 'org.aspectj.matcher/src/org/aspectj/weaver/549d227 ResolvedType.java', 'org.aspectj.matcher/src/org/aspectj/weaver/549d227 TypeFactory.java', 'org.aspectj.matcher/src/org/aspectj/weaver/549d227 TypeVariableReferenceType.java', 'org.aspectj.matcher/src/org/aspectj/weaver/549d227 UnresolvedType.java', 'org.aspectj.matcher/src/org/aspectj/weaver/549d227 UnresolvedTypeVariableReferenceType.java', 'org.aspectj.matcher/src/org/aspectj/weaver/549d227 World.java']"
374964,Bug 374964 Performance - improve pointcut expensiveness calculation,"""Build Identifier: 1.6.12 I'm able to reduce the AspectJ LTW startup overhead on the app I'm working on, from 95 seconds down to 47 seconds, just by switching the """"expensiveness"""" of THIS_OR_TARGET and CALL in PointcutEvaluationExpenseComparator. It seems to make sense to me that THIS_OR_TARGET is more expensive since it requires type matching (under profiler ExactTypePattern.matchesInstanceof() is what shows up as very expensive), whereas CALL can evaluate very quickly in most cases since it just fails to match on method name. I'm not sure if this is specific to my particular usage, but cutting 50% of the LTW startup is a very nice improvement. If you think this change doesn't make sense for everyone, I can work on a patch that makes this configurable somehow. Thanks. Reproducible: Always""",2012-03-21 14:02:09,f85631f,"['org.aspectj.matcher/src/org/aspectj/weaver/patterns/f85631f PointcutEvaluationExpenseComparator.java', 'tests/src/org/aspectj/systemtest/ajc170/f85631f Ajc170Tests.java']"
376139,Bug 376139 AspectJ throws Nullpointer after its IDE plugin update,Build Identifier: Version: Indigo Service Release 2 Build id: 20120216-1857 java.lang.NullPointerException at org.aspectj.org.eclipse.jdt.internal.compiler.ast.SwitchStatement.analyseCode(SwitchStatement.java:118) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(MethodDeclaration.java:104) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:730) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseC ... oBuildJob.run(AutoBuildJob.java:241) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54) Compile error: NullPointerException thrown: null Reproducible: Always Steps to Reproduce: 1. After updating the eclipse plugin,2012-04-05 00:00:07,62fca9a,"['tests/bugs170/pr376139/62fca9a Code.java', 'tests/src/org/aspectj/systemtest/ajc170/62fca9a Ajc170Tests.java']"
376351,Bug 376351 attribute problems with Java 7 compilation,"""From the mailing list, this goes wrong: ***R.java*** public class R{ public static void main(String[] args) {System.out.println(new R().getClass().getName());} } ***R1.java*** public class R1 extends R {} ***RAj.aj*** public aspect RAj { private ThreadLocal<Object> inAspect = new ThreadLocal<Object>(); pointcut createR() : execution(R.new()); Object around() : createR() { System.out.println(""""aspect:"""" + inAspect.get() + """":"""" + this); if (inAspect.get() != null) { return proceed(); } else { inAspect.set(this); return new R1(); } } } compile command: /cygdrive/c/Program\ Files/Java/aspectj-1.6.12/bin/ajc.bat -source 1.7 -outxml -outjar araj.jar -classpath """"aspectjrt.jar;."""" RAj.aj run: /cygdrive/c/Program\ Files/Java/aspectj-1.6.12/bin/aj5.bat -classpath """".;./araj.jar"""" R errors: Apr 06, 2012 1:37:40 PM org.aspectj.weaver.tools.Jdk14Trace error SEVERE: register definition failed java.lang.RuntimeException: Problem processing attributes in RAj at org.aspectj.weaver.bcel.BcelObjectType.ensureAspectJAttributesUnpacked(BcelObjectType.java:385)""",2012-04-09 15:13:54,be063b8,"['tests/bugs170/pr376351/be063b8 R.java', 'tests/bugs170/pr376351/be063b8 R1.java', 'tests/bugs170/pr376351/be063b8 RAj.java', 'tests/src/org/aspectj/systemtest/ajc170/be063b8 Ajc170Tests.java', 'weaver/src/org/aspectj/weaver/bcel/asm/be063b8 StackMapAdder.java']"
376990,Bug 376990 iajc does not support source compliance level 1.7,"""Build Identifier: Version: 3.7.2 Build id: M20120208-0800 I am using AspectJ 1.7.0.M1. I changed the examples build.xml to use a source compliance level of 1.7 and verbose=true as follows: <iajc destdir=""""${classes.dir}"""" verbose=""""true"""" source=""""1.7"""" argfiles=""""${list}"""" When I run this using 'ant bean' I get the following line: [iajc] ignored: -source 1.7 at E:\aspectj1.7\doc\examples\build.xml:136: I have tried running the compiler 'ajc' directly specifying -source 1.7 and that works. I am trying to use this on a large development project that uses AspectJ and has been migrated over to Java 7. The project uses ant to do builds so it is critical that iajc support 1.7. The project can't be built if any Java 7 features are used in the source files which defeats the whole purpose of moving to Java 7. Reproducible: Always Steps to Reproduce: 1.Change the examples build.xml to use a source compliance level of 1.7 and verbose=true as follows: <iajc destdir=""""${classes.dir}"""" verbose=""""true"""" source=""""1.7"""" argfiles=""""${list}"""" 2.Run using 'ant bean' I get the following line: [iajc] ignored: -source 1.7 at E:\aspectj1.7\doc\examples\build.xml:136:""",2012-04-17 11:35:31,89c178f,['taskdefs/src/org/aspectj/tools/ant/taskdefs/89c178f AjcTask.java']
382189,Bug 382189 NPE in BcelTypeMunger.createBridgeMethod,"""Build Identifier: Since I updated to version AspectJ Development Tools 2.2.0.e37x-20120529-0900 I get during compile: java.lang.NullPointerException at org.aspectj.weaver.bcel.BcelTypeMunger.createBridgeMethod(BcelTypeMunger.java:1325) at org.aspectj.weaver.bcel.BcelTypeMunger.createAnyBridgeMethodsForCovariance(BcelTypeMunger.java:1272) at org.aspectj.weaver.bcel.BcelTypeMunger.mungeNewMethod(BcelTypeMunger.java:971) at org.aspectj.weaver.bcel.BcelTypeMunger.munge(BcelTypeMunger.java:108) at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeave ... ) Before, I had AspectJ Development Tools 2.2.0.e37x-20120507-1400 and the same project compiled without that exception. Reproducible: Always""",2012-06-10 10:48:00,a748303,"['org.aspectj.matcher/src/org/aspectj/weaver/a748303 ResolvedType.java', 'tests/bugs170/pr382189/covbug/a748303 A.java', 'tests/bugs170/pr382189/covbug/a748303 B.java', 'tests/bugs170/pr382189/covbug/a748303 SuperA.java', 'tests/bugs170/pr382189/covbug/a748303 SuperB.java', 'tests/bugs170/pr382189/covbug/cc/covbug/a748303 A.java', 'tests/bugs170/pr382189/covbug/cc/covbug/a748303 B.java', 'tests/bugs170/pr382189/covbug/cc/covbug/a748303 SuperA.java', 'tests/bugs170/pr382189/covbug/cc/covbug/a748303 SuperB.java', 'tests/bugs170/pr382189/covbug/pj/a748303 Foo.java', 'tests/bugs170/pr382189/one/a748303 A.java', 'tests/bugs170/pr382189/one/a748303 B.java', 'tests/bugs170/pr382189/one/a748303 SuperA.java', 'tests/bugs170/pr382189/one/a748303 SuperB.java', 'tests/bugs170/pr382189/three/a748303 A.java', 'tests/bugs170/pr382189/three/a748303 B.java', 'tests/bugs170/pr382189/three/a748303 SuperA.java', 'tests/bugs170/pr382189/three/a748303 SuperB.java', 'tests/bugs170/pr382189/two/a748303 A.java', 'tests/bugs170/pr382189/two/a748303 B.java', 'tests/bugs170/pr382189/two/a748303 SuperA.java', 'tests/bugs170/pr382189/two/a748303 SuperB.java', 'tests/bugs170/pr382435/one/bug/a748303 A.java', 'tests/bugs170/pr382435/two/bug/a748303 A.java', 'tests/src/org/aspectj/systemtest/ajc170/a748303 Ajc170Tests.java', 'weaver/src/org/aspectj/weaver/bcel/a748303 BcelTypeMunger.java']"
382723,"""Bug 382723 An package-level abstract generic privileged aspect, which extends an abstract generic aspect, gives a IlligalStateException on a method call in around advice""","""Build Identifier: AJDT Version: 2.1.3.e37x-20110628-1900 / AspectJ version: 1.6.12.20110613132200 / eclipse.buildId=M20120208-0800 around advice targetting a generic constructor call in a package visability generic privileged abstract apsect, which extends a abstract generic aspect gives a compiler error when in this around advice a method call is made to a method defined in the aspect, superaspect or abstract defined methods. This only affects around advice and only when the aspect is package-visible and privileged. Workaround: either make the aspect public or remove privileged. Compiler output: Compile error: IllegalStateException thrown: Use generic type, not parameterized type StackTrace: java.lang.IllegalStateException: Use generic type, not parameterized type at org.aspectj.weaver.ResolvedTypeMunger.<init>(ResolvedTypeMunger.java:72) at org.aspectj.weaver.PrivilegedAccessMunger.<init>(PrivilegedAccessMunger.java:31) at org.aspectj.weaver.CrosscuttingMembers.addPrivilegedAccesses(CrosscuttingMembers.java:232) at org.aspectj.weaver.ResolvedType.collectCrosscuttingMembers(ResolvedType.java:756) at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect(CrosscuttingMembersSet.java:89) at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect(CrosscuttingMembersSet.java:69) at org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave(BcelWeaver.java:512) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.ensureWeaverInitialized(AjPipeliningCompilerAdapter.java:529) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.weaveQueuedEntries(AjPipeliningCompilerAdapter.java:509) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.queueForWeaving(AjPipeliningCompilerAdapter.java:447) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.afterProcessing(AjPipeliningCompilerAdapter.java:432) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$after$org_aspectj_ajdt_internal_compiler_CompilerAdapter$5$6b855184(CompilerAdapter.aj:98) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:652) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:392) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:1021) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performBuild(AjBuildManager.java:305) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:185) at org.aspectj.ajde.core.internal.AjdeCoreBuildManager.performBuild(AjdeCoreBuildManager.java:127) at org.aspectj.ajde.core.AjCompiler.build(AjCompiler.java:91) at org.eclipse.ajdt.core.builder.AJBuilder.build(AJBuilder.java:257) at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:728) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239) at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42) at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295) at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351) at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374) at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143) at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54) Session data: eclipse.buildId=M20120208-0800 java.version=1.6.0_22 java.vendor=Sun Microsystems Inc. BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=nl_NL Command-line arguments: -data C:\workspace\ -os win32 -ws win32 -arch x86_64 Reproducible: Always Steps to Reproduce: 1. In a empty AspectJ project create the file Foo.java: import java.util.LinkedList; public class Foo { public LinkedList bar() { new LinkedList(); return null; } } 2. Create the file FooAspect.aj containing: import java.util.AbstractList; import java.util.List; abstract aspect FooAspectParent<T extends List> { protected int getNumber(int k) { return -1*k; } } abstract privileged aspect FooAspect<T extends AbstractList> extends FooAspectParent<T> { pointcut pc(): call(T.new()); T around():pc() { //getNumber(1); //<-- method call to superAspect fails //method(); // <-- method call to abstract local defined method fails //localMethod(); //<-- method call to local private method fails Math.random(); //<-- works hashCode(); //<-- works return null; } private void localMethod(){} protected abstract T method(); } 3. Uncomment one or more of the three commentted functions calls in the around advice and the compiler will reproduce the error. (note: this example with List which is a generic object is just for illustration of hierachy, this problem occured on production code when doing the same with non-generic, but hierachal objects. This way was the easiest to issolate and reproduce the bug the fastest.)""",2012-06-15 06:31:34,ba9d43c,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/ba9d43c AccessForInlineVisitor.java', 'tests/bugs170/pr382723/ba9d43c Foo.java', 'tests/bugs170/pr382723/ba9d43c FooAspect.java', 'tests/bugs170/pr382723/ba9d43c FooAspect2.java', 'tests/bugs170/pr382723/ba9d43c FooAspect3.java', 'tests/src/org/aspectj/systemtest/ajc170/ba9d43c Ajc170Tests.java']"
384189,Bug 384189 make ajcore file creation optional,"""Although cores are useful, there may be situations where you are working around whatever they are reporting and are perhaps unable to pick up a later version of AJ that includes the fix. In these situations it might be helpful to make the creation of cores optional, through a sys prop.""",2012-07-03 14:06:05,5d0e186,['org.aspectj.matcher/src/org/aspectj/weaver/5d0e186 Dump.java']
384398,Bug 384398 Type Mismatch error when using inner classes contained in generic types within ITDs,Please see attached example project. I get the following (strange) compiler error: Type mismatch: cannot convert from A<T>.InnerA<> to A.InnerA BAspect.aj /AspectJInnerclassInGenericTypeBug/src/de/example line 12,2012-07-05 13:42:53,bf949d3,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/bf949d3 EclipseFactory.java', 'tests/bugs171/pr384398/bf949d3 A.java', 'tests/bugs171/pr384398/bf949d3 B.java', 'tests/bugs171/pr384398_2/bf949d3 A.java', 'tests/bugs171/pr384398_2/bf949d3 B.java', 'tests/src/org/aspectj/systemtest/bf949d3 AllTests17.java', 'tests/src/org/aspectj/systemtest/ajc171/bf949d3 Ajc171Tests.java', 'tests/src/org/aspectj/systemtest/ajc171/bf949d3 AllTestsAspectJ171.java']"
384401,Bug 384401 NPE when no pointcut in afterthrowing annotation style advice,"""From the mailing list: import org.aspectj.lang.JoinPoint; import org.aspectj.lang.annotation.AfterThrowing; import org.aspectj.lang.annotation.Aspect; @Aspect public class X { // @AfterThrowing(pointcut=""""execution(* *(..))"""",throwing = """"e"""") @AfterThrowing(throwing = """"e"""") public void bizLoggerWithException(JoinPoint thisJoinPoint,Throwable e) { // .....// do some stuff } } class BizLoggable {}""",2012-07-05 14:04:53,55ebaa1,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/55ebaa1 ValidateAtAspectJAnnotationsVisitor.java', 'tests/bugs171/pr384401/55ebaa1 X.java', 'tests/src/org/aspectj/systemtest/ajc171/55ebaa1 Ajc171Tests.java']"
386049,"""Bug 386049 Error """"must implement abstract inter-type declaration"""" even though build is fine""",,2012-07-26 10:15:19,7c6e936,"['org.aspectj.matcher/src/org/aspectj/weaver/7c6e936 ResolvedType.java', 'tests/bugs171/pr386049/de/scrum_master/galileo/filter/7c6e936 BasicFilter.java', 'tests/bugs171/pr386049/de/scrum_master/galileo/filter/7c6e936 JsoupFilter.java', 'tests/bugs171/pr387568/7c6e936 Code.java', 'tests/src/org/aspectj/systemtest/ajc171/7c6e936 Ajc171Tests.java', 'weaver/src/org/aspectj/weaver/bcel/7c6e936 BcelTypeMunger.java']"
387444,Bug 387444 Softening exception in try-with-resources,,2012-08-16 20:46:55,76d695f,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/76d695f AjProblemReporter.java', 'tests/bugs171/pr387444/76d695f Code.java', 'tests/bugs171/pr387444/76d695f Code2.java', 'tests/src/org/aspectj/systemtest/ajc171/76d695f Ajc171Tests.java', 'tests/src/org/aspectj/systemtest/ajc171/76d695f Ajc171Tests_need17jre.java']"
387718,Bug 387718 RuntimeException when trying to compile broken code,java.lang.RuntimeException at org.aspectj.weaver.NameMangler.makeVisibilityName(NameMangler.java:297) at org.aspectj.weaver.NameMangler.interMethod(NameMangler.java:242) at org.aspectj.weaver.AjcMemberMaker.interMethod(AjcMemberMaker.java:538) at org.aspectj.ajdt.internal.compiler.problem.AjProblemReporter.methodMustOverride(AjProblemReporter.java:385) at org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(M ... dJob.java:241) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54) Compile error: RuntimeException thrown: protected inter-types not allowed,2012-08-21 13:30:11,cbb6f5a,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/problem/cbb6f5a AjProblemReporter.java']
388971,Bug 388971 Double Synthetic attributes on some around advice members,"""Some of the support members in aspects were getting Synthetic attributes added twice (once when compiled, once when used as an aspect library). Some JVMs appear to flag this as a verify error. The fix is simply to check before adding to make sure the attribute isn't added twice.""",2012-09-06 12:34:52,c2ff74f,['weaver/src/org/aspectj/weaver/bcel/c2ff74f LazyMethodGen.java']
389456,Bug 389456 NPE in EclipseTypeMunger.mungeNewMethod(),,2012-09-12 19:05:05,b8ebdc3,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/b8ebdc3 EclipseTypeMunger.java']
389750,Bug 389750 Inconsistent classfile encountered: The undefined type parameter xxx is referenced from within yyy,"""With the declare parents pattern below, I'm getting this **runtime** error (compiler completes ok): Inconsistent classfile encountered: The undefined type parameter ID is referenced from within PersistableAspect If I remove the generics part of the interface declaration, the error goes away. Here's the pattern: interface: ========== package example.trait; // imports... public interface Persistable<ID extends Serializable> { Object getOid(); ID getId(); String getIdString(); long getVersion(); } annotation: =========== package example.anno; // imports... @Target(TYPE) @Retention(RUNTIME) @Trait public @interface Persistable { String in() default """"MONGO""""; StoreType inAsEnum() default StoreType.MONGO; String id() default """"STRING""""; IdType idAsEnum() default IdType.STRING; } aspect: ======= package example.aspect; // imports... public privileged aspect PersistableAspect { public interface I<ID extends Serializable> extends example.trait.Persistable<ID> { } public interface L extends I<Long> { } public interface S extends I<String> { } declare parents : (@Persistable(id=""""LONG"""") *) implements L; declare parents : (@Persistable(id=""""STRING"""") *) implements S; // remaining code is ITDs introducing vars & methods... }""",2012-09-17 14:25:23,b9c7a19,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b9c7a19 AstUtil.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/ast/b9c7a19 InterTypeMethodDeclaration.java', 'tests/bugs172/pr389750/b9c7a19 Clazz.java', 'tests/bugs172/pr389750/b9c7a19 Clazz2.java', 'tests/bugs172/pr389750/b9c7a19 Clazz3.java', 'tests/bugs172/pr389750/b9c7a19 Clazz4.java', 'tests/src/org/aspectj/systemtest/b9c7a19 AllTests17.java', 'tests/src/org/aspectj/systemtest/ajc172/b9c7a19 Ajc172Tests.java', 'tests/src/org/aspectj/systemtest/ajc172/b9c7a19 AllTestsAspectJ172.java']"
389752,Bug 389752 declare parents & @type not matching on annotation properties of enum types,"""NOTE: real project private git repo demonstrating bug has been shared with Andy Clement privately. I'm reporting bug as Andy requested with as much info as I feel I can. I have a case where 'declare parents' and 'declare @type' instructions are not being applied because their type patterns, which use annotations whose properties are of enumerated types, are not matching. Below find the relevant artifacts and their shapes. The lines in the aspect PersistableJpaAspect that are not matching as they should are the 'declare parents' and 'declare @type'. If I change the annotation properties to be of type String and change the type patterns to use string literals (see """"matches"""" comments in annotation: StoreType.JPA => """"JPA"""" and IdType.LONG => """"LONG""""), the matching works properly. enums: ====== public enum StoreType { MONGO, JDO, JPA; } ===== public enum IdType { LONG, STRING; } annotation: =========== public @interface Persistable { StoreType in() default StoreType.MONGO; // doesn't match // matches: String in() default """"MONGO""""; IdType id() default IdType.STRING; // doesn't match // matches: String id() default """"STRING""""; } aspect: ======= public abstract privileged aspect PersistableAspect { public interface I extends ....trait.interfaces.persistence.Persistable { long version(); void version(long version); } public interface L extends I { Long idLong(); void idLong(Long id); } public interface S extends I { String idString(); void idString(String id); } declare @type : I+ : @Configurable; // ... } ===== public privileged aspect PersistableJpaAspect extends PersistableAspect { public interface JL extends L { } public interface JS extends S { } declare parents : (@Persistable(id = IdType.LONG, in = StoreType.JPA) *) implements JL; declare parents : (@Persistable(id = IdType.STRING, in = StoreType.JPA) *) implements JS; declare @type : @Persistable(in=""""JPA"""") JL+ : @Entity; declare @type : @Persistable(in=""""JPA"""") JS+ : @Entity; // ... }""",2012-09-17 14:47:17,0d69bd3,"['org.aspectj.matcher/src/org/aspectj/weaver/0d69bd3 EnumAnnotationValue.java', 'org.aspectj.matcher/src/org/aspectj/weaver/0d69bd3 StandardAnnotation.java', 'org.aspectj.matcher/src/org/aspectj/weaver/patterns/0d69bd3 WildAnnotationTypePattern.java', 'tests/bugs172/pr389752/0d69bd3 Code.java', 'tests/bugs172/pr389752/0d69bd3 Code2.java', 'tests/bugs172/pr389752/0d69bd3 Code3.java', 'tests/src/org/aspectj/systemtest/ajc172/0d69bd3 Ajc172Tests.java']"
389967,Bug 389967 Weaved aspects mechanism does not take into account modified classes,"""The current caching mechanism assumes that if the same class is encountered then its cached weaved version can be used. However, the mechanism uses only the (fully qualified) class name to identify the class and does not take into account the fact that the class bytes may have changed (e.g., the user re-compiled and re-deployed some changes to the same class).""",2012-09-20 02:38:31,9a3cc2b,"['loadtime/src/org/aspectj/weaver/loadtime/9a3cc2b ClassLoaderWeavingAdaptor.java', 'loadtime/src/org/aspectj/weaver/loadtime/9a3cc2b WeavingURLClassLoader.java', 'org.aspectj.matcher/src/org/aspectj/weaver/tools/9a3cc2b GeneratedClassHandler.java', 'util/src/org/aspectj/util/9a3cc2b LangUtil.java', 'weaver/src/org/aspectj/weaver/tools/9a3cc2b WeavingAdaptor.java', 'weaver/src/org/aspectj/weaver/tools/cache/9a3cc2b CacheBacking.java', 'weaver/src/org/aspectj/weaver/tools/cache/9a3cc2b CacheStatistics.java', 'weaver/src/org/aspectj/weaver/tools/cache/9a3cc2b CachedClassEntry.java', 'weaver/src/org/aspectj/weaver/tools/cache/9a3cc2b CachedClassReference.java', 'weaver/src/org/aspectj/weaver/tools/cache/9a3cc2b DefaultCacheFactory.java', 'weaver/src/org/aspectj/weaver/tools/cache/9a3cc2b DefaultCacheKeyResolver.java', 'weaver/src/org/aspectj/weaver/tools/cache/9a3cc2b DefaultFileCacheBacking.java', 'weaver/src/org/aspectj/weaver/tools/cache/9a3cc2b GeneratedCachedClassHandler.java', 'weaver/src/org/aspectj/weaver/tools/cache/9a3cc2b WeavedClassCache.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/9a3cc2b DefaultFileCacheBackingTest.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/9a3cc2b WeavedClassCacheTest.java']"
391123,Bug 391123 Added support for more cache backing(s),,2012-10-04 10:14:52,df1823b,"['build/src/org/aspectj/internal/tools/ant/taskdefs/df1823b Checklics.java', 'util/src/org/aspectj/util/df1823b LangUtil.java', 'weaver/src/org/aspectj/weaver/tools/cache/df1823b AbstractIndexedFileCacheBacking.java', 'weaver/src/org/aspectj/weaver/tools/cache/df1823b AsynchronousFileCacheBacking.java', 'weaver/src/org/aspectj/weaver/tools/cache/df1823b DefaultFileCacheBacking.java', 'weaver/src/org/aspectj/weaver/tools/cache/df1823b FlatFileCacheBacking.java', 'weaver/src/org/aspectj/weaver/tools/cache/df1823b ZippedFileCacheBacking.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/df1823b AbstractCacheBackingTestSupport.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/df1823b AsynchronousFileCacheBackingTestSupport.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/df1823b CacheTests.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/df1823b DefaultCacheKeyResolverTest.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/df1823b DefaultFileCacheBackingTest.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/df1823b FlatFileCacheBackingTest.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/df1823b SimpleClassCacheTest.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/df1823b WeavedClassCacheTest.java', 'weaver/testsrc/org/aspectj/weaver/tools/cache/df1823b ZippedFileCacheBackingTest.java']"
391384,Bug 391384 WildAnnotationTypePattern.java:231,"""OK, I get that this is not supported (and what I *want* here is matching on the existence of the supplied header *among* the headers in the String[]). A feature request might be in order, but a syntax for specifying how you want to match the array would be needed.... The bug that I'm reporting is that trying to *save* this program gets an error that pops up a dialog. This should just become another error marker. It might the compiler that has to change what it throws, but in the end it's the Eclipse IDE that ends up breaking from a user standpoint. (RequestMapping.headers() is of type String[]). public aspect Fail { pointcut testable(): execution(public * @RequestMapping(headers=""""x-test=test"""") com.example..*(..)); } java.lang.RuntimeException at org.aspectj.weaver.patterns.WildAnnotationTypePattern.resolveAnnotationValues(WildAnnotationTypePattern.java:231) at org.aspectj.weaver.patterns.WildAnnotationTypePattern.resolveBindings(WildAnnotationTypePattern.java:325) at org.aspectj.weaver.patterns.WildTypePattern.resolveBindings(WildTypePattern.java:657) at org.aspectj.weaver.patterns.SignaturePattern.resolveBindings(SignaturePattern.java:81) at org.a ... n(Worker.java:53) Compile error: RuntimeException thrown: Compiler limitation: annotation value support not implemented for type java.lang.String[]""",2012-10-09 00:09:54,edb41e3,"['org.aspectj.matcher/src/org/aspectj/weaver/edb41e3 WeaverMessages.java', 'org.aspectj.matcher/src/org/aspectj/weaver/patterns/edb41e3 WildAnnotationTypePattern.java', 'tests/bugs172/pr391384/edb41e3 Code.java', 'tests/src/org/aspectj/systemtest/ajc172/edb41e3 Ajc172Tests.java']"
394234,Bug 394234 Invalid StackMapTable generated in Java 7,"""When compiling for Java 7, AspectJ can compute an invalid StackMapTable. The verifier will throw a ClassNotFoundException when the generated class is loaded. Example: class Parent<T> {} class ChildA<T> extends Parent<T> {} class ChildB<T> extends Parent<T> {} public Object methodWithBadStackMapTable(boolean value) { return value ? new ChildA<String>() : new ChildB<String>(); } javap shows the computed StackMapTable to be: StackMapTable: number_of_entries = 2 frame_type = 15 /* same */ frame_type = 71 /* same_locals_1_stack_item */ stack = [ class """"Parent<T>"""" ] when it should be: StackMapTable: number_of_entries = 2 frame_type = 15 /* same */ frame_type = 71 /* same_locals_1_stack_item */ stack = [ class Parent ]""",2012-11-13 18:48:24,fc55431,['weaver/src/org/aspectj/weaver/bcel/asm/fc55431 StackMapAdder.java']
394535,Bug 394535 Java throws OutOfMemory in call to Class.getGenericSuperclass() on woven class,,2012-11-18 10:54:17,46f9079,"['org.aspectj.matcher/src/org/aspectj/weaver/46f9079 TypeVariable.java', 'tests/bugs172/pr394535/46f9079 Bug.java', 'tests/bugs172/pr394535/46f9079 Bug2.java', 'tests/src/org/aspectj/systemtest/ajc172/46f9079 Ajc172Tests.java']"
395221,Bug 395221 weird error about unbound formals when mixing generics with annotation style,"""From the mailing list: I have following problem with following Aspect: @Aspect public class CounterAspect extends AbstractMoskitoAspect { @Around(value = """"execution(* *(..)) && (@annotation(method))"""") public Object countMethod(ProceedingJoinPoint pjp, Count method) throws Throwable { return count(pjp, method.producerId(), method.subsystem(), method.category()); } @Around(value = """"execution(* *(..)) && (@annotation(method))"""") public Object countByParameter(ProceedingJoinPoint pjp, CountByParameter method) throws Throwable { return countByParameter(pjp, method.producerId(), method.subsystem(), method.category()); } @Around(value = """"execution(* *.*(..)) && (@within(clazz))"""") public Object countClass(ProceedingJoinPoint pjp, Count clazz) throws Throwable { return count(pjp, clazz.producerId(), clazz.subsystem(), clazz.category()); } private Object countByParameter(ProceedingJoinPoint pjp, String aProducerId, String aSubsystem, String aCategory) throws Throwable { .... It works. However, since I have two similar aspects that differ only in using some internal classes, I made my super class using generics: public class AbstractMoskitoAspect<S extends IStats> { @Aspect public class CounterAspect extends AbstractMoskitoAspect<CounterStats> { this breaks the build instantly with the very unhelpful error message: [ERROR] Failed to execute goal org.codehaus.mojo:aspectj-maven-plugin:1.4:compile (default) on project moskito-aop: Compiler errors: [ERROR] error at @Around(value = """"execution(* *(..)) && (@annotation(method))"""") [ERROR] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [ERROR] /Users/another/projects/moskito/moskito-aop/java/net/anotheria/moskito/aop/aspect/CounterAspect.java:24:0::0 the parameter pjp is not bound in [all branches of] pointcut [ERROR] error at @Around(value = """"execution(* *(..)) && (@annotation(method))"""") [ERROR] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [ERROR] /Users/another/projects/moskito/moskito-aop/java/net/anotheria/moskito/aop/aspect/CounterAspect.java:29:0::0 the parameter pjp is not bound in [all branches of] pointcut [ERROR] error at @Around(value = """"execution(* *.*(..)) && (@within(clazz))"""") [ERROR] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [ERROR] /Users/another/projects/moskito/moskito-aop/java/net/anotheria/moskito/aop/aspect/CounterAspect.java:34:0::0 the parameter pjp is not bound in [all branches of] pointcut what am i doing wrong here?""",2012-11-27 17:34:23,3e5af0f,['org.aspectj.matcher/src/org/aspectj/weaver/patterns/3e5af0f AndPointcut.java']
398588,Bug 398588 Using aspect 'requires' clause causes all aspects with 'requires' clauses not be loaded regardless,"""The usage of the 'requires' clause causes all aspects that have have 'requires' clauses not to be loaded regardless of whether the specified required class exists or not. Here is the scenario and why it happens: Let's assume we have a bunch of aspects (A1, A2, A3, etc.) - all with 'requires' clauses and all referencing classes that can be satisfied. ClassLoaderWeavingAdaptor#registerAspects goes over the aspects in a Definition one by one. It reaches aspect A1 and detects that it has a 'requires' clause, and so it invokes BcelWorld#addAspectRequires. This causes the aspect A1 and its required class to be registered in an internal 'aspectRequiredTypes' map. Then the code calls BcelWeaver#addLibraryAspect with A1 as the argument, which in turn calls addOrReplaceAspect which invokes 'hasUnsatisfiedDependency'. The 'hasUnsatisfiedDependency' has been written to run only ONCE - i.e., it checks if it has already run, and if so then it does nothing. Otherwise, it removes from the 'aspectRequiredTypes' map all the types that can be resolved, thus leaving only those that cannot be resolved. In other words, it assumes that after having run (once !!!) any remaining type must be unsatified. Thus, when it is invoked with A1, being the 1st time, it resolves the required type by A1 and leaves the 'aspectRequiredTypes' map empty - but also marks that no further running is required. When the ClassLoaderWeavingAdaptor#registerAspects loop reaches A2, it call BcelWorld#addAspectRequires since A2 also declares a 'requires' clause. This causes A2 and its referenced class to be mapped in the 'aspectRequiredTypes' map. However, when BcelWeaver#addLibraryAspect is called with A2 and the code reaches 'hasUnsatisfiedDependency' - the code assumes that it has already run (which it has - with A1), so it does not check if indeed A2's referenced class can be satisfied (which we assume it can). In other words, all subsequent aspects (A2, A3, etc.) are declared as having unsatisified dependencies - which they don't. The (quick) bugfix seems rather simple: every time BcelWorld#addAspectRequires method is called, it should mark 'aspectRequiredTypesProcessed' as FALSE, in order to force a re-evaluation in case 'hasUnsatisfiedDependency' is called.""",2013-01-20 01:42:35,96ebaae,"['tests/bugs172/pr398588/96ebaae Anno.java', 'tests/bugs172/pr398588/96ebaae Anno2.java', 'tests/bugs172/pr398588/96ebaae AspectA.java', 'tests/bugs172/pr398588/96ebaae AspectB.java', 'tests/bugs172/pr398588/96ebaae AspectC.java', 'tests/bugs172/pr398588/96ebaae AspectD.java', 'tests/bugs172/pr398588/96ebaae Blah.java', 'tests/bugs172/pr398588/96ebaae Code.java', 'tests/bugs172/pr398588/96ebaae Code2.java', 'tests/src/org/aspectj/systemtest/ajc172/96ebaae Ajc172Tests.java', 'weaver/src/org/aspectj/weaver/bcel/96ebaae BcelWorld.java']"
399408,Bug 399408 NPE in ExactAnnotationTypePattern.matches,[ERROR] java.lang.NullPointerException [ERROR] at org.aspectj.weaver.patterns.ExactAnnotationTypePattern.matches(ExactAnnotationTypePattern.java:137) [ERROR] at org.aspectj.weaver.patterns.ExactAnnotationTypePattern.matches(ExactAnnotationTypePattern.java:96) [ERROR] at org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern.matchesExactly(AnyWithAnnotationTypePattern.java:55) [ERROR] at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:132) [ERROR] at org.aspectj.weaver.patterns.DeclareParents.match(DeclareParents.java:63) [ERROR] at org.aspectj.weaver.patterns.DeclareParents.findMatchingNewParents(DeclareParents.java:358) [ERROR] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.doDeclareParents(AjLookupEnvironment.java:885) [ERROR] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveInterTypeDeclarations(AjLookupEnvironment.java:766) [ERROR] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIntertypes(AjLookupEnvironment.java:424) [ERROR] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.weaveIntertypes(AjLookupEnvironment.java:410) [ERROR] at org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment.completeTypeBindings(AjLookupEnvironment.java:261),2013-01-29 12:01:47,d524403,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/compiler/lookup/d524403 EclipseSourceType.java']
399590,Bug 399590 Bad generics signature generated,,2013-01-31 04:17:35,4af4b1e,"['org.aspectj.matcher/src/org/aspectj/weaver/4af4b1e BoundedReferenceType.java', 'tests/bugs172/pr399590/4af4b1e Cage.java', 'tests/bugs172/pr399590/4af4b1e Cage2.java', 'tests/bugs172/pr399590/five/4af4b1e Cage.java', 'tests/bugs172/pr399590/five/4af4b1e Cage2.java', 'tests/bugs172/pr399590/four/4af4b1e Cage.java', 'tests/bugs172/pr399590/four/4af4b1e Cage2.java', 'tests/bugs172/pr399590/three/4af4b1e Cage.java', 'tests/bugs172/pr399590/three/4af4b1e Cage2.java', 'tests/bugs172/pr399590/two/4af4b1e Cage.java', 'tests/bugs172/pr399590/two/4af4b1e Cage2.java', 'tests/src/org/aspectj/systemtest/ajc172/4af4b1e Ajc172Tests.java']"
404594,Bug 404594 Assertion failed at ResolvedType.java:614,,2013-03-28 16:53:10,4e34477,['org.aspectj.matcher/src/org/aspectj/weaver/4e34477 ResolvedType.java']
404600,Bug 404600 Unhandled RuntimeException,"""I'm getting an unhandled RuntimeException from STS 3.2.0.RELEASE: java.lang.RuntimeException at org.aspectj.asm.AsmManager.sameType(AsmManager.java:897) at org.aspectj.asm.AsmManager.removeRelationshipsTargettingThisType(AsmManager.java:711) at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1033) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.weaveQueuedEntries(AjPipeliningCompilerAdapter.java:514) at org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter.queueForWeavin ... ndation-domain/src\/main\/java<com.scispike.foundation.domain.trait.persistence*PersistableAspect.aj%com.scispike.foundation.domain.trait.persistence) Andy Clement, this can be reproduced in our private foundation repo's dev branch at commit d879446f2bfd83b51bf711d2931f4b28ce8c1901. After clicking ok on the exception dialog, there is an error marker on the package statement with text: Internal compiler error: java.lang.RuntimeException: Exception whilst walking up from target com.scispike.foundation.domain.trait.persistence kind=(package declaration) hid=(=foundation-domain/src\/main\/java<com.scispike.foundation.domain.trait.persistence*PersistableAspect.aj%com.scispike.foundation.domain.trait.persistence) at org.aspectj.asm.AsmManager.sameType(AsmManager.java:897) If I do a Project\Clean..., the exception is not reproduced and everything compiles ok. Next edit repros the exception.""",2013-03-29 00:48:42,ff0859d,['weaver/src/org/aspectj/weaver/bcel/ff0859d BcelWeaver.java']
407017,"""Bug 407017 Stack trace being printed, but want to mute it""","""In org.aspectj.ajdt.internal.core.builder.AjState.getDelegate(ReferenceType), there is a call to printStackTrace(). On the AJDT build server, this exception is being printed and causing some noise. Can you replace that call with a call to the IMessageHandler for the build?""",2013-05-01 15:10:46,e6cb508,['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/e6cb508 AjState.java']
408721,Bug 408721 java.util.ConcurrentModificationException when multiple threads enter the weaver,"""I am using AspectJ 1.7.1. Occasionally I see the following exception, which I believe is related to multiple threads initializing some internal state. java.util.ConcurrentModificationException: null at java.util.ArrayList$Itr.checkForComodification(Unknown Source) ~[na:1.7.0_11] at java.util.ArrayList$Itr.next(Unknown Source) ~[na:1.7.0_11] at org.aspectj.weaver.ReferenceType.findDerivativeType(ReferenceType.java:1122) ~[aspectjweaver.jar:1.7.1] at org.aspectj.weaver.TypeFactory.createParameterizedType(TypeFactory.java:44) ~[aspectjweaver.jar:1.7.1] at org.aspectj.weaver.ResolvedType.parameterize(ResolvedType.java:2479) ~[aspectjweaver.jar:1.7.1] at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:673) ~[aspectjweaver.jar:1.7.1] at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:82) ~[aspectjweaver.jar:1.7.1] at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178) ~[aspectjweaver.jar:1.7.1] at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74) ~[aspectjweaver.jar:1.7.1] at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130) ~[aspectjweaver.jar:1.7.1] at org.aspectj.weaver.patterns.KindedPointcut.fastMatch(KindedPointcut.java:130) ~[aspectjweaver.jar:1.7.1] at org.aspectj.weaver.internal.tools.PointcutExpressionImpl.couldMatchJoinPointsInType(PointcutExpressionImpl.java:84) ~[aspectjweaver.jar:1.7.1] at org.springframework.aop.aspectj.AspectJExpressionPointcut.matches(AspectJExpressionPointcut.java:250) ~[spring-aop.jar:3.2.1.RELEASE] at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:208) ~[spring-aop.jar:3.2.1.RELEASE] at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:262) ~[spring-aop.jar:3.2.1.RELEASE] at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:294) ~[spring-aop.jar:3.2.1.RELEASE] at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:118) ~[spring-aop.jar:3.2.1.RELEASE]""",2013-05-22 12:10:52,3f6e166,['org.aspectj.matcher/src/org/aspectj/weaver/3f6e166 ReferenceType.java']
413378,Bug 413378 A constructor added by ITD cannot invoke the method of its super class,"""AspectJ Development Tools 2.2.0.e37x-RELEASE-20120704-0900 It seems *super.someMethod()* can not be correctly resolved in the constructor added by ITD It can be compiled with no problem, but* at runtime, exception is raised.* The class which I'll add a new constructor to: public class Child extends Parent{ public String mParent = """"John""""; public Child(String parent) { this.mParent = parent; } public String getParent() { return this.mParent; } } As we can see, *Child * extends *Parent* class Parent has a method getAge() public class Parent { private String mName = """"John""""; private int mAge = 50; public int getAge(){ return mAge; } } If I add a new constructor for the *Child * in my aspect. public aspect MyTest { public Child.new(String parent, int age) { this(parent); System.out.println(""""Get Age:"""" + super.getAge()); System.out.println(""""Child Name:"""" + this.mParent); } } The above aspect code will trigger an exception. Exception in thread """"main"""" java.lang.NoSuchMethodError: com.test.Child.ajc$superDispatch$com_test_Child$getAge()I at MyTest.ajc$postInterConstructor$MyTest$com_test_Child(MyTest.aj:13) at com.test.Child.<init>(Child.java:1) at MainProgram.main(MainProgram.java:14) Is this a limitation of AspectJ? Is this the only way to resolve this issue? I also attach the src & compiled binary files""",2013-07-20 02:22:28,302c14e,"['tests/bugs174/pr413378/302c14e Code.java', 'tests/src/org/aspectj/systemtest/302c14e AllTests17.java', 'tests/src/org/aspectj/systemtest/ajc174/302c14e Ajc174Tests.java', 'tests/src/org/aspectj/systemtest/ajc174/302c14e AllTestsAspectJ174.java', 'weaver/src/org/aspectj/weaver/bcel/302c14e BcelTypeMunger.java']"
415266,Bug 415266 LTW not working when JMX is enabled,"""When I enable JMX remote management on a JVM along with AspectJ load-time weaving (LTW), our Aspect doesn't appear to get woven in. This are the JVM arguments: -Dvisualvm.display.name=JdbcTimingAspectTest -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=1024 -javaagent:/jars/aspectjweaver.jar -Dorg.aspectj.weaver.loadtime.configuration=com/trgr/cobalt/infrastructure/instrumentation/aspects/timing/jdbc/jdbcmonitor.xml Note that if I don't enable JMX remote management (by remove the -Dcom.sun.management.jmxremote.* JVM arguments), the Aspect works fine.""",2013-08-16 17:51:29,9e992d6,['loadtime/src/org/aspectj/weaver/loadtime/9e992d6 Aj.java']
418129,Bug 418129 Can't introduce annotation onto introduced method from trait-patterned aspect,,2013-09-26 14:31:09,2393bef,"['tests/bugs174/pr418129/2393bef Target.java', 'tests/bugs174/pr418129/2393bef Target2.java', 'tests/bugs174/pr418129/2393bef Target3.java', 'tests/bugs174/pr418129/2393bef Target4.java', 'tests/src/org/aspectj/systemtest/ajc174/2393bef Ajc174Tests.java', 'weaver/src/org/aspectj/weaver/bcel/2393bef BcelClassWeaver.java', 'weaver/src/org/aspectj/weaver/bcel/2393bef BcelWorld.java', 'weaver/src/org/aspectj/weaver/bcel/2393bef LazyMethodGen.java']"
419279,Bug 419279 ajc option to change -Xlint level per-message without Xlintfile,"""The -Xlintfile option is not a great fit for controlling message across multiple build projects, specifically in my case from the pluginManagement section of a maven parent pom. The problem is that you need a local file to configure the per-message output levels (ignore/warning/error) when you really want to specify it in the build script or in a shared file. As an alternative to -Xlintfile, it would be handy to be able to change an Xlint warning level per message using command line options. For example: ajc -Xlint:adviceDidNotMatch=ignore would override the XlintDefault.properties file for the adviceDidNotMatch message. With Regards Rob""",2013-10-11 15:20:08,b2cd5fa,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b2cd5fa AjBuildConfig.java', 'org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/b2cd5fa AjBuildManager.java', 'org.aspectj.matcher/src/org/aspectj/weaver/b2cd5fa Lint.java', 'testing/newsrc/org/aspectj/testing/b2cd5fa CompileSpec.java', 'tests/bugs174/pr419279/b2cd5fa Code.java', 'tests/src/org/aspectj/systemtest/ajc174/b2cd5fa Ajc174Tests.java']"
420210,Bug 420210 Support additional message insert keys in declare error/warning,It would be good to be able to insert the enclosing class name or enclosing member for a joinpoint.,2013-10-23 16:00:16,9319e34,"['org.aspectj.matcher/src/org/aspectj/weaver/9319e34 Checker.java', 'tests/bugs174/extra_inserts/9319e34 Code.java', 'tests/src/org/aspectj/systemtest/ajc174/9319e34 Ajc174Tests.java']"
423257,Bug 423257 LTW - java.lang.VerifyError: Bad return type with generics and local variables,,2013-12-04 19:43:22,dd88d21,"['org.aspectj.ajdt.core/src/org/aspectj/ajdt/internal/core/builder/dd88d21 AjState.java', 'tests/bugs175/pr423257/dd88d21 AspectX.java', 'tests/bugs175/pr423257/dd88d21 Test.java', 'tests/src/org/aspectj/systemtest/dd88d21 AllTests17.java', 'tests/src/org/aspectj/systemtest/ajc175/dd88d21 Ajc175Tests.java', 'tests/src/org/aspectj/systemtest/ajc175/dd88d21 AllTestsAspectJ175.java', 'tests/src/org/aspectj/systemtest/incremental/tools/dd88d21 MultiProjectIncrementalTests.java', 'weaver/src/org/aspectj/weaver/bcel/asm/dd88d21 StackMapAdder.java']"
